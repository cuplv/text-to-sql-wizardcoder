[
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# singer_in_concert ( concert_id, singer_id )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### How many singers do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n#\n### What is the total number of singers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, name, country )\n#\n### Show name, country, age for all singers ordered by age from the oldest to the youngest.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , country , age from singer order by age desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, country, age )\n#\n### What are the names, countries, and ages for every singer in descending order of age?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , country , age from singer order by age desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( country, age, name )\n#\n### What is the average, minimum, and maximum age of all singers from France?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, country, singer_id, name, song_name, song_release_year, is_male )\n#\n### What is the average, minimum, and maximum age for all French singers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, song_release_year, age )\n# concert ( stadium_id )\n# singer_in_concert ( concert_id, singer_id )\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Show the name and the release year of the song by the youngest singer.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song_name , song_release_year from singer order by age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, name, song_release_year )\n#\n### What are the names and release years for all the songs of the youngest singer?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song_name , song_release_year from singer order by age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, country, name, is_male )\n# concert ( concert_id, stadium_id )\n#\n### What are all distinct countries where singers above age 20 are from?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct country from singer where age > 20"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( country, age )\n# singer_in_concert ( singer_id )\n# concert ( concert_id, year )\n# stadium ( location )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are  the different countries with singers above age 20?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct country from singer where age > 20"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( country, name )\n#\n### Show all countries and the number of singers in each country.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country , count ( * ) from singer group by country"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( country, name )\n#\n### How many singers are from each country?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country , count ( * ) from singer group by country"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, name, singer_id )\n# singer_in_concert ( singer_id, concert_id )\n# concert ( concert_id, year, stadium_id )\n# stadium ( stadium_id, name )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### List all song names by singers above the average age.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song_name from singer where age > ( select avg ( age ) from singer )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, singer_id, name, country, song_name, song_release_year, is_male )\n# singer_in_concert ( singer_id, concert_id )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are all the song names by singers who are older than average?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song_name from singer where age > ( select avg ( age ) from singer )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( location, name, capacity, stadium_id, highest, lowest, average )\n# concert ( stadium_id, concert_name, theme, concert_id, year )\n# concert.stadium_id = stadium.stadium_id\n#\n### Show location and name for all stadiums with a capacity between 5000 and 10000.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "location , name from stadium where capacity between 5000 and 10000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( location, name, capacity )\n# concert ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n#\n### What are the locations and names of all stations with capacity between 5000 and 10000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "location , name from stadium where capacity between 5000 and 10000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( capacity, highest, average, stadium_id, location, name, lowest )\n# concert ( stadium_id, concert_id, concert_name, theme, year )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( song_release_year, singer_id, name, country, song_name, age, is_male )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What is the maximum capacity and the average of all stadiums ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( capacity ) , average from stadium"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( capacity, average, highest, lowest )\n# concert ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n#\n### What is the average and maximum capacities for all stadiums ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( capacity ) , max ( capacity ) from stadium"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( name, capacity, highest, average, stadium_id, location )\n# concert ( stadium_id, concert_name, theme, year, concert_id )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( name, country, song_name, song_release_year, age, is_male, singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What is the name and capacity for the stadium with highest average attendance?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , capacity from stadium order by average desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( name, capacity, highest, average, stadium_id )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# singer_in_concert ( concert_id, singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What is the name and capacity for the stadium with the highest average attendance?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , capacity from stadium order by average desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id, name, location, capacity, highest, lowest, average )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# singer_in_concert ( concert_id, singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### How many concerts are there in year 2014 or 2015?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from concert where year = 2014 or year = 2015"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( year, stadium_id, concert_id, concert_name, theme )\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert.stadium_id = stadium.stadium_id\n#\n### How many concerts occurred in 2014 or 2015?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from concert where year = 2014 or year = 2015"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id, name, location, capacity, highest, lowest, average )\n# concert ( concert_id, stadium_id, concert_name, theme, year )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# singer_in_concert ( concert_id, singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Show the stadium name and the number of concerts in each stadium.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### For each stadium, how many concerts play there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( stadium_id, concert_name, theme, concert_id, year )\n# stadium ( stadium_id, name, capacity, location, highest, lowest, average )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Show the stadium name and capacity with most number of concerts in year 2014 or after.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year >= 2014 group by stadium.stadium_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( stadium_id )\n# stadium ( name, capacity )\n# concert.stadium_id = stadium.stadium_id\n#\n### What is the name and capacity of the stadium with the most concerts after 2013 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year > 2013 group by stadium.stadium_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( year )\n# singer_in_concert ( concert_id )\n# stadium ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Which year has most number of concerts?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year from concert group by year order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( year, stadium_id, concert_id, concert_name, theme )\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert.stadium_id = stadium.stadium_id\n#\n### What is the year that had the most concerts?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year from concert group by year order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id )\n# concert ( stadium_id, concert_name )\n# singer_in_concert ( concert_id, singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Show the stadium names without any concert.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from stadium where stadium_id not in ( select stadium_id from concert )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( name )\n# concert ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n#\n### What are the names of the stadiums without any concerts?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from stadium where stadium_id not in ( select stadium_id from concert )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( age, country, singer_id )\n#\n### Show countries where a singer above age 40 and a singer below 30 are from.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country from singer where age > 40 intersect select country from singer where age < 30"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( name, location, capacity, highest, lowest, average )\n# concert ( concert_name, theme, stadium_id, concert_id, year )\n# concert.stadium_id = stadium.stadium_id\n#\n### Show names for all stadiums except for stadiums having a concert in year 2014.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from stadium except select stadium.name from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( name, stadium_id, location, capacity, highest, lowest, average )\n# concert ( stadium_id, concert_id, concert_name, theme, year )\n# concert.stadium_id = stadium.stadium_id\n#\n### What are the names of all stadiums that did not have a concert in 2014?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from stadium except select stadium.name from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( concert_name, theme )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( name, song_name, song_release_year, country, age, is_male )\n# stadium ( name, location, capacity )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Show the name and theme for all concerts and the number of singers in each concert.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "concert.concert_name , concert.theme , count ( * ) from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id group by concert.concert_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( concert_name, theme, concert_id, stadium_id, year )\n# singer ( name, song_name, song_release_year, singer_id, country, age, is_male )\n# singer_in_concert ( concert_id, singer_id )\n# stadium ( name, location, capacity, highest, lowest, average, stadium_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are the names , themes , and number of singers for every concert ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "concert.concert_name , concert.theme , count ( * ) from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id group by concert.concert_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, country )\n# singer_in_concert ( concert_id, singer_id )\n# concert ( concert_id, concert_name, stadium_id )\n# stadium ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### List singer names and number of concerts for each singer.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name , count ( * ) from singer_in_concert join singer on singer_in_concert.singer_id = singer.singer_id group by singer.singer_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, singer_id )\n# concert ( concert_id, concert_name )\n# singer_in_concert ( singer_id, concert_id )\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are the names of the singers and number of concerts for each person?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name , count ( * ) from singer_in_concert join singer on singer_in_concert.singer_id = singer.singer_id group by singer.singer_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( year, stadium_id, concert_name, theme )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( name, singer_id, country, song_name, song_release_year, age, is_male )\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### List all singer names in concerts in year 2014.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name from singer_in_concert join singer on singer_in_concert.singer_id = singer.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = 2014"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( concert_name, year, concert_id )\n# singer ( name, singer_id, song_name, song_release_year )\n# singer_in_concert ( concert_id, singer_id )\n# stadium ( stadium_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are the names of the singers who performed in a concert in 2014?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name from singer_in_concert join singer on singer_in_concert.singer_id = singer.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = 2014"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, country, song_name, song_release_year, age, is_male )\n#\n### what is the name and nation of the singer who have a song having 'Hey' in its name?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , country from singer where song_name like '%Hey%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, country, song_name, singer_id, song_release_year, age, is_male )\n#\n### What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , country from singer where song_name like '%Hey%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id , location , name , capacity , highest , lowest , average )\n# concert ( concert_id , concert_name , theme , stadium_id , year )\n# singer_in_concert ( concert_id , singer_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# concert ( concert_name, stadium_id, year )\n# stadium ( name, location )\n# singer_in_concert ( concert_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( stadium_id, location, name, capacity, highest, lowest, average )\n# concert ( concert_id, concert_name, theme, stadium_id, year )\n# singer_in_concert ( concert_id, singer_id )\n# singer ( singer_id, name, country, song_name, song_release_year, age, is_male )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.singer_id = singer.singer_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### Find the number of concerts happened in the stadium with the highest capacity .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# stadium ( capacity )\n# concert ( stadium_id )\n# singer_in_concert ( concert_id )\n# concert.stadium_id = stadium.stadium_id\n# singer_in_concert.concert_id = concert.concert_id\n#\n### What are the number of concerts that occurred in the stadium with the largest capacity ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( weight, petid, pettype, pet_age )\n# has_pet ( stuid, petid )\n# has_pet.petid = pets.petid\n#\n### Find the number of pets whose weight is heavier than 10.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from pets where weight > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( weight, petid )\n# has_pet ( petid, stuid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### How many pets have a greater weight than 10?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from pets where weight > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pet_age, petid )\n# has_pet ( petid, stuid )\n# student ( stuid, fname, lname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the weight of the youngest dog.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "weight from pets order by pet_age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pet_age, weight )\n# has_pet ( petid, stuid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### How much does the youngest dog weigh?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "weight from pets order by pet_age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, weight, petid, pet_age )\n#\n### Find the maximum weight for each type of pet. List the maximum weight and pet type.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( weight ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, weight )\n# has_pet ( petid, stuid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### List the maximum weight and type for each type of pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( weight ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find number of pets owned by students who are older than 20.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from student join has_pet on student.stuid = has_pet.stuid where student.age > 20"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### How many pets are owned by students that have an age greater than 20?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from student join has_pet on student.stuid = has_pet.stuid where student.age > 20"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( sex, stuid, major, fname, lname, age, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the number of dog pets that are raised by female students (with sex F).\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.sex = 'F' and pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( sex, stuid, lname, fname, age, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( pettype, petid, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### How many dog pets are raised by female students?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.sex = 'F' and pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype )\n# has_pet ( petid )\n# has_pet.petid = pets.petid\n#\n### Find the number of distinct type of pets.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct pettype ) from pets"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, petid )\n# has_pet ( petid, stuid )\n# has_pet.petid = pets.petid\n#\n### How many different types of pet are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct pettype ) from pets"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, stuid, lname, age, sex, major, advisor, city_code )\n# has_pet ( petid, stuid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the first name of students who have cat or dog pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' or pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, stuid, lname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( pettype, petid, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What are the first names of every student who has a cat or dog as a pet?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' or pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, stuid, lname )\n# has_pet ( stuid, petid )\n# pets ( pettype, petid )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the first name of students who have both cat and dog pets .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' intersect select student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, stuid, lname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What are the students' first names who have both cats and dogs as pets?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' intersect select student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'dog'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# has_pet ( stuid, petid )\n# student ( stuid, major, age, lname, fname, sex, advisor, city_code )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the major and age of students who do not have a cat pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "major , age from student where stuid not in ( select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( major, age )\n# has_pet ( stuid, petid )\n# pets ( pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What major is every student who does not own a cat as a pet, and also how old are they?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "major , age from student where stuid not in ( select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the id of students who do not have a cat pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stuid from student except select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# has_pet ( stuid, petid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What are the ids of the students who do not own cats as pets?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "stuid from student except select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, age, stuid, major )\n# has_pet ( stuid, petid )\n# pets ( pettype, pet_age )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the first name and age of students who have a dog but do not have a cat as a pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'dog' and student.stuid not in ( select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, stuid, lname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the first name of every student who has a dog but does not have a cat?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'dog' and student.stuid not in ( select student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, pet_age, weight, petid )\n# has_pet ( stuid, petid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the type and weight of the youngest pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "pettype , weight from pets order by pet_age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, pet_age, weight, petid )\n# has_pet ( stuid, petid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What type of pet is the youngest animal, and how much does it weigh?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "pettype , weight from pets order by pet_age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pet_age, petid, pettype, weight )\n# has_pet ( petid, stuid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the id and weight of all pets whose age is older than 1.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "petid , weight from pets where pet_age > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( petid, pet_age, weight, pettype )\n# has_pet ( stuid, petid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the id and weight of every pet who is older than 1?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "petid , weight from pets where pet_age > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, pet_age, petid, weight )\n# has_pet ( petid, stuid )\n# has_pet.petid = pets.petid\n#\n### Find the average and maximum age for each type of pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( pet_age ) , max ( pet_age ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, pet_age, petid, weight )\n# has_pet ( stuid, petid )\n# student ( lname, fname, age, sex, major, advisor, city_code, stuid )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the average and maximum age for each pet type?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( pet_age ) , max ( pet_age ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, weight, petid, pet_age )\n# has_pet ( petid, stuid )\n# has_pet.petid = pets.petid\n#\n### Find the average weight for each pet type.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( weight ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# pets ( pettype, weight, petid, pet_age )\n# has_pet ( stuid, petid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the average weight for each type of pet?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( weight ) , pettype from pets group by pettype"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, age, stuid, lname )\n# has_pet ( stuid, petid )\n# pets ( pet_age, petid, pettype, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the first name and age of students who have a pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, age, stuid, lname )\n# has_pet ( stuid, petid )\n# pets ( pet_age, petid, pettype, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What are the different first names and ages of the students who do have pets?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the id of the pet owned by student whose last name is 'Smith'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "has_pet.petid from student join has_pet on student.stuid = has_pet.stuid where student.lname = 'Smith'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the id of the pet owned by the student whose last name is 'Smith'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "has_pet.petid from student join has_pet on student.stuid = has_pet.stuid where student.lname = 'Smith'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the number of pets for each student who has any pet and student id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , student.stuid from student join has_pet on student.stuid = has_pet.stuid group by student.stuid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# has_pet ( stuid )\n# student ( stuid, lname, fname, age, sex, major, advisor, city_code )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### For students who have pets , how many pets does each student have ? list their ids instead of names .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , student.stuid from student join has_pet on student.stuid = has_pet.stuid group by student.stuid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, sex )\n# has_pet ( stuid )\n# has_pet.stuid = student.stuid\n#\n### Find the first name and gender of student who have more than one pet.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname , student.sex from student join has_pet on student.stuid = has_pet.stuid group by student.stuid having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( fname, sex, stuid, lname, age, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the first name and gender of the all the students who have more than one pet?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.fname , student.sex from student join has_pet on student.stuid = has_pet.stuid group by student.stuid having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( lname, stuid, fname, age, sex, major, advisor, city_code )\n# pets ( petid, pettype, pet_age, weight )\n#\n### Find the last name of the student who has a cat that is age 3.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.lname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pet_age = 3 and pets.pettype = 'cat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( lname, stuid, fname, age, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### What is the last name of the student who has a cat that is 3 years old?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student.lname from student join has_pet on student.stuid = has_pet.stuid join pets on pets.petid = has_pet.petid where pets.pet_age = 3 and pets.pettype = 'cat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( age, stuid, lname, fname, sex, major, advisor, city_code )\n# has_pet ( stuid, petid )\n# pets ( petid, pettype, pet_age, weight )\n# has_pet.stuid = student.stuid\n# has_pet.petid = pets.petid\n#\n### Find the average age of students who do not have any pet .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from student where stuid not in ( select stuid from has_pet )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student ( age, stuid )\n# has_pet ( stuid )\n# has_pet.stuid = student.stuid\n#\n### What is the average age for all students who do not own any pets ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from student where stuid not in ( select stuid from has_pet )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many continents are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from continents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( continent, countryid, countryname )\n# car_makers ( country, id, maker, fullname )\n# model_list ( maker, modelid, model )\n# car_names ( model, makeid, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of continents?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from continents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( continent, countryid, countryname )\n# countries.continent = continents.contid\n#\n### How many countries does each continent have? List the continent id, continent name and the number of countries.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continents.contid , continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent group by continents.contid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# countries.continent = continents.contid\n#\n### For each continent, list its id, name, and how many countries it has?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continents.contid , continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent group by continents.contid"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( continent )\n# countries ( countryname, continent )\n# countries.continent = continents.contid\n#\n### How many countries are listed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from countries"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, countryid )\n#\n### How many countries exist?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from countries"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# model_list.maker = car_makers.id\n#\n### How many models does each car maker produce? List maker full name, id and the number.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.fullname , car_makers.id , count ( * ) from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( fullname, id, maker, country )\n# model_list ( maker, modelid )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### What is the full name of each car maker, along with its id and how many models it produces?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.fullname , car_makers.id , count ( * ) from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower )\n# model_list ( modelid, model )\n# car_names ( makeid, model, make )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which model of the car has the minimum horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id order by cars_data.horsepower asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, id, mpg, cylinders, edispl, weight, accelerate, year )\n# car_names ( model, makeid, make )\n# model_list ( modelid, maker, model )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the model of the car with the smallest amount of horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id order by cars_data.horsepower asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight )\n# car_names ( model )\n# cars_data.id = car_names.makeid\n#\n### Find the model of the car whose weight is below the average weight.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.weight < ( select avg ( weight ) from cars_data )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, id, mpg, cylinders, edispl, horsepower, accelerate, year )\n# model_list ( modelid, maker )\n# car_names ( model, makeid )\n# car_makers ( id, maker, fullname, country )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the model for the car with a weight smaller than the average?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.weight < ( select avg ( weight ) from cars_data )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, fullname, country, id )\n# cars_data ( year, mpg, cylinders, edispl, horsepower, weight, accelerate, id )\n# model_list ( maker, model, modelid )\n# car_names ( model, makeid, make )\n# countries ( countryname, countryid )\n# continents ( continent, contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Find the name of the makers that produced some cars in the year of 1970?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.year = '1970'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, id, mpg, cylinders, edispl, horsepower, weight, accelerate )\n# car_makers ( maker, id, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the name of the different car makers who produced a car in 1970?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.year = '1970'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, id )\n# car_names ( makeid, make, model )\n# model_list ( modelid, maker )\n# car_makers ( id, maker, fullname, country )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Find the make and production time of the cars that were produced in the earliest year?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.make , cars_data.year from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.year = ( select min ( year ) from cars_data )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, country, fullname, id )\n# cars_data ( year, horsepower, mpg, cylinders, edispl, weight, accelerate, id )\n# car_names ( make, model, makeid )\n# model_list ( model, maker, modelid )\n# countries ( countryname, continent, countryid )\n# continents ( continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the maker of the carr produced in the earliest year and what year was it?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.make , cars_data.year from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.year = ( select min ( year ) from cars_data )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year )\n# model_list ( model )\n# car_names ( model )\n# car_makers ( id )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which distinct car models are the produced after 1980?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.year > 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year )\n# car_names ( model )\n# cars_data.id = car_names.makeid\n#\n### What are the different models for the cards produced after 1980?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.year > 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid )\n# countries ( countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many car makers are there in each continents? List the continent name and the count.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent join car_makers on countries.countryid = car_makers.country group by continents.continent"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( continent )\n# countries ( continent, countryname )\n# car_makers ( country, maker, fullname )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n#\n### What is the name of each continent and how many car makers are there in each one?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent join car_makers on countries.countryid = car_makers.country group by continents.continent"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, countryid, continent )\n# car_makers ( maker, fullname, country )\n# continents ( continent, contid )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which of the countries has the most car makers? List the country name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname from car_makers join countries on car_makers.country = countries.countryid group by car_makers.country order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( country, maker )\n# countries ( countryname, countryid )\n# continents ( continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n#\n### What is the name of the country with the most car makers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname from car_makers join countries on car_makers.country = countries.countryid group by car_makers.country order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### How many car models are produced by each maker ? Only list the count and the maker full name .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , car_makers.fullname from model_list join car_makers on model_list.maker = car_makers.id group by car_makers.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# model_list.maker = car_makers.id\n#\n### What is the number of car models that are produced by each maker and what is the id and full name of each maker?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , car_makers.fullname , car_makers.id from model_list join car_makers on model_list.maker = car_makers.id group by car_makers.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, id )\n# model_list ( modelid, maker )\n# car_names ( makeid, model )\n# cars_data ( id, accelerate, mpg, cylinders, edispl, horsepower, weight, year )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the accelerate of the car make amc hornet sportabout (sw)?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'amc hornet sportabout (sw)'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, id, mpg, cylinders, edispl, horsepower, weight, year )\n# car_names ( makeid, model, make )\n# model_list ( modelid, maker, model )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How much does the car accelerate that makes amc hornet sportabout (sw)?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'amc hornet sportabout (sw)'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( country, maker )\n# countries ( countryname, countryid )\n# continents ( contid )\n# model_list ( maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many car makers are there in france?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, country )\n# countries ( countryname )\n# car_makers.country = countries.countryid\n#\n### What is the number of makers of care in France?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( country, id, maker, fullname )\n# model_list ( maker, model, modelid )\n# model_list.maker = car_makers.id\n#\n### How many car models are produced in the usa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from model_list join car_makers on model_list.maker = car_makers.id join countries on car_makers.country = countries.countryid where countries.countryname = 'usa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, countryid )\n# car_makers ( maker, country )\n# model_list ( model, maker )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n#\n### What is the count of the car models produced in the United States?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from model_list join car_makers on model_list.maker = car_makers.id join countries on car_makers.country = countries.countryid where countries.countryname = 'usa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, cylinders )\n#\n### What is the average miles per gallon(mpg) of the cars with 4 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( mpg ) from cars_data where cylinders = 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, cylinders )\n#\n### What is the average miles per gallon of all the cards with 4 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( mpg ) from cars_data where cylinders = 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, cylinders, year )\n#\n### What is the smallest weight of the car produced with 8 cylinders on 1974 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( weight ) from cars_data where cylinders = 8 and year = 1974"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, cylinders, year )\n#\n### What is the minimum weight of the car with 8 cylinders produced in 1974 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( weight ) from cars_data where cylinders = 8 and year = 1974"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, id, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### What are all the makers and models?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "maker , model from model_list"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( countryname, countryid, continent )\n# car_makers ( id, maker, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the makers and models?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "maker , model from model_list"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, id, country, fullname )\n# countries ( countryname, countryid, continent )\n# continents ( contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n#\n### What are the countries having at least one car maker? List name and id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname , countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) >= 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# car_makers.country = countries.countryid\n#\n### What are the names and ids of all countries with at least one car maker?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname , countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) >= 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, id )\n# car_names ( makeid, model )\n# model_list ( modelid, maker )\n# car_makers ( id, maker )\n# countries ( countryid, countryname )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of the cars with horsepower more than 150?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where horsepower > 150"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, id, mpg, cylinders, edispl, weight, accelerate, year )\n# car_names ( makeid, model, make )\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of cars with a horsepower greater than 150?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where horsepower > 150"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, year )\n# car_names ( makeid, model )\n# model_list ( modelid, maker )\n# car_makers ( maker, country )\n# countries ( continent )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the average weight of cars each year?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( weight ) , year from cars_data group by year"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, year, id )\n# car_names ( makeid )\n# model_list ( modelid, maker )\n# car_makers ( id, maker, fullname, country )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the average weight and year for each year?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( weight ) , year from cars_data group by year"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, continent )\n# continents ( continent )\n# car_makers ( maker, fullname, country )\n# model_list ( maker, model )\n# car_names ( model, make )\n# cars_data ( mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which countries in europe have at least 3 car manufacturers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname from countries join continents on countries.continent = continents.contid join car_makers on countries.countryid = car_makers.country where continents.continent = 'europe' group by countries.countryname having count ( * ) >= 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid )\n# countries ( countryname, continent )\n# car_makers ( maker, fullname, country )\n# model_list ( maker, model )\n# car_names ( makeid, model )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### What are the names of all European countries with at least 3 manufacturers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryname from countries join continents on countries.continent = continents.contid join car_makers on countries.countryid = car_makers.country where continents.continent = 'europe' group by countries.countryname having count ( * ) >= 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower )\n# model_list ( modelid, maker )\n# car_makers ( id, maker )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the maximum horsepower and the make of the car models with 3 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.horsepower , car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 3 order by cars_data.horsepower desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, cylinders, id )\n# model_list ( maker, modelid, model )\n# car_makers ( maker, id, fullname, country )\n# model_list.maker = car_makers.id\n#\n### What is the largest amount of horsepower for the models with 3 cylinders and what make is it?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.horsepower , car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 3 order by cars_data.horsepower desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, id )\n# model_list ( modelid, maker )\n# car_names ( model, makeid )\n# car_makers ( id, maker )\n# countries ( countryid, countryname )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which model saves the most gasoline? That is to say, have the maximum miles per gallon.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id order by cars_data.mpg desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, id, cylinders, edispl, horsepower, weight, accelerate, year )\n# car_names ( makeid, model, make )\n# model_list ( modelid, maker, model )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the car model with the highest mpg ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id order by cars_data.mpg desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, year )\n# car_names ( makeid )\n# model_list ( modelid )\n# car_makers ( id )\n# countries ( countryid )\n# continents ( contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the average horsepower of the cars before 1980?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( horsepower ) from cars_data where year < 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, horsepower, id, mpg, cylinders, edispl, weight, accelerate )\n# car_names ( makeid, model, make )\n# cars_data.id = car_names.makeid\n#\n### What is the average horsepower for all cars produced before 1980 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( horsepower ) from cars_data where year < 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# car_makers ( id, maker, fullname, country )\n# cars_data ( id, edispl, mpg, cylinders, horsepower, weight, accelerate, year )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the average edispl of the cars of model volvo?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( cars_data.edispl ) from car_names join cars_data on car_names.makeid = cars_data.id where car_names.model = 'volvo'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker )\n# model_list ( maker )\n# car_names ( model )\n# cars_data ( edispl, id )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the average edispl for all volvos?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( cars_data.edispl ) from car_names join cars_data on car_names.makeid = cars_data.id where car_names.model = 'volvo'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders )\n#\n### What is the maximum accelerate for different number of cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( accelerate ) , cylinders from cars_data group by cylinders"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, cylinders, id, mpg, edispl, horsepower, weight, year )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the maximum accelerate for all the different cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( accelerate ) , cylinders from cars_data group by cylinders"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# model_list ( modelid, model )\n# car_makers ( id, maker )\n# car_names ( makeid, model )\n# countries ( countryid, countryname )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### Which model has the most version(make) of cars?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "model from car_names group by model order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# model_list ( modelid, maker, model )\n# car_names ( model, makeid, make )\n# car_makers ( country, id, maker, fullname )\n# countries ( continent, countryid, countryname )\n# continents ( continent, contid )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What model has the most different versions?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "model from car_names group by model order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders, id, mpg )\n# car_makers ( id, maker )\n# model_list ( maker )\n# car_names ( model )\n# countries ( countryid )\n# continents ( contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many cars have more than 4 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where cylinders > 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders, id )\n# model_list ( modelid, maker )\n# car_makers ( id, maker, fullname, country )\n# car_names ( makeid, model, make )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of cars with more than 4 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where cylinders > 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, id )\n# car_names ( makeid )\n# model_list ( modelid )\n# car_makers ( id )\n# countries ( countryid )\n# continents ( contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### how many cars were produced in 1980?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where year = 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, id, mpg, cylinders, edispl, horsepower, weight, accelerate )\n# model_list ( modelid, maker )\n# car_makers ( id, maker )\n# countries ( countryid, countryname )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n#\n### In 1980, how many cars were made?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where year = 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( fullname, id )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### How many car models were produced by the maker with full name American Motor Company?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from car_makers join model_list on car_makers.id = model_list.maker where car_makers.fullname = 'American Motor Company'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, id, fullname, country )\n# model_list ( model, maker, modelid )\n# car_names ( model, makeid, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries ( countryname, countryid, continent )\n# continents ( continent, contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of car models created by the car maker American Motor Company?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from car_makers join model_list on car_makers.id = model_list.maker where car_makers.fullname = 'American Motor Company'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, fullname )\n# model_list ( modelid, maker )\n# car_names ( makeid, model )\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which makers designed more than 3 car models? List full name and the id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.fullname , car_makers.id from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) > 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname )\n# model_list ( maker, model )\n# car_names ( model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### What are the names and ids of all makers with more than 3 models?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.fullname , car_makers.id from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) > 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, fullname, country )\n# model_list ( maker, model )\n# cars_data ( weight, id )\n# car_names ( makeid, model, make )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from car_names join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id join cars_data on car_names.makeid = cars_data.id where car_makers.fullname = 'General Motors' or cars_data.weight > 3500"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( maker, fullname, country, id )\n# model_list ( maker, model, modelid )\n# cars_data ( weight, id, mpg, cylinders, edispl, horsepower, accelerate, year )\n# model_list.maker = car_makers.id\n#\n### What are the different models created by either the car maker General Motors or weighed more than 3500?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from car_names join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id join cars_data on car_names.makeid = cars_data.id where car_makers.fullname = 'General Motors' or cars_data.weight > 3500"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, weight, id )\n# car_names ( makeid, model )\n# cars_data.id = car_names.makeid\n#\n### In which years cars were produced weighing no less than 3000 and no more than 4000 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct year from cars_data where weight between 3000 and 4000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( year, weight, id )\n# car_names ( makeid, model )\n# model_list ( modelid, maker )\n# car_makers ( id, maker, country )\n# countries ( countryid, countryname )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct year from cars_data where weight between 3000 and 4000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, horsepower )\n# car_names ( makeid )\n# model_list ( modelid )\n# car_makers ( id, maker )\n# countries ( countryid, countryname )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the horsepower of the car with the largest accelerate?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, horsepower )\n# car_names ( makeid )\n# model_list ( maker )\n# car_makers ( maker )\n# countries ( countryid )\n# continents ( contid )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the horsepower of the car with the greatest accelerate?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.horsepower from cars_data order by cars_data.accelerate desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# model_list ( model )\n# car_names ( model )\n# cars_data ( cylinders, accelerate )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### For model volvo, how many cylinders does the car with the least accelerate have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'volvo' order by cars_data.accelerate asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# model_list ( modelid )\n# car_makers ( id, maker )\n# car_names ( makeid, model )\n# cars_data ( id, accelerate, cylinders )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### For a volvo model, how many cylinders does the version with least accelerate have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cars_data.cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'volvo' order by cars_data.accelerate asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, horsepower, id )\n# car_names ( makeid, model )\n# model_list ( maker, modelid )\n# car_makers ( id, maker )\n# countries ( countryid, countryname )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many cars have a larger accelerate than the car with the largest horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where accelerate > ( select accelerate from cars_data order by horsepower desc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( accelerate, horsepower, id, mpg, cylinders, edispl, weight, year )\n# car_names ( makeid, model, make )\n# model_list ( modelid, maker, model )\n# car_makers ( id, maker, fullname, country )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of cars with a greater accelerate than the one with the most horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where accelerate > ( select accelerate from cars_data order by horsepower desc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, continent )\n# car_makers ( country )\n# car_makers.country = countries.countryid\n#\n### How many countries has more than 2 car makers ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# car_makers.country = countries.countryid\n#\n### What is the number of countries with more than 2 car makers ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders, mpg, edispl, horsepower, weight, accelerate, year )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### How many cars has over 6 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where cylinders > 6"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders, id, mpg, horsepower, weight )\n# model_list ( maker, modelid, model )\n# car_names ( model, makeid )\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, country )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What is the number of carsw ith over 6 cylinders?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cars_data where cylinders > 6"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( cylinders, horsepower, id )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### For the cars with 4 cylinders, which model has the largest horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, cylinders )\n# model_list ( model, maker )\n# car_makers ( maker, country )\n# model_list.maker = car_makers.id\n#\n### For all of the 4 cylinder cars, which model has the most horsepower?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, cylinders, id, mpg, edispl, weight, accelerate, year )\n# car_names ( makeid, make )\n# model_list ( modelid, maker, model )\n# car_makers ( id, maker, fullname, country )\n# countries ( countryid, countryname, continent )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.makeid , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.horsepower > ( select min ( horsepower ) from cars_data ) and cars_data.cylinders <= 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( horsepower, cylinders, id )\n# car_names ( makeid, make )\n# cars_data.id = car_names.makeid\n#\n### Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_names.makeid , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.horsepower > ( select min ( horsepower ) from cars_data ) and cars_data.cylinders < 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, cylinders, year, id, edispl, horsepower, weight, accelerate )\n# model_list ( maker, modelid, model )\n#\n### What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( mpg ) from cars_data where cylinders = 8 or year < 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( mpg, cylinders, year )\n#\n### What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( mpg ) from cars_data where cylinders = 8 or year < 1980"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# continents ( contid, continent )\n# countries ( countryid, countryname, continent )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### Which models are lighter than 3500 but not built by the 'Ford Motor Company'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id join car_makers on model_list.maker = car_makers.id where cars_data.weight < 3500 and car_makers.fullname != 'Ford Motor Company'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cars_data ( weight, id, mpg, cylinders, edispl, horsepower, accelerate, year )\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# model_list.maker = car_makers.id\n#\n### What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id join car_makers on model_list.maker = car_makers.id where cars_data.weight < 3500 and car_makers.fullname != 'Ford Motor Company'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, countryid )\n# car_makers ( country, maker, id, fullname )\n# continents ( contid, continent )\n# model_list ( maker, modelid, model )\n# car_names ( model, makeid, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the name of the countries where there is not a single car maker?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countryname from countries except select countries.countryname from countries join car_makers on countries.countryid = car_makers.country"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryname, countryid )\n# car_makers ( country, maker, id )\n# continents ( contid, continent )\n# model_list ( maker, model )\n# car_names ( model, makeid, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the names of the countries with no car makers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countryname from countries except select countries.countryname from countries join car_makers on countries.countryid = car_makers.country"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n#\n### Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) >= 2 intersect select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model group by car_makers.id having count ( * ) > 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# model_list ( maker, modelid, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) >= 2 intersect select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model group by car_makers.id having count ( * ) > 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# car_makers ( id, maker, fullname, country )\n# countries ( countryid, countryname, continent )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id, mpg, cylinders, edispl, horsepower, weight, accelerate, year )\n# continents ( contid, continent )\n# countries.continent = continents.contid\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 union select countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.id = model_list.maker where model_list.model = 'fiat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countries ( countryid, countryname )\n# car_makers ( id, maker, country )\n# model_list ( modelid, maker, model )\n# car_names ( makeid, model, make )\n# cars_data ( id )\n# car_makers.country = countries.countryid\n# model_list.maker = car_makers.id\n# car_names.model = model_list.model\n# cars_data.id = car_names.makeid\n#\n### What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 union select countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.id = model_list.maker where model_list.model = 'fiat'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, country, abbreviation, uid )\n# airports ( airportname, country, airportcode, city, countryabbrev )\n#\n### Which country does Airline \"JetBlue Airways\" belong to?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country from airlines where airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( country, airline )\n# airports ( country, airportname )\n#\n### What country is Jetblue Airways affiliated with?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country from airlines where airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation, airline, uid )\n# airports ( airportname, airportcode, countryabbrev, city )\n#\n### What is the abbreviation of Airline \"JetBlue Airways\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "abbreviation from airlines where airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation )\n# airports ( airportcode, airportname )\n# flights ( airline, sourceairport, destairport, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which abbreviation corresponds to Jetblue Airways?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "abbreviation from airlines where airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country )\n# airports ( airportname, airportcode, country, countryabbrev )\n#\n### List all airline names and their abbreviations in \"USA\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airline , abbreviation from airlines where country = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, uid, country )\n# airports ( airportname, airportcode, city, country, countryabbrev )\n# flights ( airline, flightno, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are the airline names and abbreviations for airlines in the USA?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airline , abbreviation from airlines where country = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n#\n### List the airport code and name in the city of Anthony.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportcode , airportname from airports where city = 'Anthony'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights ( sourceairport, destairport, airline, flightno )\n# airlines ( airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the airport code and airport name corresonding to the city Anthony.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportcode , airportname from airports where city = 'Anthony'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, uid, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n#\n### How many airlines do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, uid )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( airportname, airportcode, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What is the total number of airlines?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n#\n### How many airports do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airports"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode )\n#\n### Return the number of  airports.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airports"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# airlines ( airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno, airline, sourceairport, destairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# airlines ( airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the number of flights.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation, airline )\n# airports ( country, airportcode, airportname )\n# flights ( airline, flightno, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airline has abbreviation 'UAL'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airline from airlines where abbreviation = 'UAL'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation, airline, uid, country )\n# airports ( airportcode, countryabbrev, airportname, city, country )\n# flights ( airline, destairport, sourceairport, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the airline with abbreviation 'UAL'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airline from airlines where abbreviation = 'UAL'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( country, airline, abbreviation, uid )\n# airports ( country, airportname, airportcode, city )\n#\n### How many airlines are from USA?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines where country = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( country, airline, abbreviation, uid )\n# airports ( country, airportname, airportcode, city, countryabbrev )\n# flights ( airline, flightno, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the number of airlines in the USA.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines where country = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, city, country )\n# flights ( sourceairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which city and country is the Alton airport at?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city , country from airports where airportname = 'Alton'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, city, country, airportcode, countryabbrev )\n# flights ( sourceairport, destairport, airline, flightno )\n# airlines ( airline, abbreviation, country, uid )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the city and country for the Alton airport.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city , country from airports where airportname = 'Alton'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights ( sourceairport, destairport, airline, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What is the airport name for airport 'AKO'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where airportcode = 'AKO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights ( destairport, sourceairport, airline, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the name of the airport with code 'AKO'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where airportcode = 'AKO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, city, airportcode, country, countryabbrev )\n# airlines ( airline, abbreviation, country, uid )\n# flights ( sourceairport, destairport, airline, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are airport names at City 'Aberdeen'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, city, airportcode )\n# flights ( sourceairport, destairport, airline )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are the names of airports in Aberdeen?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, airline, flightno, destairport )\n#\n### How many flights depart from 'APG'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights where sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, flightno, airline, destairport )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Count the number of flights departing from 'APG'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights where sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, airline, flightno, sourceairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# airlines ( airline, abbreviation, country, uid )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights have destination ATO?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights where destairport = 'ATO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport )\n# airports ( airportcode )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Count the number of flights into ATO.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights where destairport = 'ATO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country, uid )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights ( airline, flightno, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights depart from City Aberdeen?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, destairport, airline, flightno )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the number of flights departing from Aberdeen.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights ( destairport, sourceairport, airline, flightno )\n# airlines ( uid, airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights arriving in Aberdeen city?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, flightno, airline, sourceairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the number of flights arriving in Aberdeen.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights ( flightno, sourceairport, destairport, airline )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode join airports on flights.sourceairport = airports.airportcode where airports.city = 'Ashley' and airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, destairport, airline, flightno )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights fly from Aberdeen to Ashley?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode join airports on flights.sourceairport = airports.airportcode where airports.city = 'Ashley' and airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country, uid )\n# flights ( airline, flightno, sourceairport, destairport )\n#\n### How many flights does airline 'JetBlue Airways' have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airlines on flights.airline = airlines.uid where airlines.airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, abbreviation, country, uid )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the number of Jetblue Airways flights.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airlines on flights.airline = airlines.uid where airlines.airline = 'JetBlue Airways'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, destairport )\n# airlines ( airline )\n#\n### How many 'United Airlines' flights go to Airport 'ASY'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines join flights on flights.airline = airlines.uid where airlines.airline = 'United Airlines' and flights.destairport = 'ASY'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, abbreviation, country )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Count the number of United Airlines flights arriving in ASY Airport.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines join flights on flights.airline = airlines.uid where airlines.airline = 'United Airlines' and flights.destairport = 'ASY'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, sourceairport )\n# airlines ( airline )\n# airports ( airportcode )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many 'United Airlines' flights depart from Airport 'AHD'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines join flights on flights.airline = airlines.uid where airlines.airline = 'United Airlines' and flights.sourceairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Return the number of United Airlines flights leaving from AHD Airport.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from airlines join flights on flights.airline = airlines.uid where airlines.airline = 'United Airlines' and flights.sourceairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many United Airlines flights go to City 'Aberdeen'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode join airlines on airlines.uid = flights.airline where airports.city = 'Aberdeen' and airlines.airline = 'United Airlines'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, uid, abbreviation, country )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Count the number of United Airlines flights that arrive in Aberdeen.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode join airlines on airlines.uid = flights.airline where airports.city = 'Aberdeen' and airlines.airline = 'United Airlines'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, flightno )\n# airports ( city, airportcode )\n# airlines ( uid )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which city has most number of arriving flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.city from airports join flights on airports.airportcode = flights.destairport group by airports.city order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, airline, flightno, sourceairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which city has the most frequent destination airport?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.city from airports join flights on airports.airportcode = flights.destairport group by airports.city order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, destairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which city has most number of departing flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.city from airports join flights on airports.airportcode = flights.sourceairport group by airports.city order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, airline, flightno )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which city is the most frequent source airport?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.city from airports join flights on airports.airportcode = flights.sourceairport group by airports.city order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, city, airportname, country, countryabbrev )\n#\n### What is the code of airport that has the highest number of flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.airportcode from airports join flights on airports.airportcode = flights.destairport or airports.airportcode = flights.sourceairport group by airports.airportcode order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, sourceairport, airline )\n# airports ( airportcode, airportname, city, country )\n# airlines ( airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What is the airport code of the airport with the most flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.airportcode from airports join flights on airports.airportcode = flights.destairport or airports.airportcode = flights.sourceairport group by airports.airportcode order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, sourceairport, airline, flightno )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What is the code of airport that has fewest number of flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.airportcode from airports join flights on airports.airportcode = flights.destairport or airports.airportcode = flights.sourceairport group by airports.airportcode order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, airline, flightno, destairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the code of the airport with the least flights.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airports.airportcode from airports join flights on airports.airportcode = flights.destairport or airports.airportcode = flights.sourceairport group by airports.airportcode order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, uid, abbreviation, country )\n# airports ( airportname, airportcode, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airline has most number of flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, uid, abbreviation, country )\n#\n### What airline serves the most flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation, country, airline )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( airportcode, country, airportname, city, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find the abbreviation and country of the airline that has fewest number of flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.airline group by airlines.airline order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( abbreviation, country, airline, uid )\n# flights ( airline, sourceairport, destairport, flightno )\n# airports ( country, airportcode, airportname, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What is the abbreviation of the airilne has the fewest flights and what country is it in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.airline group by airlines.airline order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, airline, flightno )\n# airports ( airportcode, airportname, city )\n# airlines ( airline, uid, abbreviation )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are airlines that have some flight departing from airport 'AHD'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( sourceairport, airline, flightno, destairport )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# airlines ( airline, uid, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airlines have a flight with source airport AHD?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( airline, abbreviation, country, uid )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are airlines that have flights arriving at airport 'AHD'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.destairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, airline, flightno, sourceairport )\n# airlines ( airline, uid, abbreviation, country )\n#\n### Which airlines have a flight with destination airport AHD?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.destairport = 'AHD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country, uid )\n# flights ( airline, sourceairport, destairport, flightno )\n# airports ( airportcode, country, countryabbrev, city, airportname )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find all airlines that have flights from both airports 'APG' and 'CVO'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'APG' intersect select airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'CVO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# airlines ( airline, abbreviation, country, uid )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airlines have departing flights from both APG and CVO airports?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'APG' intersect select airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'CVO'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find all airlines that have flights from airport 'CVO' but not from 'APG'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'CVO' except select airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno, sourceairport, destairport )\n# airlines ( uid, airline, abbreviation, country )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airlines have departures from CVO but not from APG airports?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'CVO' except select airlines.airline from airlines join flights on airlines.uid = flights.airline where flights.sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, uid, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find all airlines that have at least 10 flights.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline having count ( * ) > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n#\n### Which airlines have at least 10 flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline having count ( * ) > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( uid, airline, abbreviation, country )\n# flights ( airline, flightno, sourceairport, destairport )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find all airlines that have fewer than 200 flights.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline having count ( * ) < 200"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( airline, flightno )\n# airlines ( uid, airline, abbreviation )\n# airports ( airportcode, airportname, country, countryabbrev, city )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airlines have less than 200 flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.airline having count ( * ) < 200"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( airline, abbreviation, uid, country )\n# flights ( flightno, airline, sourceairport, destairport )\n#\n### What are flight numbers of Airline \"United Airlines\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airlines on airlines.uid = flights.airline where airlines.airline = 'United Airlines'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno, airline, sourceairport, destairport )\n# airlines ( airline, abbreviation, country, uid )\n# airports ( airportcode, airportname, country, countryabbrev, city )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which flight numbers correspond to United Airlines flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airlines on airlines.uid = flights.airline where airlines.airline = 'United Airlines'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights ( flightno, airline, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are flight numbers of flights departing from Airport \"APG\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flightno from flights where sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno, sourceairport )\n# airports ( airportcode )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the flight numbers of flights leaving from APG.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flightno from flights where sourceairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno, destairport, airline, sourceairport )\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are flight numbers of flights arriving at Airport \"APG\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flightno from flights where destairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno )\n#\n### Give the flight numbers of flights landing at APG.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flightno from flights where destairport = 'APG'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, city )\n# flights ( flightno, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are flight numbers of flights departing from City \"Aberdeen \"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, city, airportcode, country, countryabbrev )\n# flights ( flightno, sourceairport, destairport, airline )\n# airlines ( airline, abbreviation, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the flight numbers of flights leaving from Aberdeen.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights ( flightno, airline, sourceairport, destairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### What are flight numbers of flights arriving at City \"Aberdeen\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( flightno, destairport )\n# airports ( airportcode, airportname, city, country )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Give the flight numbers of flights arriving in Aberdeen.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "flights.flightno from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airlines ( uid, airline, abbreviation, country )\n# airports ( city, airportcode, airportname, country, countryabbrev )\n# flights ( destairport, flightno, sourceairport )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find the number of flights landing in the city of Aberdeen or Abilene.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen' or airports.city = 'Abilene'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# flights ( destairport, sourceairport, airline, flightno )\n# airports ( airportcode, city, airportname, country, countryabbrev )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### How many flights land in Aberdeen or Abilene?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen' or airports.city = 'Abilene'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportname, airportcode, city, country, countryabbrev )\n# flights ( sourceairport, destairport, airline, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Find the name of airports which do not have any flight in and out.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where airportcode not in ( select sourceairport from flights union select destairport from flights )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# airports ( airportcode, airportname, city, country, countryabbrev )\n# flights ( sourceairport, destairport, airline, flightno )\n# flights.destairport = airports.airportcode\n# flights.sourceairport = airports.airportcode\n#\n### Which airports do not have departing or arriving flights?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "airportname from airports where airportcode not in ( select sourceairport from flights union select destairport from flights )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( employee_id, name, age, city )\n# hiring ( employee_id, start_from, is_full_time, shop_id )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### How many employees are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from employee"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( employee_id, name, age, city )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Count the number of employees\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from employee"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( age, name, employee_id, city )\n#\n### Sort employee names by their age in ascending order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from employee order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( name, age )\n# hiring ( employee_id )\n# shop ( name )\n# evaluation ( employee_id )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### List the names of employees and sort in ascending order of age.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from employee order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( city, employee_id, name, age )\n# hiring ( employee_id, shop_id, start_from, is_full_time )\n# shop ( shop_id, location, name, district, number_products, manager_name )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### What is the number of employees from each city?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , city from employee group by city"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( city, employee_id, name, age )\n#\n### Count the number of employees for each city.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , city from employee group by city"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( age, city, employee_id, name )\n# hiring ( employee_id, start_from, is_full_time, shop_id )\n# shop ( name, location, district, number_products, manager_name, shop_id )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Which cities do more than one employee under age 30 come from?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city from employee where age < 30 group by city having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( city, age )\n# hiring ( employee_id, start_from )\n# shop ( shop_id, location, district )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Find the cities that have more than one employee under age 30.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city from employee where age < 30 group by city having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( location, shop_id, name )\n#\n### Find the number of shops in each location.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , location from shop group by location"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( location, shop_id, name, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### How many shops are there in each location?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , location from shop group by location"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, manager_name, district, shop_id )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Find the manager name and district of the shop whose number of products is the largest.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "manager_name , district from shop order by number_products desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, shop_id, manager_name, district, name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### What are the manager name and district of the shop that sells the largest number of products?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "manager_name , district from shop order by number_products desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, shop_id, name, location, district, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### find the minimum and maximum number of products of all stores.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( number_products ) , max ( number_products ) from shop"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, shop_id, name, location, district, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### What are the minimum and maximum number of products across all the shops?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( number_products ) , max ( number_products ) from shop"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, name, location, district )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Return the name, location and district of all shops in descending order of number of products.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , location , district from shop order by number_products desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, name, location, district )\n# hiring ( shop_id, employee_id )\n# hiring.shop_id = shop.shop_id\n#\n### Sort all the shops by number products in descending order, and return the name, location and district of each shop.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , location , district from shop order by number_products desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, shop_id )\n# hiring ( shop_id, employee_id )\n# hiring.shop_id = shop.shop_id\n#\n### Find the names of stores whose number products is more than the average number of products.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from shop where number_products > ( select avg ( number_products ) from shop )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, name, shop_id, location, district, manager_name )\n# employee ( employee_id, name, age, city )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Which shops' number products is above the average? Give me the shop names.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from shop where number_products > ( select avg ( number_products ) from shop )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# evaluation ( employee_id, year_awarded, bonus )\n# employee ( employee_id, name, age, city )\n# hiring ( employee_id, shop_id, start_from, is_full_time )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### find the name of employee who was awarded the most times in the evaluation.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by evaluation.employee_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Which employee received the most awards in evaluations? Give me the employee name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by evaluation.employee_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# evaluation ( bonus )\n# employee ( employee_id, name )\n# hiring ( employee_id )\n# hiring.employee_id = employee.employee_id\n# evaluation.employee_id = employee.employee_id\n#\n### Find the name of the employee who got the highest one time bonus.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# evaluation ( employee_id, bonus )\n# employee ( employee_id, name )\n# hiring ( employee_id, start_from )\n# hiring.employee_id = employee.employee_id\n# evaluation.employee_id = employee.employee_id\n#\n### Which employee received the biggest bonus? Give me the employee name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring ( employee_id, shop_id, start_from, is_full_time )\n# hiring.employee_id = employee.employee_id\n# evaluation.employee_id = employee.employee_id\n#\n### Find the names of employees who never won any award in the evaluation.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from employee where employee_id not in ( select employee_id from evaluation )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# evaluation.employee_id = employee.employee_id\n#\n### What are the names of the employees who never received any evaluation?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from employee where employee_id not in ( select employee_id from evaluation )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( name, shop_id, location, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# hiring.shop_id = shop.shop_id\n#\n### What is the name of the shop that is hiring the largest number of employees?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by hiring.shop_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# hiring.shop_id = shop.shop_id\n#\n### Which shop has the most employees? Give me the shop name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by hiring.shop_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( name, shop_id )\n# hiring ( shop_id )\n# employee ( employee_id, name )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Find the name of the shops that do not hire any employee.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from shop where shop_id not in ( select shop_id from hiring )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Which shops run with no employees? Find the shop names\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from shop where shop_id not in ( select shop_id from hiring )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( shop_id, name, number_products, location, district, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### Find the number of employees hired in each shop; show the shop name as well.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( name, shop_id, number_products, location, district, manager_name )\n# employee ( name, employee_id, age, city )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### For each shop, return the number of employees working there and the name of the shop.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# evaluation ( bonus )\n# employee ( employee_id, name, age, city )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### What is total bonus given in all evaluations?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( bonus ) from evaluation"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# evaluation ( bonus )\n# employee ( employee_id )\n# hiring ( employee_id )\n# hiring.employee_id = employee.employee_id\n# evaluation.employee_id = employee.employee_id\n#\n### Find the total amount of bonus given in all the evaluations.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( bonus ) from evaluation"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Give me all the information about hiring.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "* from hiring"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# shop ( shop_id, name, location, district, number_products, manager_name )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n#\n### What is all the information about hiring?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "* from hiring"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( district, number_products, shop_id, name, location, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Which district has both stores with less than 3000 products and stores with more than 10000 products?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "district from shop where number_products < 3000 intersect select district from shop where number_products > 10000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( number_products, location )\n#\n### Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "district from shop where number_products < 3000 intersect select district from shop where number_products > 10000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( location, shop_id )\n# hiring ( shop_id )\n# employee ( employee_id )\n# evaluation ( employee_id )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### How many different store locations are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct location ) from shop"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# shop ( location, shop_id, name, district, number_products, manager_name )\n# hiring ( shop_id, employee_id, start_from, is_full_time )\n# employee ( employee_id, name, age, city )\n# evaluation ( employee_id, year_awarded, bonus )\n# hiring.employee_id = employee.employee_id\n# hiring.shop_id = shop.shop_id\n# evaluation.employee_id = employee.employee_id\n#\n### Count the number of distinct store locations.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct location ) from shop"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, document_description, template_id, other_details )\n#\n### How many documents do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of documents.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, document_description, template_id, other_details )\n# templates ( template_id, template_type_code, date_effective_from, date_effective_to, version_number, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### List document IDs, document names, and document descriptions for all documents.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , document_name , document_description from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, document_description )\n# paragraphs ( document_id )\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids, names, and descriptions for all documents?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , document_name , document_description from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, template_id, document_description )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents.template_id = templates.template_id\n#\n### What is the document name and template id for document with description with the letter 'w' in it?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_name , template_id from documents where document_description like '%w%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the names and template ids for documents that contain the letter w in their description.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_name , template_id from documents where document_description like '%w%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, document_id, template_id, document_description, other_details )\n# templates ( template_id, template_type_code, date_effective_from, date_effective_to, version_number, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### What is the document id, template id and description for document named \"Robbin CV\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , template_id , document_description from documents where document_name = 'Robbin CV'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_description, document_name, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the document id, template id, and description for the document with the name Robbin CV.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , template_id , document_description from documents where document_name = 'Robbin CV'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### How many different templates do all document use?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct template_id ) from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of different templates used for documents.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct template_id ) from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### How many documents are using the template with type code 'PPT'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### Count the number of documents that use the PPT template type.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### Show all template ids and number of documents using each template.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id , count ( * ) from documents group by template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### What are all different template ids used for documents, and how many times were each of them used?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id , count ( * ) from documents group by template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( template_id )\n# templates ( template_id, template_type_code )\n# ref_template_types ( template_type_code )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### What is the id and type code for the template used by the most documents?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "documents.template_id , templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by documents.template_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### Return the id and type code of the template that is used for the greatest number of documents.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "documents.template_id , templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by documents.template_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show ids for all templates that are used by more than one document.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from documents group by template_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### What are the template ids of any templates used in more than a single document?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from documents group by template_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show ids for all templates not used by any document.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from templates except select template_id from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, date_effective_from, date_effective_to, version_number, template_type_code, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### What are the ids for templates that are not used in any documents?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from templates except select template_id from documents"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### How many templates do we have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of templates.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show template ids, version numbers, and template type codes for all templates.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id , version_number , template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code )\n# ref_template_types ( template_type_code )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### What are the ids, version numbers, and type codes for each template?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id , version_number , template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### Show all distinct template type codes for all templates.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the different template type codes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids of templates with template type code PP or PPT?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code )\n# templates ( template_id, template_type_code )\n# documents ( template_id )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### Return the ids of templates that have the code PP or PPT.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### How many templates have template type code CV?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from templates where template_type_code = 'CV'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code )\n# ref_template_types ( template_type_code )\n# documents ( template_id )\n# paragraphs ( document_id )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of templates of the type CV.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from templates where template_type_code = 'CV'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( version_number, template_type_code )\n# ref_template_types ( template_type_code )\n# documents ( template_id, document_name )\n# paragraphs ( document_id, paragraph_text )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What is the version number and template type code for the template with version number later than 5?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "version_number , template_type_code from templates where version_number > 5"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( version_number, template_type_code, template_id )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name )\n# paragraphs ( document_id, paragraph_id, paragraph_text )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the version numbers and template type codes of templates with a version number greater than 5.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "version_number , template_type_code from templates where version_number > 5"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show all template type codes and number of templates for each.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code , count ( * ) from templates group by template_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the different template type codes, and how many templates correspond to each?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code , count ( * ) from templates group by template_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Which template type code has most number of templates?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates group by template_type_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the type code of the template type that the most templates belong to.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates group by template_type_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### Show all template type codes with less than three templates.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates group by template_type_code having count ( * ) < 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### What are the codes of template types that have fewer than 3 templates?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates group by template_type_code having count ( * ) < 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( version_number, template_type_code, template_id )\n# ref_template_types ( template_type_code )\n# documents ( template_id, document_id )\n# paragraphs ( document_id, paragraph_text )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What the smallest version number and its template type code?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( version_number ) , template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the lowest version number, along with its corresponding template type code.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( version_number ) , template_type_code from templates"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, document_id, template_id, document_description, other_details )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents.template_id = templates.template_id\n#\n### What is the template type code of the template used by document with the name \"Data base\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = 'Data base'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, template_id, document_id )\n# templates ( template_id, template_type_code )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### Return the template type code of the template that is used by a document named Data base.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = 'Data base'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_name, template_id, document_id, document_description, other_details )\n# documents.template_id = templates.template_id\n#\n### Show all document names using templates with template type code BK.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "documents.document_name from templates join documents on templates.template_id = documents.template_id where templates.template_type_code = 'BK'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_name, document_id, document_description, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### What are the names of documents that use templates with the code BK?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "documents.document_name from templates join documents on templates.template_id = documents.template_id where templates.template_type_code = 'BK'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show all template type codes and the number of documents using each type.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code , count ( * ) from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the different template type codes, and how many documents use each type?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code , count ( * ) from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Which template type code is used by most number of documents?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### Return the code of the template type that is most commonly used in documents.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code )\n# templates ( template_id, template_type_code, date_effective_from, date_effective_to )\n# documents ( document_id, template_id, document_name, document_description )\n# paragraphs ( paragraph_id, document_id, paragraph_text )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show all template type codes that are not used by any document.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates except select template_type_code from templates join documents on templates.template_id = documents.template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the codes of template types that are not used for any document?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from templates except select template_type_code from templates join documents on templates.template_id = documents.template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### Show all template type codes and descriptions.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code , template_type_description from ref_template_types"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### What are the type codes and descriptions for all template types?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code , template_type_description from ref_template_types"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What is the template type descriptions for template type code \"AD\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_description from ref_template_types where template_type_code = 'AD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the template type description of the template type with the code AD.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_description from ref_template_types where template_type_code = 'AD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What is the template type code for template type description \"Book\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from ref_template_types where template_type_description = 'Book'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_type_code, template_id, version_number, date_effective_from, date_effective_to, template_details )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### Return the type code of the template type with the description \"Book\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "template_type_code from ref_template_types where template_type_description = 'Book'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_type_code, template_id )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( template_id, document_id, document_name, document_description, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n#\n### What are the distinct template type descriptions for the templates ever used by any document?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code join documents on templates.template_id = documents.template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the different descriptions for templates that have been used in a document.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code join documents on templates.template_id = documents.template_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ref_template_types ( template_type_description )\n# templates ( template_id, template_type_code )\n# documents ( template_id, document_id )\n# paragraphs ( document_id )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the template ids with template type description \"Presentation\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_id from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code where ref_template_types.template_type_description = 'Presentation'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# templates ( template_id, template_type_code )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n#\n### Return the ids corresponding to templates with the description 'Presentation'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "templates.template_id from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code where ref_template_types.template_type_description = 'Presentation'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_text, paragraph_id, document_id, other_details )\n# documents ( document_id, document_name, template_id, document_description, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### How many paragraphs in total?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from paragraphs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of paragraphs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from paragraphs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, document_id, template_id, document_description, other_details )\n# paragraphs ( paragraph_text, paragraph_id, document_id, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### How many paragraphs for the document with name 'Summer Show'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Summer Show'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, document_id, template_id, document_description, other_details )\n# paragraphs ( paragraph_text, paragraph_id, document_id, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Count the number of paragraphs in the document named 'Summer Show'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Summer Show'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_text, paragraph_id, document_id, other_details )\n# documents ( document_id, document_name, document_description, template_id, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show paragraph details for paragraph with text 'Korea ' .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "other_details from paragraphs where paragraph_text like 'korea'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_text )\n# documents ( document_id, other_details )\n# templates ( template_id, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the details for the paragraph that includes the text 'Korea ' ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "other_details from paragraphs where paragraph_text like 'korea'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show all paragraph ids and texts for the document with name 'Welcome to NY'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Welcome to NY'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, document_description, template_id, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Welcome to NY'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_text, paragraph_id, document_id, other_details )\n# documents ( document_name, document_id, template_id, document_description, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Show all paragraph texts for the document \"Customer reviews\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Customer reviews'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_name, document_id, template_id )\n# paragraphs ( paragraph_text, document_id, paragraph_id )\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_id, template_type_code, template_details, version_number, date_effective_from, date_effective_to )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the paragraph texts for the document with the name 'Customer reviews'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Customer reviews'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, template_id, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Show all document ids and the number of paragraphs in each document. Order by document id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , count ( * ) from paragraphs group by document_id order by document_id asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id , count ( * ) from paragraphs group by document_id order by document_id asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, document_description, template_id, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show all document ids, names and the number of paragraphs in each document.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.document_id , documents.document_name , count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id group by paragraphs.document_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name, other_details )\n# paragraphs ( document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids and names of each document, as well as the number of paragraphs in each?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.document_id , documents.document_name , count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id group by paragraphs.document_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( document_id, paragraph_text, paragraph_id, other_details )\n# documents ( template_id, document_name, document_description, document_id, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### List all document ids with at least two paragraphs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids of documents that have 2 or more paragraphs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# documents ( document_id, document_name, template_id, document_description, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### What is the document id and name with greatest number of paragraphs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.document_id , documents.document_name from paragraphs join documents on paragraphs.document_id = documents.document_id group by paragraphs.document_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, document_name )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Return the id and name of the document with the most paragraphs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "paragraphs.document_id , documents.document_name from paragraphs join documents on paragraphs.document_id = documents.document_id group by paragraphs.document_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( document_id, paragraph_text, other_details, paragraph_id )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What is the document id with least number of paragraphs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( document_id, paragraph_id, paragraph_text, other_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# ref_template_types ( template_type_code, template_type_description )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Return the id of the document with the fewest paragraphs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id )\n# paragraphs ( document_id, paragraph_text )\n# templates ( template_id )\n# ref_template_types ( template_type_code )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### What is the document id with 1 to 2 paragraphs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id having count ( * ) between 1 and 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### Give the ids of documents that have between one and two paragraphs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs group by document_id having count ( * ) between 1 and 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( document_id, paragraph_text, paragraph_id, other_details )\n# documents ( document_id, document_name, document_description, template_id )\n# ref_template_types ( template_type_code, template_type_description )\n# templates ( template_id, template_type_code, version_number, date_effective_from, date_effective_to, template_details )\n# templates.template_type_code = ref_template_types.template_type_code\n# documents.template_id = templates.template_id\n# paragraphs.document_id = documents.document_id\n#\n### Show the document id with paragraph text 'Brazil' and 'Ireland'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# paragraphs ( paragraph_id, document_id, paragraph_text, other_details )\n# documents ( document_id, template_id, document_name, document_description, other_details )\n# paragraphs.document_id = documents.document_id\n#\n### What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### How many teachers are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from teacher"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What is the total count of teachers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from teacher"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course_arrange ( course_id, teacher_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### List the names of teachers in ascending order of age.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, age, teacher_id, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### What are the names of the teachers ordered by ascending age?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( age, hometown, teacher_id, name )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What are the age and hometown of teachers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "age , hometown from teacher"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( age, hometown, teacher_id, name )\n# course_arrange ( course_id, teacher_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What is the age and hometown of every teacher?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "age , hometown from teacher"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### List the name of teachers whose hometown is not `` Little Lever Urban District '' .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where hometown != 'little lever urban district'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where hometown != 'little lever urban district'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, age, teacher_id, hometown )\n#\n### Show the name of teachers aged either 32 or 33?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where age = 32 or age = 33"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, age, teacher_id )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What are the names of the teachers who are aged either 32 or 33?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where age = 32 or age = 33"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( age, hometown, teacher_id, name )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What is the hometown of the youngest teacher?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher order by age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( age, hometown, name )\n# course_arrange ( teacher_id )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### Where is the youngest teacher from?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher order by age asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show different hometown of teachers and the number of teachers from each hometown.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown , count ( * ) from teacher group by hometown"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### For each hometown, how many teachers are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown , count ( * ) from teacher group by hometown"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, staring_date, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### List the most common hometown of teachers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher group by hometown order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What is the most commmon hometowns for teachers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher group by hometown order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show the hometowns shared by at least two teachers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher group by hometown having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( hometown, teacher_id, name, age )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### What are the towns from which at least two teachers come from?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "hometown from teacher group by hometown having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course ( course_id, course )\n# course_arrange ( course_id, teacher_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show names of teachers and the courses they are arranged to teach.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name )\n# course ( course_id, course )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What is the name of each teacher and what course they teach?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, teacher_id, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id order by teacher.name asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name )\n# course ( course )\n# course_arrange ( teacher_id, course_id )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id order by teacher.name asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# course ( course, course_id )\n# teacher ( name, teacher_id, age, hometown )\n# course_arrange ( course_id, teacher_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show the name of the teacher for the math course.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id where course.course = 'Math'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name )\n# course_arrange ( teacher_id, course_id )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### What are the names of the people who teach math courses?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id where course.course = 'Math'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### Show names of teachers and the number of courses they teach.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , count ( * ) from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, teacher_id, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n#\n### What are the names of the teachers and how many courses do they teach?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name , count ( * ) from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course ( course_id, course )\n# course_arrange ( course_id, teacher_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### Show names of teachers that teach at least two courses.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.name having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, teacher_id, age, hometown )\n# course ( course_id, course )\n# course_arrange ( teacher_id, course_id, grade )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What are the names of the teachers who teach at least two courses?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.name having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( teacher_id, name, age, hometown )\n# course_arrange ( course_id, teacher_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### List the names of teachers who have not been arranged to teach courses.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where teacher_id not in ( select teacher_id from course_arrange )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# teacher ( name, teacher_id, age, hometown )\n# course_arrange ( teacher_id, course_id, grade )\n# course ( course_id, course )\n# course_arrange.teacher_id = teacher.teacher_id\n# course_arrange.course_id = course.course_id\n#\n### What are the names of the teachers whose courses have not been arranged?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from teacher where teacher_id not in ( select teacher_id from course_arrange )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( age, name, level_of_membership, id )\n# visit ( visitor_id, museum_id, num_of_ticket, total_spent )\n# visit.visitor_id = visitor.id\n#\n### How many visitors below age 30 are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from visitor where age < 30"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( level_of_membership, name, id, age )\n# visit ( visitor_id, num_of_ticket, total_spent, museum_id )\n# museum ( museum_id, name, num_of_staff, open_year )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from visitor where level_of_membership > 4 order by level_of_membership desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( age, level_of_membership, id, name )\n# visit ( visitor_id, museum_id, num_of_ticket, total_spent )\n# visit.visitor_id = visitor.id\n#\n### What is the average age of the visitors whose membership level is not higher than 4?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from visitor where level_of_membership <= 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( level_of_membership, name, age, id )\n# visit ( visitor_id, num_of_ticket, total_spent, museum_id )\n# museum ( name, num_of_staff, open_year, museum_id )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , level_of_membership from visitor where level_of_membership > 4 order by age desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( num_of_staff, museum_id, name )\n# visit ( museum_id, visitor_id )\n# visit.museum_id = museum.museum_id\n#\n### Find the id and name of the museum that has the most staff members?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "museum_id , name from museum order by num_of_staff desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( num_of_staff, open_year, museum_id, name )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visit.museum_id = museum.museum_id\n#\n### Find the average number of staff working for the museums that were open before 2009.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( num_of_staff ) from museum where open_year < 2009"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( name, open_year, museum_id, num_of_staff )\n# visit ( museum_id, num_of_ticket, total_spent, visitor_id )\n# visit.museum_id = museum.museum_id\n#\n### What are the opening year and staff number of the museum named Plaza Museum?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "num_of_staff , open_year from museum where name = 'Plaza Museum'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( name, num_of_staff, open_year )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from museum where num_of_staff > ( select min ( num_of_staff ) from museum where open_year > 2010 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( id, name, age, level_of_membership )\n# visit ( visitor_id, museum_id, num_of_ticket, total_spent )\n# visit.visitor_id = visitor.id\n#\n### find the id, name and age for visitors who visited some museums more than once.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "visitor.id , visitor.name , visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visitor.id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visit ( total_spent, museum_id, visitor_id, num_of_ticket )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n#\n### What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "visit.visitor_id , visitor.name , visitor.level_of_membership from visitor join visit on visitor.id = visit.visitor_id group by visit.visitor_id order by sum ( visit.total_spent ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# museum ( museum_id, name, num_of_staff, open_year )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### What are the id and name of the museum visited most times?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "visit.museum_id , museum.name from museum join visit on museum.museum_id = visit.museum_id group by visit.museum_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( museum_id, name, num_of_staff, open_year )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### What is the name of the museum that had no visitor yet?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from museum where museum_id not in ( select museum_id from visit )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visit ( num_of_ticket, visitor_id, museum_id, total_spent )\n# visitor ( name, age )\n# museum ( museum_id, name, num_of_staff, open_year )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### Find the name and age of the visitor who bought the most tickets at once.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "visitor.name , visitor.age from visitor join visit on visitor.id = visit.visitor_id order by visit.num_of_ticket desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visit ( num_of_ticket, total_spent, museum_id, visitor_id )\n# visitor ( id, level_of_membership, age, name )\n# museum ( museum_id, num_of_staff, name, open_year )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### What are the average and maximum number of tickets bought in all visits?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( num_of_ticket ) , max ( num_of_ticket ) from visit"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visit ( visitor_id, num_of_ticket, total_spent )\n# visitor ( id, level_of_membership )\n# museum ( museum_id )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### What is the total ticket expense of the visitors whose membership level is 1?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( visit.total_spent ) from visitor join visit on visitor.id = visit.visitor_id where visitor.level_of_membership = 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# visitor ( name, id )\n# museum ( name, open_year, museum_id )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "visitor.name from visitor join visit on visitor.id = visit.visitor_id join museum on museum.museum_id = visit.museum_id where museum.open_year < 2009 intersect select visitor.name from visitor join visit on visitor.id = visit.visitor_id join museum on museum.museum_id = visit.museum_id where museum.open_year > 2011"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( open_year, museum_id, name, num_of_staff )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### Find the number of visitors who did not visit any museum opened after 2010.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from visitor where id not in ( select visit.visitor_id from museum join visit on museum.museum_id = visit.museum_id where museum.open_year > 2010 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# museum ( open_year, museum_id, name, num_of_staff )\n# visit ( museum_id, visitor_id, num_of_ticket, total_spent )\n# visitor ( id, name, level_of_membership, age )\n# visit.visitor_id = visitor.id\n# visit.museum_id = museum.museum_id\n#\n### How many museums were opened after 2013 or before 2008?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from museum where open_year > 2013 or open_year < 2008"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id )\n#\n### Find the total number of players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from players"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id , first_name , last_name , hand , birth_date , country_code )\n# matches ( best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year )\n# rankings ( ranking_date , ranking , player_id , ranking_points , tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### How many players are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from players"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( match_num, year, best_of, tourney_id, tourney_date, tourney_name )\n# players ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Find the total number of matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year )\n# players ( player_id , first_name , last_name , hand , birth_date , country_code )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Count the number of matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, birth_date, player_id )\n# matches ( winner_name, winner_id, winner_ioc, winner_age )\n# rankings ( ranking_date, player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### List the first name and birth date of all players from the country with code USA.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , birth_date from players where country_code = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, birth_date, player_id )\n# rankings ( player_id, ranking_date )\n# matches ( winner_id, loser_id, winner_name, loser_name, winner_age, loser_age )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the first names and birth dates of players from the USA?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , birth_date from players where country_code = 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( loser_age, winner_age, loser_id, winner_id )\n# players ( player_id, birth_date, first_name, last_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Find the average age of losers and winners of all matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( loser_age ) , avg ( winner_age ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# matches ( best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### What are the average ages of losers and winners across matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( loser_age ) , avg ( winner_age ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_rank, winner_id, match_num )\n# players ( player_id, first_name, last_name )\n# rankings ( ranking, player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the average rank of winners in all matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( winner_rank ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_rank, winner_id, match_num )\n# rankings ( ranking, player_id )\n#\n### What is the average rank for winners in all matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( winner_rank ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( match_num, loser_rank, loser_id, loser_name, winner_rank )\n# players ( player_id, last_name, first_name, birth_date )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Find the highest rank of losers in all matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( loser_rank ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( loser_rank, loser_rank_points, loser_seed, loser_id )\n# rankings ( ranking, ranking_points )\n# players ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What is the best rank of losers across all matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( loser_rank ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code )\n# matches ( winner_ioc, loser_ioc )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### find the number of distinct country codes of all players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct country_code ) from players"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id, first_name, last_name, hand, birth_date )\n# rankings ( player_id, ranking_date, ranking_points, ranking, tours )\n# rankings.player_id = players.player_id\n#\n### How many distinct countries do players come from?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct country_code ) from players"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id , first_name , last_name , hand , birth_date , country_code )\n# matches ( best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Find the number of distinct name of losers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct loser_name ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( loser_name, loser_id )\n# players ( first_name, last_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### How many different loser names are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct loser_name ) from matches"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( tourney_name, match_num )\n#\n### Find the name of tourney that has more than 10 matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tourney_name from matches group by tourney_name having count ( * ) > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( match_num, tourney_name, best_of )\n#\n### What are the names of tournaments that have more than 10 matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tourney_name from matches group by tourney_name having count ( * ) > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_id, winner_name, year, loser_id )\n# players ( player_id, first_name, last_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### List the names of all winners who played in both 2013 and 2016.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name )\n# matches ( winner_name, winner_id, year )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the names of players who won in both 2013 and 2016?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( tourney_date, match_num, year )\n# players ( player_id, first_name, last_name, birth_date, country_code )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### List the number of all matches who played in years of 2013 or 2016.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from matches where year = 2013 or year = 2016"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year )\n# players ( player_id , first_name , last_name , hand , birth_date , country_code )\n# rankings ( ranking_date , ranking , player_id , ranking_points , tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### How many matches were played in 2013 or 2016?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from matches where year = 2013 or year = 2016"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_id, winner_name, tourney_name, winner_ioc )\n# players ( player_id, first_name, country_code )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.country_code , players.first_name from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'WTA Championships' intersect select players.country_code , players.first_name from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'Australian Open'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_name, winner_ioc, tourney_name, tourney_id )\n# players ( player_id, first_name, country_code )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### What are the first names and country codes for players who won both the WTA Championships and the Australian Open?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.country_code , players.first_name from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'WTA Championships' intersect select players.country_code , players.first_name from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'Australian Open'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, country_code, player_id )\n# rankings ( player_id, ranking_date, ranking_points, ranking, tours )\n# rankings.player_id = players.player_id\n#\n### Find the first name and country code of the oldest player.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , country_code from players order by birth_date asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, country_code, player_id )\n# rankings ( ranking_date, player_id, ranking_points, tours, ranking )\n# rankings.player_id = players.player_id\n#\n### What is the first name and country code of the oldest player?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , country_code from players order by birth_date asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( birth_date, first_name, last_name, player_id )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches ( winner_id, loser_id, match_num, round, score, tourney_date, tourney_id, tourney_level, tourney_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### List the first and last name of all players in the order of birth date.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name from players order by birth_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, birth_date, hand, country_code )\n# matches ( winner_id, loser_id, winner_name, loser_name )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the full names of all players, sorted by birth date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name from players order by birth_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, last_name, hand, birth_date )\n# matches ( winner_id, winner_hand )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### List the first and last name of all players who are left / L hand in the order of birth date.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name from players where hand = 'L' order by birth_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( hand, first_name, last_name )\n# matches ( winner_id )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the full names of all left handed players, in order of birth date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name from players where hand = 'L' order by birth_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# players ( player_id, first_name, country_code, last_name )\n# matches ( winner_id, loser_id, tourney_id, tourney_name, tourney_date )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the first name and country code of the player who did the most number of tours.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.country_code , players.first_name from players join rankings on players.player_id = rankings.player_id order by rankings.tours desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, birth_date, country_code, hand )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# rankings.player_id = players.player_id\n#\n### What is the first name and country code of the player with the most tours?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.country_code , players.first_name from players join rankings on players.player_id = rankings.player_id order by rankings.tours desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( year, match_num, winner_id, loser_id )\n# players ( player_id, first_name, last_name )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the year that has the most number of matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year from matches group by year order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( year, match_num )\n#\n### Which year had the most matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year from matches group by year order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_name, winner_rank_points, winner_id )\n# players ( player_id )\n# rankings ( ranking_date, ranking, ranking_points, player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the name and rank points of the winner who won the most times.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name , winner_rank_points from matches group by winner_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_name, winner_id, winner_rank_points )\n# players ( player_id, first_name, last_name )\n# rankings ( player_id, ranking_points )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What is the name of the winner who has won the most matches, and how many rank points does this player have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name , winner_rank_points from matches group by winner_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# matches ( winner_id, winner_name, winner_rank_points, tourney_name )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name from matches where tourney_name = 'Australian Open' order by winner_rank_points desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name )\n# matches ( winner_rank_points, winner_name, tourney_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### What is the name of the winner with the most rank points who participated in the Australian Open tournament?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name from matches where tourney_name = 'Australian Open' order by winner_rank_points desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( minutes, winner_name, loser_name )\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### find the names of loser and winner who played in the match with greatest number of minutes.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name , loser_name from matches order by minutes desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( minutes, winner_name, loser_name, match_num, tourney_name )\n# players ( player_id, first_name, last_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### What are the names of the winner and loser who played in the longest match?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "winner_name , loser_name from matches order by minutes desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# rankings.player_id = players.player_id\n#\n### Find the average ranking for each player and their first name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( ranking ) , players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name )\n# matches ( winner_id, winner_rank, loser_id, loser_rank, winner_name, loser_name )\n# rankings ( player_id, ranking, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the first names of all players, and their average rankings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( ranking ) , players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# rankings.player_id = players.player_id\n#\n### Find the total ranking points for each player and their first name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( ranking_points ) , players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, player_id, last_name, hand, birth_date, country_code )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# rankings.player_id = players.player_id\n#\n### What are the first names of all players, and their total ranking points?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( ranking_points ) , players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id, first_name, last_name, hand, birth_date )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches ( winner_id, loser_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### find the number of players for each country.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , country_code from players group by country_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id )\n# rankings ( player_id )\n# rankings.player_id = players.player_id\n#\n### How many players are from each country?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , country_code from players group by country_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code )\n# matches ( winner_id )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### find the code of the country where has the greatest number of players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country_code from players group by country_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id )\n# rankings ( player_id )\n# matches ( winner_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What is the code of the country with the most players?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country_code from players group by country_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id, first_name, last_name, hand, birth_date )\n# matches ( winner_ioc, loser_ioc, winner_id, loser_id, best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_name, winner_rank, winner_rank_points, winner_seed, year )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the codes of countries that have more than 50 players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country_code from players group by country_code having count ( * ) > 50"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( country_code, player_id, first_name, last_name, hand, birth_date )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# rankings.player_id = players.player_id\n#\n### What are the codes of countries with more than 50 players?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country_code from players group by country_code having count ( * ) > 50"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# rankings.player_id = players.player_id\n#\n### Find the total number of tours for each ranking date.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( tours ) , ranking_date from rankings group by ranking_date"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# rankings ( ranking_date, tours )\n# players ( player_id )\n# matches ( tourney_date )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### How many total tours were there for each ranking date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( tours ) , ranking_date from rankings group by ranking_date"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( year, match_num )\n# players (  )\n# rankings ( ranking_date )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the number of matches happened in each year.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , year from matches group by year"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_id, loser_id, tourney_date, match_num, best_of, draw_size, round, score, surface, tourney_id, tourney_level, tourney_name, minutes )\n# players ( player_id, first_name, last_name, hand, birth_date, country_code )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### How many matches were played in each year?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , year from matches group by year"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, last_name, player_id )\n# matches ( winner_name, winner_rank, winner_age )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### Find the name and rank of the 3 youngest winners across all matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct winner_name , winner_rank from matches order by winner_age asc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, first_name, last_name, birth_date )\n# matches ( winner_id, winner_name, winner_rank, winner_age )\n# rankings ( player_id, ranking )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What are the names and ranks of the three youngest winners across all matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct winner_name , winner_rank from matches order by winner_age asc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( player_id, hand, first_name, last_name, birth_date, country_code )\n# matches ( winner_id, winner_hand, tourney_name, loser_id, winner_name )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n#\n### How many different winners both participated in the WTA Championships and were left handed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct winner_name ) from matches where tourney_name = 'WTA Championships' and winner_hand = 'L'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( hand, player_id, first_name, last_name, birth_date, country_code )\n# matches ( winner_hand, loser_hand, winner_id, loser_id, best_of, draw_size, loser_age, loser_entry, loser_ht, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_ht, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the number of left handed winners who participated in the WTA Championships.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct winner_name ) from matches where tourney_name = 'WTA Championships' and winner_hand = 'L'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# matches ( winner_name, winner_ioc, winner_age, winner_rank_points )\n# players ( first_name, country_code, birth_date )\n# rankings ( ranking_points, player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the first name, country code and birth date of the winner who has the highest rank points in all matches.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.first_name , players.country_code , players.birth_date from players join matches on players.player_id = matches.winner_id order by matches.winner_rank_points desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( first_name, country_code, birth_date, player_id )\n# matches ( winner_rank_points, winner_id )\n# rankings ( player_id, ranking_date, ranking, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### What is the first name, country code, and birth date of the player with the most winner rank points across all matches?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "players.first_name , players.country_code , players.birth_date from players join matches on players.player_id = matches.winner_id order by matches.winner_rank_points desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( hand, player_id, first_name, last_name, birth_date, country_code )\n# matches ( winner_hand, loser_hand, best_of, draw_size, loser_age, loser_entry, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year )\n# rankings ( ranking_date, ranking, player_id, ranking_points, tours )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### Find the number of players for each hand type.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , hand from players group by hand"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# players ( hand )\n# matches ( winner_hand, loser_hand, winner_id, loser_id )\n# rankings ( player_id )\n# matches.winner_id = players.player_id\n# matches.loser_id = players.player_id\n# rankings.player_id = players.player_id\n#\n### How many players are there for each hand type?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , hand from players group by hand"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ship ( disposition_of_ship )\n# battle ( id )\n# death ( caused_by_ship_id )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### How many ships ended up being 'Captured'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from ship where disposition_of_ship = 'Captured'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ship ( name, tonnage, id, lost_in_battle, ship_type, location, disposition_of_ship )\n# battle ( id, name, date, bulgarian_commander, latin_commander, result )\n# death ( caused_by_ship_id, id, note, killed, injured )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### List the name and tonnage ordered by in descending alphaetical order for the names.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , tonnage from ship order by name desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( name, date, result )\n# ship ( id )\n# death ( caused_by_ship_id )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### List the name, date and result of each battle.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , date from battle"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# death ( killed, injured, caused_by_ship_id, id )\n# battle ( name, date, result, bulgarian_commander, latin_commander, id )\n#\n### What is maximum and minimum death toll caused each time?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( killed ) , min ( killed ) from death"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# death ( injured )\n# ship ( id, name, tonnage, ship_type )\n# battle ( id, name, date )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What is the average number of injuries caused each time?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( injured ) from death"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ship ( tonnage, id, lost_in_battle, name )\n# death ( caused_by_ship_id, killed, injured, id, note )\n# battle ( id, name, date, bulgarian_commander, latin_commander, result )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What are the death and injury situations caused by the ship with tonnage 't'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "death.killed , death.injured from death join ship on death.caused_by_ship_id = ship.id where ship.tonnage = 't'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( name, result, bulgarian_commander )\n# ship ( name, tonnage, ship_type, location, disposition_of_ship, id, lost_in_battle )\n# death ( killed, injured, caused_by_ship_id, note, id )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What are the name and results of the battles when the bulgarian commander is not 'Boril'\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , result from battle where bulgarian_commander != 'Boril'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ship ( id, name, ship_type, lost_in_battle )\n# battle ( id, name )\n# death ( caused_by_ship_id )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What are the different ids and names of the battles that lost any 'Brig' type shipes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct battle.id , battle.name from battle join ship on battle.id = ship.lost_in_battle where ship.ship_type = 'Brig'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( id, name )\n# death ( id, killed )\n# ship ( id, lost_in_battle )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What are the ids and names of the battles that led to more than 10 people killed in total.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "battle.id , battle.name from battle join ship on battle.id = ship.lost_in_battle join death on ship.id = death.caused_by_ship_id group by battle.id having sum ( death.killed ) > 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# death ( injured, caused_by_ship_id, id, note, killed )\n# ship ( id, name, tonnage, ship_type, location, disposition_of_ship, lost_in_battle )\n# death.caused_by_ship_id = ship.id\n#\n### What is the ship id and name that caused most total injuries?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "ship.id , ship.name from death join ship on death.caused_by_ship_id = ship.id group by ship.id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( name )\n# ship ( lost_in_battle )\n# ship.lost_in_battle = battle.id\n#\n### What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from battle where bulgarian_commander = 'Kaloyan' and latin_commander = 'Baldwin I'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( result, name, date, bulgarian_commander, latin_commander, id )\n# ship ( id, name, lost_in_battle, tonnage, ship_type, location, disposition_of_ship )\n# death ( caused_by_ship_id, id, note, killed, injured )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### How many different results are there for the battles?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct result ) from battle"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( id, name, date, bulgarian_commander, latin_commander, result )\n# ship ( lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship )\n# ship.lost_in_battle = battle.id\n#\n### How many battles did not lose any ship with tonnage '225'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# ship ( name, lost_in_battle, id, tonnage, ship_type, location, disposition_of_ship )\n# battle ( name, date, id, bulgarian_commander, latin_commander, result )\n# ship.lost_in_battle = battle.id\n#\n### List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'Lettice' intersect select battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'HMS Atalanta'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# battle ( name, result, bulgarian_commander )\n# ship ( lost_in_battle, name, location )\n# ship.lost_in_battle = battle.id\n#\n### Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , result , bulgarian_commander from battle except select battle.name , battle.result , battle.bulgarian_commander from battle join ship on battle.id = ship.lost_in_battle where ship.location = 'English Channel'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# death ( note, caused_by_ship_id, id, killed, injured )\n# ship ( name, id, lost_in_battle, tonnage )\n# battle ( id, name, date, bulgarian_commander, latin_commander, result )\n# ship.lost_in_battle = battle.id\n# death.caused_by_ship_id = ship.id\n#\n### What are the notes of the death events which has substring 'East'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "note from death where note like '%East%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( line_1, line_2, line_3 )\n# students ( current_address_id, permanent_address_id )\n# student_enrolment ( student_id, other_details )\n# student_enrolment_courses ( student_enrolment_id, course_id )\n# transcript_contents ( student_course_id )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### what are all the addresses including line 1 and line 2?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "line_1 , line_2 from addresses"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( line_1, line_2, line_3, address_id, city, zip_postcode, state_province_county, country, other_address_details )\n# courses ( course_id, course_name, course_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What is the first and second line for all addresses?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "line_1 , line_2 from addresses"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id, course_name, course_description, other_details )\n#\n### How many courses in total are listed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from courses"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id, course_name, course_description, other_details )\n#\n### How many courses are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from courses"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# courses ( course_description, course_name )\n# departments ( department_name, department_description, other_details )\n# degree_programs ( degree_summary_name, degree_summary_description, other_details )\n# sections ( section_name, section_description, other_details )\n# semesters ( semester_name, semester_description, other_details )\n# students ( first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( other_details )\n# student_enrolment_courses (  )\n# transcripts ( transcript_date, other_details )\n# transcript_contents (  )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### How is the math course described?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "course_description from courses where course_name = 'math'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_description, course_name, course_id )\n# degree_programs ( degree_summary_description, degree_summary_name, degree_program_id )\n#\n### What are the descriptions for all the math courses?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "course_description from courses where course_name = 'math'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( city, zip_postcode, address_id )\n#\n### What is the zip code of the address in the city Port Chelsea?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "zip_postcode from addresses where city = 'Port Chelsea'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( city, zip_postcode, line_1, line_2, line_3, address_id, state_province_county, country, other_address_details )\n#\n### What is the zip code for Port Chelsea?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "zip_postcode from addresses where city = 'Port Chelsea'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_id, department_name )\n# degree_programs ( department_id, degree_program_id )\n# degree_programs.department_id = departments.department_id\n#\n### Which department offers the most number of degrees? List department name and id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "departments.department_name , degree_programs.department_id from degree_programs join departments on degree_programs.department_id = departments.department_id group by degree_programs.department_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# courses ( course_id, course_name, course_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### What is the name and id of the department with the most number of degrees ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "departments.department_name , degree_programs.department_id from degree_programs join departments on degree_programs.department_id = departments.department_id group by degree_programs.department_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### How many departments offer any degree?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct department_id ) from degree_programs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# degree_programs.department_id = departments.department_id\n#\n### How many different departments offer degrees?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct department_id ) from degree_programs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_summary_name, degree_program_id, department_id, degree_summary_description, other_details )\n#\n### How many different degree names are offered?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct degree_summary_name ) from degree_programs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs.department_id = departments.department_id\n#\n### How many different degrees are offered?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct degree_summary_name ) from degree_programs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( department_id, degree_program_id, degree_summary_name, degree_summary_description, other_details )\n# degree_programs.department_id = departments.department_id\n#\n### How many degrees does the engineering department offer?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from departments join degree_programs on departments.department_id = degree_programs.department_id where departments.department_name = 'engineer'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# courses ( course_id, course_name, course_description, other_details )\n# degree_programs.department_id = departments.department_id\n#\n### How many degrees does the engineering department have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from departments join degree_programs on departments.department_id = degree_programs.department_id where departments.department_name = 'engineer'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# sections ( section_name, section_description )\n# courses ( course_id )\n# semesters ( semester_id )\n# student_enrolment_courses ( student_course_id, course_id )\n# student_enrolment ( semester_id )\n# transcripts ( transcript_id )\n# transcript_contents ( student_course_id, transcript_id )\n# sections.course_id = courses.course_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What are the names and descriptions of all the sections?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_name , section_description from sections"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# sections ( section_name, section_description, section_id )\n# courses ( course_id, course_name, course_description )\n# student_enrolment_courses ( course_id, student_course_id, student_enrolment_id )\n# sections.course_id = courses.course_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### What are the names and descriptions for all the sections?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_name , section_description from sections"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id, course_name )\n# sections ( section_id, course_id, section_name )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# departments ( department_id, department_name )\n# degree_programs ( degree_program_id, department_id, degree_summary_name )\n# semesters ( semester_id, semester_name )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What are the names and id of courses having at most 2 sections?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) <= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id, course_name, course_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What are the names and ids of every course with less than 2 sections?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) <= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id )\n# sections ( section_name )\n# semesters ( semester_id )\n# student_enrolment ( student_enrolment_id )\n# student_enrolment_courses ( course_id, student_course_id )\n# sections.course_id = courses.course_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### List the section_name in reversed lexicographical order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_name from sections order by section_name desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# sections ( section_name, section_id, course_id )\n# courses ( course_name, course_id )\n# sections.course_id = courses.course_id\n#\n### What are the names of the sections in reverse alphabetical order?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_name from sections order by section_name desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# student_enrolment ( semester_id, student_enrolment_id, degree_program_id, student_id, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n#\n### What is the semester which most student registered in? Show both the name and the id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "semesters.semester_name , semesters.semester_id from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id group by semesters.semester_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# semesters ( semester_id, semester_name, semester_description )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id )\n# students ( student_id, first_name, last_name )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n#\n### For each semester, what is the name and id of the one with the most students registered?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "semesters.semester_name , semesters.semester_id from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id group by semesters.semester_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_name, department_description, department_id, other_details )\n# degree_programs ( department_id, degree_summary_name, degree_summary_description, degree_program_id, other_details )\n# courses ( course_name, course_description, course_id, other_details )\n# degree_programs ( department_id, degree_summary_name, degree_summary_description, degree_program_id, other_details )\n# student_enrolment ( degree_program_id, student_id, semester_id, student_enrolment_id, other_details )\n# student_enrolment_courses ( course_id, student_enrolment_id, student_course_id )\n# degree_programs.department_id = departments.department_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### What is the description of the department whose name has the substring the computer?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "department_description from departments where department_name like '%computer%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# departments ( department_name, department_description, department_id, other_details )\n# degree_programs ( degree_summary_name, department_id, degree_summary_description, degree_program_id, other_details )\n# degree_programs.department_id = departments.department_id\n#\n### What is the department description for the one whose name has the word computer?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "department_description from departments where department_name like '%computer%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, middle_name, last_name, student_id )\n# student_enrolment ( student_id, degree_program_id )\n# degree_programs ( degree_program_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.first_name , students.middle_name , students.last_name , students.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id having count ( * ) = 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id, first_name, middle_name, last_name, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment.student_id = students.student_id\n#\n### What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.first_name , students.middle_name , students.last_name , students.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id having count ( * ) = 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'Bachelor'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, middle_name, last_name, student_id, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# degree_programs ( department_id, degree_program_id, degree_summary_name, degree_summary_description, other_details )\n#\n### What are the first, middle, and last names for everybody enrolled in a Bachelors program?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'Bachelor'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### Find the kind of program which most number of students are enrolled in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_summary_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_summary_name, degree_program_id )\n# student_enrolment ( degree_program_id, student_id )\n# students ( student_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### What is the degree summary name that has the most number of students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_summary_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment ( degree_program_id, student_enrolment_id )\n# degree_programs ( degree_program_id, degree_summary_name, degree_summary_description )\n# students ( student_id )\n# student_enrolment_courses ( student_enrolment_id, course_id )\n# courses ( course_id )\n# semesters ( semester_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### Find the program which most number of students are enrolled in. List both the id and the summary.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "degree_programs.degree_program_id , degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_program_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, degree_summary_name, degree_summary_description, department_id, other_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# students ( student_id, first_name, middle_name, last_name, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### What is the program id and the summary of the degree that has the most students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "degree_programs.degree_program_id , degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_program_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment ( student_id, degree_program_id )\n# students ( first_name, middle_name, last_name )\n# student_enrolment.student_id = students.student_id\n#\n### Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.student_id , students.first_name , students.middle_name , students.last_name , count ( * ) , students.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id, first_name, middle_name, last_name )\n# student_enrolment ( student_id, student_enrolment_id )\n# degree_programs ( degree_program_id )\n# departments ( department_id )\n# transcripts ( transcript_id )\n# transcript_contents ( student_course_id )\n# degree_programs.department_id = departments.department_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.student_id , students.first_name , students.middle_name , students.last_name , count ( * ) , students.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# student_enrolment ( semester_id, student_enrolment_id, degree_program_id, student_id, other_details )\n# student_enrolment.semester_id = semesters.semester_id\n#\n### Which semesters do not have any student enrolled? List the semester name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# semesters ( semester_name, semester_description, semester_id, other_details )\n# students ( student_id, first_name, middle_name, last_name, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n#\n### What is the name of the semester with no students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment ( student_enrolment_id, student_id, degree_program_id, semester_id, other_details )\n# courses ( course_id, course_name, course_description, other_details )\n#\n### What are all the course names of the courses which ever have students enrolled in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# courses ( course_id, course_name, course_description, other_details )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What are the names of all courses that have some students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_name, course_id )\n# student_enrolment ( student_enrolment_id, student_id )\n# student_enrolment_courses ( student_enrolment_id, course_id )\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### What's the name of the course with most number of enrollments?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by courses.course_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment ( student_id, degree_program_id, semester_id, student_enrolment_id, other_details )\n# student_enrolment_courses ( course_id, student_enrolment_id, student_course_id )\n# courses ( course_id, course_name, course_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### What is the name of the course with the most students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by courses.course_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details )\n# addresses ( address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details )\n# degree_programs ( degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details )\n# student_enrolment ( student_enrolment_id , degree_program_id , semester_id , student_id , other_details )\n# semesters ( semester_id , semester_name , semester_description , other_details )\n# courses ( course_id , course_name , course_description , other_details )\n# departments ( department_id , department_name , department_description , other_details )\n# transcripts ( transcript_id , transcript_date , other_details )\n# student_enrolment_courses ( student_course_id , course_id , student_enrolment_id )\n# sections ( section_id , course_id , section_name , section_description , other_details )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n#\n### Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.last_name from students join addresses on students.current_address_id = addresses.address_id where addresses.state_province_county = 'NorthCarolina' except select distinct students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( last_name, current_address_id, student_id, permanent_address_id, first_name, middle_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# addresses ( address_id, state_province_county, line_1, line_2, line_3, city, zip_postcode, country, other_address_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### What are the last name of the students who live in North Carolina but have not registered in any degree programs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.last_name from students join addresses on students.current_address_id = addresses.address_id where addresses.state_province_county = 'NorthCarolina' except select distinct students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcript_contents ( transcript_id, student_course_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### Show the date and id of the transcript with at least 2 course results.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id group by transcript_contents.transcript_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, transcript_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# courses ( course_id, course_name, course_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What is the date and id of the transcript with at least 2 courses listed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id group by transcript_contents.transcript_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( cell_mobile_number, first_name, last_name )\n# addresses ( address_id, line_1 )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### What is the phone number of the man with the first name Timmothy and the last name Ward?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id, first_name, last_name, cell_mobile_number )\n# addresses ( address_id, line_1, line_2, city, zip_postcode, state_province_county, country )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### What is the mobile phone number of the student named Timmothy Ward ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, middle_name, last_name, student_id, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n#\n### Who is the first student to register? List the first name, middle name and last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , middle_name , last_name from students order by date_first_registered asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, middle_name, last_name, student_id, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n#\n### What is the first, middle, and last name of the first student to register?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , middle_name , last_name from students order by date_first_registered asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, other_details )\n# students ( first_name, middle_name, last_name, date_first_registered )\n#\n### Who is the earliest graduate of the school? List the first name, middle name and last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , middle_name , last_name from students order by date_left asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, middle_name, last_name )\n#\n### What is the first, middle, and last name of the earliest school graduate?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , middle_name , last_name from students order by date_left asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id, current_address_id, permanent_address_id, first_name )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country )\n# student_enrolment ( student_enrolment_id, student_id )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n#\n### Whose permanent address is different from his or her current address? List his or her first name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name from students where current_address_id != permanent_address_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, permanent_address_id, current_address_id )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### What is the first name of the student whose permanent address is different from his or her current one?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name from students where current_address_id != permanent_address_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( current_address_id, permanent_address_id, student_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### Which address holds the most number of students currently? List the address id and all lines.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "addresses.address_id , addresses.line_1 , addresses.line_2 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( student_id, current_address_id, permanent_address_id, other_student_details )\n# addresses ( address_id, line_1, line_2, other_address_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, other_details )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n#\n### What is the id, line 1, and line 2 of the address with the most students?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "addresses.address_id , addresses.line_1 , addresses.line_2 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, transcript_id )\n# transcript_contents ( transcript_id, student_course_id )\n# student_enrolment_courses ( student_enrolment_id, student_course_id, course_id )\n# student_enrolment ( student_enrolment_id, semester_id, student_id, degree_program_id )\n# semesters ( semester_id, semester_name, semester_description )\n# students ( student_id, date_first_registered, date_left, other_student_details )\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### On average, when were the transcripts printed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( transcript_date ) from transcripts"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date )\n# transcript_contents ( transcript_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### What is the average transcript date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( transcript_date ) from transcripts"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, other_details )\n#\n### When is the first transcript released? List the date and details.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcript_date , other_details from transcripts order by transcript_date asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, other_details, transcript_id )\n# transcript_contents ( student_course_id, transcript_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### What is the earliest date of a transcript release, and what details can you tell me?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcript_date , other_details from transcripts order by transcript_date asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_id )\n# transcript_contents ( transcript_id, student_course_id )\n# student_enrolment_courses ( student_course_id )\n# student_enrolment ( student_enrolment_id )\n# students ( student_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### How many transcripts are released?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from transcripts"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_id )\n# transcript_contents ( transcript_id, student_course_id )\n# student_enrolment_courses ( student_enrolment_id, course_id )\n# student_enrolment ( student_enrolment_id, student_id )\n# students ( student_id )\n# student_enrolment.student_id = students.student_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### How many transcripts are listed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from transcripts"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date )\n# transcript_contents ( transcript_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### What is the last transcript release date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcript_date from transcripts order by transcript_date desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date )\n# transcript_contents ( transcript_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### When was the last transcript released?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcript_date from transcripts order by transcript_date desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , student_course_id from transcript_contents group by student_course_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# courses ( course_id, course_name, course_description, other_details )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , student_course_id from transcript_contents group by student_course_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, transcript_id, other_details )\n# transcript_contents ( transcript_id, student_course_id )\n# transcript_contents.transcript_id = transcripts.transcript_id\n#\n### Show the date of the transcript which shows the least number of results, also list the id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id group by transcript_contents.transcript_id order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# transcripts ( transcript_date, transcript_id )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# courses ( course_id, course_name, course_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### What is the date and id of the transcript with the least number of results?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id group by transcript_contents.transcript_id order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n#\n### Find the semester when both Master students and Bachelor students got enrolled in.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student_enrolment.semester_id from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id where degree_summary_name = 'Master' intersect select distinct student_enrolment.semester_id from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id where degree_summary_name = 'Bachelor'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# student_enrolment ( degree_program_id, semester_id, student_id )\n# degree_programs ( degree_program_id, department_id )\n# semesters ( semester_id, semester_name, semester_description )\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n#\n### What is the id of the semester that had both Masters and Bachelors students enrolled?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct student_enrolment.semester_id from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id where degree_summary_name = 'Master' intersect select distinct student_enrolment.semester_id from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id where degree_summary_name = 'Bachelor'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( current_address_id, permanent_address_id )\n# addresses ( address_id )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### How many different addresses do the students currently live?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct current_address_id ) from students"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( current_address_id, permanent_address_id, student_id, first_name, middle_name, last_name )\n# addresses ( address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country )\n# student_enrolment ( student_enrolment_id, student_id )\n# student_enrolment_courses ( student_course_id, student_enrolment_id )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n#\n### What are the different addresses that have students living there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct current_address_id ) from students"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( last_name, first_name, middle_name, email_address, cell_mobile_number, other_student_details, student_id )\n# addresses ( line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details, address_id )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# courses ( course_id, course_name, course_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### List all the student details in reversed lexicographical order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "other_student_details from students order by other_student_details desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( last_name, first_name, middle_name, student_id, current_address_id, permanent_address_id, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# addresses ( line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# degree_programs ( degree_summary_name, degree_summary_description, other_details )\n# departments ( department_name, department_description, other_details )\n# courses ( course_name, course_description, other_details )\n# sections ( section_name, section_description, other_details )\n# semesters ( semester_name, semester_description, other_details )\n# student_enrolment ( other_details )\n# student_enrolment_courses (  )\n# transcripts ( transcript_date, other_details )\n# transcript_contents (  )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What other details can you tell me about students in reverse alphabetical order?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "other_student_details from students order by other_student_details desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# sections ( section_id, course_id, section_name, section_description, other_details )\n#\n### Describe the section h.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_description from sections where section_name = 'h'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# addresses ( line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details )\n# courses ( course_id, course_name, course_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# students ( student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What is the description for the section named h?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "section_description from sections where section_name = 'h'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, permanent_address_id, cell_mobile_number )\n# addresses ( address_id, country )\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n#\n### Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.first_name from students join addresses on students.permanent_address_id = addresses.address_id where addresses.country = 'haiti' or students.cell_mobile_number = '09700166582'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# students ( first_name, cell_mobile_number, permanent_address_id )\n# addresses ( country )\n# courses ( course_id, course_name, course_description, other_details )\n# departments ( department_id, department_name, department_description, other_details )\n# degree_programs ( degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details )\n# sections ( section_id, course_id, section_name, section_description, other_details )\n# semesters ( semester_id, semester_name, semester_description, other_details )\n# student_enrolment ( student_enrolment_id, degree_program_id, semester_id, student_id, other_details )\n# student_enrolment_courses ( student_course_id, course_id, student_enrolment_id )\n# transcripts ( transcript_id, transcript_date, other_details )\n# transcript_contents ( student_course_id, transcript_id )\n# degree_programs.department_id = departments.department_id\n# sections.course_id = courses.course_id\n# students.permanent_address_id = addresses.address_id\n# students.current_address_id = addresses.address_id\n# student_enrolment.student_id = students.student_id\n# student_enrolment.semester_id = semesters.semester_id\n# student_enrolment.degree_program_id = degree_programs.degree_program_id\n# student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\n# student_enrolment_courses.course_id = courses.course_id\n# transcript_contents.transcript_id = transcripts.transcript_id\n# transcript_contents.student_course_id = student_enrolment_courses.student_course_id\n#\n### What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "students.first_name from students join addresses on students.permanent_address_id = addresses.address_id where addresses.country = 'haiti' or students.cell_mobile_number = '09700166582'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, id, directed_by, written_by, original_air_date, production_code, channel )\n#\n### List the title of all cartoons in alphabetical order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon order by title asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title )\n#\n### What are the titles of the cartoons sorted alphabetically?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon order by title asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, id, title, written_by, original_air_date, production_code, channel )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### List all cartoon directed by \"Ben Jones\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon where directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, title, id, written_by, original_air_date, production_code, channel )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### What are the names of all cartoons directed by Ben Jones?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon where directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, id, title, directed_by, original_air_date, production_code, channel )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### How many cartoons were written by \"Joseph Kuhr\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cartoon where written_by = 'Joseph Kuhr'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, id, title, directed_by, original_air_date, production_code, channel )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( channel, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the number of cartoones written by Joseph Kuhr?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from cartoon where written_by = 'Joseph Kuhr'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, directed_by, original_air_date )\n# tv_channel ( id, series_name, country, language )\n# cartoon.channel = tv_channel.id\n#\n### list all cartoon titles and their directors ordered by their air date\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title , directed_by from cartoon order by original_air_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, directed_by, original_air_date, written_by )\n# tv_channel ( series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the name and directors of all the cartoons that are ordered by air date?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title , directed_by from cartoon order by original_air_date asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, title )\n# tv_channel ( id, series_name )\n# tv_series ( channel, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, directed_by )\n# tv_channel ( series_name, id )\n# cartoon.channel = tv_channel.id\n#\n### What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( country, id )\n#\n### Which country has the most of TV Channels? List the country and number of TV Channels it has.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country , count ( * ) from tv_channel group by country order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( country, id )\n# tv_series ( channel, id )\n# cartoon ( channel, id )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the country with the most number of TV Channels and how many does it have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country , count ( * ) from tv_channel group by country order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, content )\n#\n### List the number of different series names and contents in the TV Channel table.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct series_name ) , count ( distinct content ) from tv_channel"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, content, id, country, language, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( id, title, directed_by, written_by, original_air_date, production_code, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### How many different series and contents are listed in the TV Channel table?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct series_name ) , count ( distinct content ) from tv_channel"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, content, id )\n#\n### What is the content of TV Channel with serial name \"Sky Radio\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "content from tv_channel where series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, content )\n# tv_series ( channel )\n# cartoon ( channel, title )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the content of the series Sky Radio?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "content from tv_channel where series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, package_option )\n# tv_series ( channel )\n# cartoon ( channel, title )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the Package Option of TV Channel with serial name \"Sky Radio\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option from tv_channel where series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, package_option )\n# tv_series ( channel )\n# tv_series.channel = tv_channel.id\n#\n### What are the Package Options of the TV Channels whose series names are Sky Radio?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option from tv_channel where series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language, id )\n# tv_series ( channel )\n# cartoon ( channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### How many TV Channel using language English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from tv_channel where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language, id, series_name, country )\n# tv_series ( channel, id )\n# cartoon ( channel, id )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### How many TV Channels use the English language?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from tv_channel where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language )\n# tv_series ( channel )\n# cartoon ( channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### List the language used least number of TV Channel. List language and number of TV Channel.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , count ( * ) from tv_channel group by language order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language, id )\n# tv_series ( channel, id )\n# cartoon ( channel, title, id )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are the languages used by the least number of TV Channels and how many channels use it?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , count ( * ) from tv_channel group by language order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, language, series_name, country, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( channel, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# cartoon ( channel, id, title, directed_by, written_by, original_air_date, production_code )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### List each language and the number of TV Channels using it.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , count ( * ) from tv_channel group by language"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, language, series_name, country, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( id, channel, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# cartoon ( id, channel, title, directed_by, written_by, original_air_date, production_code )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### For each language, list the number of TV Channels that use it.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , count ( * ) from tv_channel group by language"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, channel )\n# tv_channel ( id, series_name )\n# tv_series ( channel, episode, air_date )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = 'The Rise of the Blue Beetle!'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, channel, directed_by, written_by, original_air_date, production_code )\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( channel, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = 'The Rise of the Blue Beetle!'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( title, channel )\n# tv_channel ( id, series_name )\n# tv_series ( channel, episode, air_date )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cartoon.title from tv_channel join cartoon on tv_channel.id = cartoon.channel where tv_channel.series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon ( title, id, directed_by, written_by, original_air_date, production_code, channel )\n# tv_series ( episode, id, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cartoon.title from tv_channel join cartoon on tv_channel.id = cartoon.channel where tv_channel.series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, rating, id, air_date )\n# tv_channel ( series_name, id, country, language )\n# tv_series.channel = tv_channel.id\n#\n### List the Episode of all TV series sorted by rating.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "episode from tv_series order by rating asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, rating, air_date, weekly_rank, channel )\n# tv_channel ( id, series_name, country, language )\n# cartoon ( id, title, channel, original_air_date )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are all of the episodes ordered by ratings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "episode from tv_series order by rating asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( rating, episode, id, air_date, weekly_rank, share, 18_49_rating_share, viewers_m, channel )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series.channel = tv_channel.id\n#\n### List top 3 highest Rating  TV series. List the TV series's Episode and Rating.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "episode , rating from tv_series order by rating desc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( rating, episode, id )\n# tv_channel ( id, series_name, country )\n# cartoon ( title, id, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are 3 most highly rated episodes in the TV series table and what were those ratings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "episode , rating from tv_series order by rating desc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( share, channel, id, episode, air_date, rating, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon ( channel, id, title, directed_by, written_by, original_air_date, production_code )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is minimum and maximum share of TV series?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( share ) , min ( share ) from tv_series"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( share, id, episode, air_date, rating )\n# cartoon ( id, title, channel )\n#\n### What is the maximum and minimum share for the TV series?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( share ) , min ( share ) from tv_series"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, air_date, id, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( title, directed_by, written_by, original_air_date, production_code, channel )\n# tv_channel ( series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the air date of TV series with Episode \"A Love of a Lifetime\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "air_date from tv_series where episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, country, language )\n# tv_series ( episode, air_date )\n# cartoon ( title, original_air_date )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### When did the episode \"A Love of a Lifetime\" air?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "air_date from tv_series where episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, weekly_rank, id, air_date, rating, share, 18_49_rating_share, viewers_m, channel )\n# cartoon ( title, id, directed_by, written_by, original_air_date, production_code, channel )\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "weekly_rank from tv_series where episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, weekly_rank, id, air_date, rating, share, 18_49_rating_share, viewers_m, channel )\n# cartoon ( title, id, directed_by, written_by, original_air_date, production_code, channel )\n#\n### What is the weekly rank for the episode \"A Love of a Lifetime\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "weekly_rank from tv_series where episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( channel, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_series.channel = tv_channel.id\n#\n### What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_series.episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, id, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( title, id, directed_by, written_by, original_air_date, production_code, channel )\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the name of the series that has the episode \"A Love of a Lifetime\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_series.episode = 'A Love of a Lifetime'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# tv_series ( id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( id, title, directed_by, written_by, original_air_date, production_code, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_series.episode from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_channel.series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_series ( episode, air_date, channel, id, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_channel ( series_name, id, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon ( channel, id, title, directed_by, written_by, original_air_date, production_code )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the episode for the TV series named \"Sky Radio\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_series.episode from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_channel.series_name = 'Sky Radio'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, id, title )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# tv_series ( channel, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### Find the number of cartoons directed by each of the listed directors.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , directed_by from cartoon group by directed_by"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, id, title, channel )\n# tv_channel ( id, series_name, content )\n# cartoon.channel = tv_channel.id\n#\n### How many cartoons did each director create?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , directed_by from cartoon group by directed_by"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( original_air_date, production_code, channel )\n#\n### Find the production code and channel of the most recently aired cartoon .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "production_code , channel from cartoon order by original_air_date desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( production_code, channel, id, title, directed_by, written_by, original_air_date )\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### What is the produdction code and channel of the most recent cartoon ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "production_code , channel from cartoon order by original_air_date desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( hight_definition_tv, package_option, id )\n# tv_series ( channel )\n# cartoon ( channel, title )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### Find the package choice and series name of the TV channel that has high definition TV.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option , series_name from tv_channel where hight_definition_tv = 'yes'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( hight_definition_tv, package_option, id, series_name )\n# tv_series ( channel, id )\n# cartoon ( channel, title, id )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are the package options and the name of the series for the TV Channel that supports high definition TV?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option , series_name from tv_channel where hight_definition_tv = 'yes'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, title, channel )\n# tv_channel ( country, series_name, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### which countries' tv channels are playing some cartoon written by Todd Casey?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, channel )\n# tv_channel ( id, country )\n# tv_series ( channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are the countries that have cartoons on TV that were written by Todd Casey?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, title, directed_by, original_air_date, production_code, channel )\n# tv_channel ( country, series_name, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### which countries' tv channels are not playing any cartoon written by Todd Casey?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country from tv_channel except select tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( written_by, id, title )\n# tv_channel ( id, country )\n# tv_series ( channel, id, episode )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are the countries that are not playing cartoons written by Todd Casey?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country from tv_channel except select tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, title, id, written_by, original_air_date, production_code, channel )\n# tv_channel ( series_name, country, id, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon.channel = tv_channel.id\n#\n### Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Michael Chang' intersect select tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, title, channel )\n# tv_channel ( series_name, country, id )\n# tv_series ( channel, id, episode, air_date )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Michael Chang' intersect select tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language, pixel_aspect_ratio_par )\n# tv_series ( channel )\n# cartoon ( channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### find the pixel aspect ratio and nation of the tv channels that do not use English.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "pixel_aspect_ratio_par , country from tv_channel where language != 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( language, pixel_aspect_ratio_par, country )\n# tv_series ( channel )\n# cartoon ( channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What is the pixel aspect ratio and country of origin for all TV channels that do not use English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "pixel_aspect_ratio_par , country from tv_channel where language != 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( country, id )\n# tv_series ( channel, id )\n# cartoon ( channel, id )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### find id of the tv channels that from the countries where have more than two tv channels.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from tv_channel group by country having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv, package_option )\n# tv_series ( id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( id, title, directed_by, written_by, original_air_date, production_code, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### What are the ids of all tv channels that have more than 2 TV channels?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from tv_channel group by country having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# tv_series ( id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel )\n# cartoon ( id, title, directed_by, written_by, original_air_date, production_code, channel )\n# tv_series.channel = tv_channel.id\n# cartoon.channel = tv_channel.id\n#\n### find the id of tv channels that do not play any cartoon directed by Ben Jones.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option )\n# cartoon ( id, title, directed_by, written_by, original_air_date, production_code, channel )\n# cartoon.channel = tv_channel.id\n#\n### What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# cartoon ( directed_by, channel )\n# tv_channel ( package_option, id )\n# cartoon.channel = tv_channel.id\n#\n### find the package option of the tv channel that do not have any cartoon directed by Ben Jones.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option from tv_channel where id not in ( select channel from cartoon where directed_by = 'Ben Jones' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# tv_channel ( package_option, id, series_name, country, language, content, pixel_aspect_ratio_par, pay_per_view_ppv )\n# cartoon ( channel, id, title, directed_by, written_by, original_air_date, production_code )\n# cartoon.channel = tv_channel.id\n#\n### What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "package_option from tv_channel where id not in ( select channel from cartoon where directed_by = 'Ben Jones' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( poker_player_id, people_id, final_table_made, best_finish, money_rank, earnings )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### How many poker players are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( poker_player_id, people_id, final_table_made, best_finish, money_rank, earnings )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### Count the number of poker players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, final_table_made, best_finish, money_rank )\n# people ( people_id )\n# poker_player.people_id = people.people_id\n#\n### List the earnings of poker players in descending order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "earnings from poker_player order by earnings desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, final_table_made, best_finish, money_rank, people_id )\n# people ( people_id, name, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the earnings of poker players, ordered descending by value?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "earnings from poker_player order by earnings desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, best_finish, money_rank, earnings, poker_player_id, people_id )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### List the final tables made and the best finishes of poker players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "final_table_made , best_finish from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, best_finish, poker_player_id, people_id, money_rank )\n# people ( people_id, name, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the final tables made and best finishes for all poker players?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "final_table_made , best_finish from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What is the average earnings of poker players?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( earnings ) from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### Return the average earnings across all poker players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( earnings ) from poker_player"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, money_rank, poker_player_id, people_id, final_table_made, best_finish )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What is the money rank of the poker player with the highest earnings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "money_rank from poker_player order by earnings desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, money_rank, poker_player_id, people_id, final_table_made, best_finish )\n# people ( nationality, name, birth_date, height, people_id )\n# poker_player.people_id = people.people_id\n#\n### Return the money rank of the player with the greatest earnings.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "money_rank from poker_player order by earnings desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, earnings, poker_player_id, best_finish, money_rank )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What is the maximum number of final tables made among poker players with earnings less than 200000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( final_table_made ) from poker_player where earnings < 200000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, earnings, poker_player_id, best_finish, money_rank, people_id )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### Return the maximum final tables made across all poker players who have earnings below 200000.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( final_table_made ) from poker_player where earnings < 200000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# people ( name, people_id, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the names of poker players?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### Return the names of all the poker players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, people_id, final_table_made, best_finish, money_rank )\n# people ( name, people_id, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the names of poker players whose earnings is higher than 300000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id where poker_player.earnings > 300000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# people ( people_id, name, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### Give the names of poker players who have earnings above 300000.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id where poker_player.earnings > 300000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, poker_player_id, people_id, best_finish, money_rank, earnings )\n# people ( name, people_id, nationality, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### List the names of poker players ordered by the final tables made in ascending order.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.final_table_made asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( final_table_made, poker_player_id, people_id, best_finish, money_rank, earnings )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the names of poker players, ordered ascending by the number of final tables they have made?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.final_table_made asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# people ( birth_date, people_id, nationality, name, height )\n# poker_player.people_id = people.people_id\n#\n### What is the birth date of the poker player with the lowest earnings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.birth_date from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, people_id, final_table_made, best_finish, money_rank, poker_player_id )\n# people ( birth_date, people_id, nationality, name, height )\n# poker_player.people_id = people.people_id\n#\n### Return the birth date of the poker player with the lowest earnings.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.birth_date from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( height, people_id, nationality, name, birth_date )\n# poker_player ( money_rank, people_id, final_table_made, best_finish, earnings, poker_player_id )\n# poker_player.people_id = people.people_id\n#\n### What is the money rank of the tallest poker player?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "poker_player.money_rank from people join poker_player on people.people_id = poker_player.people_id order by people.height desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( height, people_id, nationality, name, birth_date )\n# poker_player ( money_rank, poker_player_id, people_id, final_table_made, best_finish, earnings )\n# poker_player.people_id = people.people_id\n#\n### Return the money rank of the poker player with the greatest height.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "poker_player.money_rank from people join poker_player on people.people_id = poker_player.people_id order by people.height desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( height, people_id, nationality, name, birth_date )\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# poker_player.people_id = people.people_id\n#\n### What is the average earnings of poker players with height higher than 200?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( poker_player.earnings ) from people join poker_player on people.people_id = poker_player.people_id where people.height > 200"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( height, people_id, nationality, name, birth_date )\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# poker_player.people_id = people.people_id\n#\n### Give average earnings of poker players who are taller than 200.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( poker_player.earnings ) from people join poker_player on people.people_id = poker_player.people_id where people.height > 200"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id, final_table_made, best_finish, money_rank )\n# people ( people_id, nationality, name, birth_date, height )\n# poker_player.people_id = people.people_id\n#\n### What are the names of poker players in descending order of earnings?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# poker_player ( earnings, poker_player_id, people_id )\n# people ( name, people_id )\n# poker_player.people_id = people.people_id\n#\n### Return the names of poker players sorted by their earnings descending.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, people_id, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### What are different nationalities of people and the corresponding number of people from each nation?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality , count ( * ) from people group by nationality"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, people_id, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### How many people are there of each nationality?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality , count ( * ) from people group by nationality"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### What is the most common nationality of people?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality from people group by nationality order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, name, birth_date, height )\n# poker_player ( people_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### Give the nationality that is most common across all people.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality from people group by nationality order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, people_id, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### What are the nationalities that are shared by at least two people?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality from people group by nationality having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, name, birth_date, height, people_id )\n# poker_player ( people_id, final_table_made, best_finish, money_rank, earnings, poker_player_id )\n# poker_player.people_id = people.people_id\n#\n### Return the nationalities for which there are two or more people.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "nationality from people group by nationality having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( name, birth_date, nationality, height )\n# poker_player ( people_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### List the names and birth dates of people in ascending alphabetical order of name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , birth_date from people order by name asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( name, birth_date, people_id )\n# poker_player ( poker_player_id, best_finish, final_table_made, money_rank, earnings, people_id )\n# poker_player.people_id = people.people_id\n#\n### What are the names and birth dates of people, ordered by their names in alphabetical order?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , birth_date from people order by name asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, name, birth_date, height )\n# poker_player ( poker_player_id, people_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### Show names of people whose nationality is not \"Russia\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from people where nationality != 'Russia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, name, birth_date, height )\n# poker_player ( people_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### What are the names of people who are not from Russia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from people where nationality != 'Russia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( name )\n# poker_player ( people_id )\n# poker_player.people_id = people.people_id\n#\n### List the names of people that are not poker players.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from people where people_id not in ( select people_id from poker_player )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( name, people_id, nationality, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### What are the names of people who do not play poker?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from people where people_id not in ( select people_id from poker_player )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, people_id, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### How many distinct nationalities are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct nationality ) from people"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# people ( nationality, people_id, name, birth_date, height )\n# poker_player ( people_id, poker_player_id, final_table_made, best_finish, money_rank, earnings )\n# poker_player.people_id = people.people_id\n#\n### Count the number of different nationalities.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct nationality ) from people"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# area_code_state ( state, area_code )\n# votes ( state, vote_id, phone_number, contestant_number, created )\n# contestants ( contestant_number, contestant_name )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### How many states are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from area_code_state"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# contestants ( contestant_number, contestant_name )\n# votes ( contestant_number, created )\n# area_code_state ( state, area_code )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### List the contestant numbers and names, ordered by contestant name descending.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "contestant_number , contestant_name from contestants order by contestant_name desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( vote_id, phone_number, state )\n# contestants ( contestant_number )\n# area_code_state ( state )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### List the vote ids, phone numbers and states of all votes.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "vote_id , phone_number , state from votes"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# area_code_state ( area_code, state )\n# contestants ( contestant_number, contestant_name )\n# votes ( vote_id, phone_number, state, contestant_number, created )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What are the maximum and minimum values of area codes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( area_code ) , min ( area_code ) from area_code_state"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( created )\n# area_code_state ( state )\n# contestants ( contestant_number )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What is last date created of votes from the state 'CA'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( created ) from votes where state = 'CA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# contestants ( contestant_name, contestant_number )\n#\n### What are the names of the contestants whose names are not 'Jessie Alloway'\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "contestant_name from contestants where contestant_name != 'Jessie Alloway'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( state, created, vote_id )\n# area_code_state ( state, area_code )\n# contestants ( contestant_number, contestant_name )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What are the distinct states and create time of all votes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct state , created from votes"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( contestant_number )\n# contestants ( contestant_number, contestant_name )\n# votes.contestant_number = contestants.contestant_number\n#\n### What are the contestant numbers and names of the contestants who had at least two votes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "contestants.contestant_number , contestants.contestant_name from contestants join votes on contestants.contestant_number = votes.contestant_number group by contestants.contestant_number having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( contestant_number, vote_id, phone_number, state, created )\n# contestants ( contestant_number, contestant_name )\n# votes.contestant_number = contestants.contestant_number\n#\n### Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "contestants.contestant_number , contestants.contestant_name from contestants join votes on contestants.contestant_number = votes.contestant_number group by contestants.contestant_number order by count ( * ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( state, created, vote_id, phone_number, contestant_number )\n# area_code_state ( state, area_code )\n# contestants ( contestant_number, contestant_name )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What are the number of votes from state 'NY' or 'CA'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from votes where state = 'NY' or state = 'CA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# contestants ( contestant_number, contestant_name )\n# votes ( contestant_number, created )\n# area_code_state ( state )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### How many contestants did not get voted?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from contestants where contestant_number not in ( select contestant_number from votes )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( state, phone_number )\n# contestants ( contestant_number )\n# area_code_state ( area_code, state )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What is the area code in which the most voters voted?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state group by area_code_state.area_code order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# votes ( created, state, phone_number, vote_id )\n# contestants ( contestant_number, contestant_name )\n# area_code_state ( area_code, state )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "votes.created , votes.state , votes.phone_number from contestants join votes on contestants.contestant_number = votes.contestant_number where contestants.contestant_name = 'Tabatha Gehling'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# contestants ( contestant_number )\n# votes ( contestant_number, state, phone_number )\n# area_code_state ( area_code, state )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "area_code_state.area_code from contestants join votes on contestants.contestant_number = votes.contestant_number join area_code_state on votes.state = area_code_state.state where contestants.contestant_name = 'Tabatha Gehling' intersect select area_code_state.area_code from contestants join votes on contestants.contestant_number = votes.contestant_number join area_code_state on votes.state = area_code_state.state where contestants.contestant_name = 'Kelly Clauss'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# contestants ( contestant_name )\n# votes ( contestant_number, created )\n# area_code_state ( state, area_code )\n# votes.contestant_number = contestants.contestant_number\n# votes.state = area_code_state.state\n#\n### Return the names of the contestants whose names contain the substring 'Al' .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "contestant_name from contestants where contestant_name like '%al%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( countrycode, name )\n# country ( code, name, indepyear )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the names of all the countries that became independent after 1950?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where indepyear > 1950"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, indepyear )\n#\n### Give the names of the nations that were founded after 1950.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where indepyear > 1950"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, name )\n# city ( countrycode )\n# countrylanguage ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How many countries have a republic as their form of government?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country where governmentform = 'Republic'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, name )\n# countrylanguage ( countrycode, language )\n# city ( countrycode, name )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How many countries have governments that are republics?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country where governmentform = 'Republic'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( region, surfacearea, code )\n# city ( countrycode, population )\n# countrylanguage ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the total surface area of the countries in the Caribbean region?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( surfacearea ) from country where region = 'Caribbean'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, region, surfacearea, population, capital )\n# countrylanguage ( countrycode, language )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How much surface area do the countires in the Carribean cover together?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( surfacearea ) from country where region = 'Caribbean'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, name )\n#\n### Which continent is Anguilla in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continent from country where name = 'Anguilla'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( name, id, countrycode, district, population )\n# city.countrycode = country.code\n#\n### What is the continent name which Anguilla belongs to?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "continent from country where name = 'Anguilla'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( name, countrycode, district, population )\n# country ( name, region, code, capital )\n# city.countrycode = country.code\n#\n### Which region is the city Kabul located in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "region from country join city on country.code = city.countrycode where city.name = 'Kabul'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( name, district, id, countrycode, population )\n#\n### What region is Kabul in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "region from country join city on country.code = city.countrycode where city.name = 'Kabul'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode )\n# city ( countrycode )\n# country ( code, name )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Which language is the most popular in Aruba?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Aruba' order by percentage desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What language is predominantly spoken in Aruba?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Aruba' order by percentage desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, lifeexpectancy, name )\n# city ( population, name )\n# city.countrycode = country.code\n#\n### What are the population and life expectancies in Brazil?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "population , lifeexpectancy from country where name = 'Brazil'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, lifeexpectancy )\n# city ( countrycode, population )\n# city.countrycode = country.code\n#\n### Give me Brazil's population and life expectancies.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "population , lifeexpectancy from country where name = 'Brazil'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( region, population, code, name, continent, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( population, name, countrycode, district, id )\n# countrylanguage ( percentage, language, isofficial, countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the region and population of Angola?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "population , region from country where name = 'Angola'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( region, population, name )\n# city ( countrycode, population, name )\n# city.countrycode = country.code\n#\n### What region does Angola belong to and what is its population?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "population , region from country where name = 'Angola'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( region, lifeexpectancy, name )\n# countrylanguage ( countrycode, language, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What is the average expected life expectancy for countries in the region of Central Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where region = 'Central Africa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, name, lifeexpectancy )\n# countrylanguage ( countrycode )\n# countrylanguage.countrycode = country.code\n#\n### How long is the people's average life expectancy in Central Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where region = 'Central Africa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, lifeexpectancy, continent )\n# city ( countrycode, name )\n# city.countrycode = country.code\n#\n### What is the name of country that has the shortest life expectancy in Asia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Asia' order by lifeexpectancy asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, lifeexpectancy, region, surfacearea, indepyear, population, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( name, countrycode, district, population )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Give the name of the country in Asia with the lowest life expectancy.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Asia' order by lifeexpectancy asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, population )\n# city ( countrycode )\n# city.countrycode = country.code\n#\n### What is the total population and maximum GNP in Asia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , max ( gnp ) from country where continent = 'Asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, population, gnp, name, indepyear, surfacearea, region, lifeexpectancy, gnpold, localname, governmentform, headofstate, capital, code, code2 )\n# city ( countrycode, population, name, district, id )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How many people live in Asia, and what is the largest GNP among them?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , max ( gnp ) from country where continent = 'Asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, governmentform, lifeexpectancy, name )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### What is the average life expectancy in African countries that are republics?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform = 'Republic'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, governmentform, lifeexpectancy, population )\n# city ( countrycode )\n# city.countrycode = country.code\n#\n### Give the average life expectancy for countries in Africa which are republics?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform = 'Republic'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, surfacearea )\n# city ( countrycode )\n# city.countrycode = country.code\n#\n### What is the total surface area of the continents Asia and Europe?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, surfacearea, name, region, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n#\n### Give the total surface area covered by countries in Asia or Europe.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population, district, id, name, countrycode )\n# country ( population, code, name )\n# city.countrycode = country.code\n#\n### How many people live in Gelderland district?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) from city where district = 'Gelderland'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( district, population, id, name )\n# country ( code, name, population )\n# city.countrycode = country.code\n#\n### What is the total population of Gelderland district?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) from city where district = 'Gelderland'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, gnp, population, code, name, continent, region, surfacearea, indepyear, lifeexpectancy, gnpold, localname, headofstate, capital, code2 )\n# city ( countrycode, population, id, name, district )\n# city.countrycode = country.code\n#\n### What is the average GNP and total population in all nations whose government is US territory?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( gnp ) , sum ( population ) from country where governmentform = 'US Territory'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, gnp, population, governmentform )\n# city ( countrycode, population, name )\n# countrylanguage ( countrycode, language, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Give the mean GNP and total population of nations which are considered US territory.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( gnp ) , sum ( population ) from country where governmentform = 'US Territory'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# country ( name, code, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage.countrycode = country.code\n#\n### How many unique languages are spoken in the world?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct language ) from countrylanguage"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( id, name, countrycode, district, population )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the number of distinct languages used around the world?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct language ) from countrylanguage"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, name, continent )\n#\n### How many type of governments are in Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct governmentform ) from country where continent = 'Africa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, continent, name, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, headofstate, capital, code2 )\n# city ( countrycode, name, district, population )\n# city.countrycode = country.code\n#\n### How many different forms of governments are there in Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct governmentform ) from country where continent = 'Africa'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, percentage )\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage.countrycode = country.code\n#\n### What is the total number of languages used in Aruba?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Aruba'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### How many languages are spoken in Aruba?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Aruba'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, governmentform )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### How many official languages does Afghanistan have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Afghanistan' and isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, governmentform, continent, population, capital )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### How many official languages are spoken in Afghanistan?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Afghanistan' and isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, population, continent, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What is name of the country that speaks the largest number of languages?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### Give the name of the nation that uses the greatest amount of languages.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, code, name, population, region )\n# countrylanguage ( countrycode, language, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Which continent has the most diverse languages?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, code, name, population )\n# countrylanguage ( countrycode, language, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Which continent speaks the most languages?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode )\n# country ( code, name )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How many countries speak both English and Dutch?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Dutch' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# country ( name, code, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage.countrycode = country.code\n#\n### What is the number of nations that use English and Dutch?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Dutch' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, population, governmentform )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the names of nations speak both English and French?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'French'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, continent, headofstate )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Give the names of nations that speak both English and French.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'French'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( id, name, countrycode, district, population )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the names of nations where both English and French are official languages?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' and countrylanguage.isofficial = 'T' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'French' and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, governmentform, continent, population )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city ( countrycode, name )\n# sqlite_sequence ( name, seq )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Give the names of countries with English and French as official languages.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' and countrylanguage.isofficial = 'T' intersect select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'French' and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode )\n# country ( continent, code )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the number of distinct continents where Chinese is spoken?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct continent ) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Chinese'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, code, name )\n# countrylanguage ( countrycode, language, percentage )\n# countrylanguage.countrycode = country.code\n#\n### How many continents speak Chinese?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct continent ) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Chinese'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, percentage, countrycode )\n# country ( region, name )\n# countrylanguage.countrycode = country.code\n#\n### What are the regions that use English or Dutch?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' or countrylanguage.language = 'Dutch'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# country ( region, name, code, continent )\n# city ( countrycode, name, district )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Which regions speak Dutch or English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' or countrylanguage.language = 'Dutch'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, countrycode, percentage )\n# country ( name, code, localname, governmentform )\n# countrylanguage.countrycode = country.code\n#\n### What are the countries where either English or Dutch is the official language ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'english' and isofficial = 't' union select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'dutch' and isofficial = 't'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, governmentform, code, population, continent, indepyear, capital, region, surfacearea, lifeexpectancy, gnp, gnpold, localname, headofstate, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Which countries have either English or Dutch as an official language?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "* from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' and isofficial = 'T' union select * from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Dutch' and isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent )\n# countrylanguage ( language, percentage, countrycode )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Which language is the most popular on the Asian continent?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'Asia' group by countrylanguage.language order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, continent, population )\n# countrylanguage ( language, countrycode )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the language that is used by the largest number of Asian nations?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'Asia' group by countrylanguage.language order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, name )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### Which languages are spoken by only one country in republic governments?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.governmentform = 'Republic' group by countrylanguage.language having count ( * ) = 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, governmentform, localname, headofstate )\n# countrylanguage ( countrycode, language, isofficial )\n# countrylanguage.countrycode = country.code\n#\n### What languages are only used by a single country with a republic government?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.governmentform = 'Republic' group by countrylanguage.language having count ( * ) = 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population, name, countrycode, district, id )\n# country ( population, code, name, capital, continent, region )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Find the city with the largest population that uses English.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city.name , city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'English' order by city.population desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( name, population, countrycode, district )\n# countrylanguage ( language, countrycode, percentage, isofficial )\n# country ( name, population, code, continent )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the most populace city that speaks English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "city.name , city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'English' order by city.population desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, continent, surfacearea, lifeexpectancy )\n# city ( name, population, countrycode )\n# countrylanguage ( countrycode, language, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Find the name, population and expected life length of asian country with the largest area?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , population , lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, lifeexpectancy, continent, surfacearea, indepyear, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( name, population, countrycode, district )\n# city.countrycode = country.code\n#\n### What are the name, population, and life expectancy of the largest Asian country by land?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , population , lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( lifeexpectancy, name, code )\n# countrylanguage ( language, countrycode, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What is average life expectancy in the countries where English is not the official language?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' and countrylanguage.isofficial = 'T' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Give the mean life expectancy of countries in which English is not the official language.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( lifeexpectancy ) from country where name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' and countrylanguage.isofficial = 'T' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population )\n# country ( population, code )\n# countrylanguage ( percentage, countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the total number of people living in the nations that do not use English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) from country where name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, code, name, continent, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### How many people live in countries that do not speak English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) from country where name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'English' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( headofstate, code, name )\n# countrylanguage ( countrycode, language, isofficial )\n# city ( countrycode, name )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What is the official language spoken in the country whose head of state is Beatrix?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix' and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( headofstate, name, code, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, capital, code2 )\n# countrylanguage ( language, isofficial, countrycode, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What is the official language used in the country the name of whose head of state is Beatrix.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix' and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, countrycode )\n# country ( code, name, indepyear )\n# countrylanguage.countrycode = country.code\n#\n### What is the total number of unique official languages spoken in the countries that are founded before 1930?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where indepyear < 1930 and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, indepyear, continent, governmentform )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city ( name, countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### For the countries founded before 1930, what is the total number of distinct official languages?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where indepyear < 1930 and countrylanguage.isofficial = 'T'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, surfacearea, continent, code )\n# city ( countrycode, name )\n# city.countrycode = country.code\n#\n### What are the countries that have greater surface area than any country in Europe?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where surfacearea > ( select min ( surfacearea ) from country where continent = 'Europe' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( surfacearea, name, continent, code, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( countrycode, id, name, district, population )\n# city.countrycode = country.code\n#\n### Which countries have greater area than that of any country in Europe?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where surfacearea > ( select min ( surfacearea ) from country where continent = 'Europe' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, population, region )\n# city ( countrycode, population )\n# city.countrycode = country.code\n#\n### What are the African countries that have a  population less than any country in Asia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Africa' and population < ( select max ( population ) from country where continent = 'Asia' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, population )\n# city ( countrycode )\n# city.countrycode = country.code\n#\n### Which African countries have a smaller population than that of any country in Asia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Africa' and population < ( select min ( population ) from country where continent = 'Asia' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, population, name, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital )\n# city ( countrycode, population, name, district )\n# city.countrycode = country.code\n#\n### Which Asian countries have a population that is larger than any country in Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Asia' and population > ( select max ( population ) from country where continent = 'Africa' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, population, region, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the Asian countries which have a population larger than that of any country in Africa?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Asia' and population > ( select min ( population ) from country where continent = 'Africa' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, population, continent, region, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the country codes for countries that do not speak English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrycode from countrylanguage except select countrycode from countrylanguage where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, governmentform, continent, region, population, capital )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Return the country codes for countries that do not speak English.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrycode from countrylanguage except select countrycode from countrylanguage where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### What are the country codes of countries where people use languages other than English?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct countrycode from countrylanguage where language != 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, region )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### Give the country codes for countries in which people speak langauges that are not English.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct countrycode from countrylanguage where language != 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, region, governmentform, population )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the codes of the countries that do not speak English and whose government forms are not Republic?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "code from country where governmentform != 'Republic' except select countrycode from countrylanguage where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( countrycode )\n# country ( code, governmentform )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Return the codes of countries that do not speak English and do not have Republics for governments.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "code from country where governmentform != 'Republic' except select countrycode from countrylanguage where language = 'English'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city ( name, countrycode, district, population )\n# country ( code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Which cities are in European countries where English is not the official language?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct city.name from country join city on city.countrycode = country.code where country.continent = 'Europe' and country.name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 'T' and countrylanguage.language = 'English' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( name, countrycode, district, population, id )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n#\n### What are the names of cities in Europe for which English is not the official language?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct city.name from country join city on city.countrycode = country.code where country.continent = 'Europe' and country.name not in ( select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 'T' and countrylanguage.language = 'English' )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( name, countrycode, district, population )\n# country ( name, code, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Which unique cities are in Asian countries where Chinese is the official language ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct city.name from country join countrylanguage on country.code = countrylanguage.countrycode join city on country.code = city.countrycode where countrylanguage.isofficial = 't' and countrylanguage.language = 'chinese' and country.continent = 'asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, countrycode )\n# country ( name, code, continent, governmentform )\n# city ( name, countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Return the different names of cities that are in Asia and for which Chinese is the official language.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct city.name from country join countrylanguage on country.code = countrylanguage.countrycode join city on country.code = city.countrycode where countrylanguage.isofficial = 'T' and countrylanguage.language = 'Chinese' and country.continent = 'Asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, name, indepyear, surfacearea )\n# city ( population, name, countrycode, district )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the name, independence year, and surface area of the country with the smallest population?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , surfacearea , indepyear from country order by population asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, name, indepyear, surfacearea, code )\n# city ( population, countrycode, name, district )\n# city.countrycode = country.code\n#\n### Give the name, year of independence, and surface area of the country that has the lowest population.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , surfacearea , indepyear from country order by population asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, headofstate, surfacearea )\n# city ( population )\n# city.countrycode = country.code\n#\n### What are the population, name and leader of the country with the largest area?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , population , headofstate from country order by surfacearea desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( surfacearea, name, population, headofstate )\n#\n### Give the name, population, and head of state for the country that has the largest area.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , population , headofstate from country order by surfacearea desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, population, indepyear, governmentform )\n# countrylanguage ( countrycode, language )\n# countrylanguage.countrycode = country.code\n#\n### Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( countrylanguage.language ) , country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, code, population, governmentform, continent, region )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the names of countries that speak more than 2 languages, as well as how many languages they speak?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( countrylanguage.language ) , country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( district, population )\n#\n### Find the number of cities in each district whose population is greater than the average population of cities?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population, district, id )\n# country ( code, population, name )\n# countrylanguage ( countrycode, language )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### How many cities in each district have a population that is above the average population across all cities?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, population, lifeexpectancy, code, name, continent, region, surfacearea, indepyear, gnp, gnpold, localname, headofstate, capital, code2 )\n# city ( countrycode, population, id, name, district )\n# city.countrycode = country.code\n#\n### Find the government form name and total population for each government form whose average life expectancy is longer than 72.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , governmentform from country group by governmentform having avg ( lifeexpectancy ) > 72"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( governmentform, population, lifeexpectancy )\n# countrylanguage ( countrycode )\n# city ( countrycode, population )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , governmentform from country group by governmentform having avg ( lifeexpectancy ) > 72"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, lifeexpectancy, population, name )\n# countrylanguage ( countrycode )\n# countrylanguage.countrycode = country.code\n#\n### Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , avg ( lifeexpectancy ) , continent from country group by continent having avg ( lifeexpectancy ) < 72"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, population, lifeexpectancy, name )\n# city ( countrycode, population, district )\n# city.countrycode = country.code\n#\n### What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , avg ( lifeexpectancy ) , continent from country group by continent having avg ( lifeexpectancy ) < 72"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, surfacearea, code, continent, region, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n#\n### What are the names and areas of countries with the top 5 largest area?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , surfacearea from country order by surfacearea desc limit 5"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, surfacearea, code, continent, region, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( name, population, id, countrycode, district )\n# city.countrycode = country.code\n#\n### Return the names and surface areas of the 5 largest countries.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , surfacearea from country order by surfacearea desc limit 5"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, name )\n# city ( population, countrycode )\n# countrylanguage ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are names of countries with the top 3 largest population?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country order by population desc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( population, name, code )\n# city ( countrycode, population, name )\n# city.countrycode = country.code\n#\n### Return the names of the 3 most populated countries.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country order by population desc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, code, continent, region, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( name, population, countrycode, id, district )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the names of the nations with the 3 lowest populations?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country order by population asc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, population, code )\n# city ( name, countrycode, population )\n# city.countrycode = country.code\n#\n### Return the names of the 3 countries with the fewest people.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country order by population asc limit 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, name )\n# city ( countrycode )\n# countrylanguage ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### how many countries are in Asia?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country where continent = 'Asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, name, population, code, region )\n# city ( countrycode, population, name, district )\n# city.countrycode = country.code\n#\n### Count the number of countries in Asia.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from country where continent = 'Asia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, population, code )\n# city ( name, countrycode, population )\n# city.countrycode = country.code\n#\n### What are the names of the countries that are in the continent of Europe and have a population of 80000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Europe' and population = '80000'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, population )\n# city ( name, countrycode, population )\n# countrylanguage ( countrycode, language, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Give the names of countries that are in Europe and have a population equal to 80000.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from country where continent = 'Europe' and population = '80000'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( continent, population, surfacearea, name, indepyear, code, region, indepyear, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# city ( population, name, countrycode, district, id )\n# city.countrycode = country.code\n#\n### What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , avg ( surfacearea ) from country where continent = 'north america' and surfacearea > 3000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( name, continent, surfacearea, population, region )\n# city ( countrycode, population, district, name )\n# city.countrycode = country.code\n#\n### Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "sum ( population ) , avg ( surfacearea ) from country where continent = 'north america' and surfacearea > 3000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population, name, countrycode, district, id )\n# country ( population, code, name, continent )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the cities whose population is between 160000 and 900000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from city where population between 160000 and 900000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# city ( population, name )\n# country ( code, name )\n# countrylanguage ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Return the names of cities that have a population between 160000 and 900000 .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from city where population between 160000 and 900000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, countrycode )\n# country ( name, code )\n# countrylanguage.countrycode = country.code\n#\n### Which language is spoken by the largest number of countries?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language from countrylanguage group by language order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language )\n# country ( name, code, code2 )\n# city ( countrycode, name, district, population )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Give the language that is spoken in the most countries.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language from countrylanguage group by language order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, population, continent, region, surfacearea, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What is the language spoken by the largest percentage of people in each country?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , countrycode , max ( percentage ) from countrylanguage group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, continent, population, indepyear, governmentform, headofstate, capital )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "language , countrycode , max ( percentage ) from countrylanguage group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, percentage )\n# country ( population, name, code )\n# countrylanguage.countrycode = country.code\n#\n### What is the total number of countries where Spanish is spoken by the largest percentage of people?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , max ( percentage ) from countrylanguage where language = 'Spanish' group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, percentage, countrycode )\n# country ( name, code, population )\n# city ( countrycode )\n# city.countrycode = country.code\n# countrylanguage.countrycode = country.code\n#\n### Count the number of countries for which Spanish is the predominantly spoken language.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) , max ( percentage ) from countrylanguage where language = 'Spanish' group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# country ( code, name, population, region, surfacearea, continent, indepyear, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 )\n# countrylanguage ( countrycode, language, isofficial, percentage )\n# countrylanguage.countrycode = country.code\n#\n### What are the codes of countries where Spanish is spoken by the largest percentage of people?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrycode , max ( percentage ) from countrylanguage where language = 'Spanish' group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# countrylanguage ( language, isofficial, percentage )\n# country ( code, name, continent, region )\n# countrylanguage.countrycode = country.code\n#\n### Return the codes of countries for which Spanish is the predominantly spoken language.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "countrycode , max ( percentage ) from countrylanguage where language = 'Spanish' group by countrycode"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra ( orchestra_id, conductor_id, record_company, year_of_founded, major_record_format )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### How many conductors are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from conductor"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n#\n### Count the number of conductors.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from conductor"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id , name , age , nationality , year_of_work )\n# orchestra ( orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format )\n# performance ( performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share )\n# show ( show_id , performance_id , if_first_show , result , attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### List the names of conductors in ascending order of age.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, age )\n# orchestra ( conductor_id )\n# performance ( orchestra_id )\n# show ( performance_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the names of conductors, ordered by age?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by age asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name )\n# orchestra ( conductor_id, orchestra )\n# performance ( orchestra_id, type )\n# show ( performance_id, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the names of conductors whose nationalities are not \"USA\"?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor where nationality != 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( nationality, conductor_id, name, age, year_of_work )\n# orchestra ( conductor_id, orchestra_id, orchestra, record_company, year_of_founded, major_record_format )\n# performance ( orchestra_id, performance_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( performance_id, show_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Return the names of conductors that do not have the nationality \"USA\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor where nationality != 'USA'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the record companies of orchestras in descending order of years in which they were founded?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra order by year_of_founded desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( year_of_founded, orchestra )\n# performance ( orchestra_id, date )\n# show ( performance_id, attendance )\n# conductor ( conductor_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Return the record companies of orchestras, sorted descending by the years in which they were founded.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra order by year_of_founded desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# show ( attendance, performance_id )\n# performance ( performance_id )\n# conductor ( conductor_id )\n# orchestra ( orchestra_id, conductor_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What is the average attendance of shows?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( attendance ) from show"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# show ( attendance, show_id, performance_id, if_first_show, result )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show.performance_id = performance.performance_id\n#\n### Return the average attendance across all shows.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( attendance ) from show"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# performance ( type, share, performance_id, orchestra_id, date, official_ratings_(millions), weekly_rank )\n#\n### What are the maximum and minimum share of performances whose type is not \"Live final\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( share ) , min ( share ) from performance where type != 'Live final'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# performance ( type, share, performance_id, orchestra_id, date, official_ratings_(millions), weekly_rank )\n# show ( performance_id, if_first_show, result, attendance, show_id )\n# show.performance_id = performance.performance_id\n#\n### Return the maximum and minimum shares for performances that do not have the type \"Live final\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( share ) , min ( share ) from performance where type != 'Live final'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( nationality, conductor_id, name, age, year_of_work )\n# orchestra ( conductor_id, orchestra_id, orchestra, record_company, year_of_founded, major_record_format )\n# performance ( orchestra_id, performance_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( performance_id, show_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### How many different nationalities do conductors have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct nationality ) from conductor"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( nationality, conductor_id )\n# orchestra ( conductor_id, orchestra_id )\n# performance ( orchestra_id, performance_id )\n# show ( performance_id, show_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Count the number of different nationalities of conductors.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct nationality ) from conductor"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( year_of_work, name, conductor_id, age, nationality )\n# orchestra ( conductor_id, orchestra_id, orchestra, record_company, year_of_founded, major_record_format )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### List names of conductors in descending order of years of work.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by year_of_work desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, age, nationality, year_of_work )\n# orchestra ( conductor_id, orchestra, record_company, year_of_founded, major_record_format )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### What are the names of conductors, sorted descending by the number of years they have worked?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by year_of_work desc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( year_of_work, name, age, nationality, conductor_id )\n# orchestra ( conductor_id, orchestra_id, orchestra, record_company, year_of_founded, major_record_format )\n# performance ( orchestra_id, performance_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( performance_id, show_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### List the name of the conductor with the most years of work.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by year_of_work desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( year_of_work, name, age, nationality, conductor_id )\n# orchestra ( conductor_id, orchestra_id, record_company, year_of_founded, major_record_format, orchestra )\n# performance ( orchestra_id, performance_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( performance_id, show_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What is the name of the conductor who has worked the greatest number of years?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from conductor order by year_of_work desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, conductor_id, age, nationality, year_of_work )\n# orchestra ( orchestra, orchestra_id, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Show the names of conductors and the orchestras they have conducted.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, nationality, age, year_of_work )\n# orchestra ( orchestra_id, orchestra, conductor_id )\n# performance ( performance_id, orchestra_id, date, official_ratings_(millions), weekly_rank, share, type )\n# show ( show_id, performance_id, attendance, if_first_show, result )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the names of conductors as well as the corresonding orchestras that they have conducted?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, conductor_id, age, nationality, year_of_work )\n# orchestra ( conductor_id, orchestra_id, orchestra, record_company, year_of_founded, major_record_format )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### Show the names of conductors that have conducted more than one orchestras.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by orchestra.conductor_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra ( orchestra_id, conductor_id, orchestra, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the names of conductors who have conducted at more than one orchestra?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by orchestra.conductor_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, age, nationality, year_of_work )\n# orchestra ( conductor_id, orchestra, record_company, year_of_founded, major_record_format )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### Show the name of the conductor that has conducted the most number of orchestras.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by orchestra.conductor_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra ( orchestra_id, conductor_id, orchestra, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What is the name of the conductor who has conducted the most orchestras?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by orchestra.conductor_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, conductor_id, age, nationality, year_of_work )\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### Please show the name of the conductor that has conducted orchestras founded after 2008.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where year_of_founded > 2008"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( name, conductor_id )\n# orchestra ( orchestra, conductor_id, year_of_founded )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### What are the names of conductors who have conducted orchestras founded after the year 2008?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where year_of_founded > 2008"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra, record_company )\n#\n### Please show the different record companies and the corresponding number of orchestras.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company , count ( * ) from orchestra group by record_company"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra, record_company, orchestra_id, conductor_id, year_of_founded, major_record_format )\n#\n### How many orchestras does each record company manage?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company , count ( * ) from orchestra group by record_company"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( major_record_format, conductor_id, orchestra_id, orchestra, year_of_founded, record_company )\n# performance ( orchestra_id, type, performance_id, date, official_ratings_(millions), weekly_rank, share )\n# show ( performance_id, if_first_show, result, attendance, show_id )\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Please show the record formats of orchestras in ascending order of count.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "major_record_format from orchestra group by major_record_format order by count ( * ) asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( major_record_format )\n# performance ( orchestra_id )\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### What are the major record formats of orchestras, sorted by their frequency?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "major_record_format from orchestra group by major_record_format order by count ( * ) asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, record_company )\n# performance ( performance_id, orchestra_id )\n# conductor ( conductor_id )\n# show ( show_id, performance_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### List the record company shared by the most number of orchestras.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra group by record_company order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, record_company, orchestra )\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra.conductor_id = conductor.conductor_id\n#\n### What is the record company used by the greatest number of orchestras?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra group by record_company order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### List the names of orchestras that have no performance.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the orchestras that do not have any performances?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, conductor_id, record_company, year_of_founded, orchestra, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### Show the record companies shared by orchestras founded before 2003 and after 2003.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# show ( show_id, performance_id, if_first_show, result, attendance )\n# conductor ( conductor_id, name, age, nationality, year_of_work )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n# show.performance_id = performance.performance_id\n#\n### What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, major_record_format, conductor_id, record_company, year_of_founded )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### Find the number of orchestras whose record format is \"CD\" or \"DVD\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( major_record_format, orchestra_id )\n# conductor ( conductor_id )\n# performance ( orchestra_id )\n# orchestra.conductor_id = conductor.conductor_id\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### Count the number of orchestras that have CD or DVD as their record format.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance ( performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share )\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### Show the years in which orchestras that have given more than one performance are founded.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year_of_founded from orchestra join performance on orchestra.orchestra_id = performance.orchestra_id group by performance.orchestra_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# performance ( orchestra_id, date, performance_id, type, official_ratings_(millions), weekly_rank, share )\n# orchestra ( orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format )\n# performance.orchestra_id = orchestra.orchestra_id\n#\n### What are years of founding for orchestras that have had more than a single performance?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "year_of_founded from orchestra join performance on orchestra.orchestra_id = performance.orchestra_id group by performance.orchestra_id having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### How many high schoolers are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n#\n### Count the number of high schoolers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, grade )\n#\n### Show the names and grades of each high schooler.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , grade from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, grade, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names and grades for each high schooler?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , grade from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n#\n### Show all the grades of the high schoolers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What is the grade of each high schooler?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What grade is Kyle in?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler where name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Return the grade for the high schooler named Kyle.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler where name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, name, id )\n#\n### Show the names of all high schoolers in grade 10.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from highschooler where grade = 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of all high schoolers in grade 10?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from highschooler where grade = 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the ID of the high schooler named Kyle.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from highschooler where name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What is Kyle's id?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from highschooler where name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n#\n### How many high schoolers are there in grade 9 or 10?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from highschooler where grade = 9 or grade = 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n#\n### Count the number of high schoolers in grades 9 or 10.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from highschooler where grade = 9 or grade = 10"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n#\n### Show the number of high schoolers for each grade.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade , count ( * ) from highschooler group by grade"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, name )\n#\n### How many high schoolers are in each grade?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade , count ( * ) from highschooler group by grade"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Which grade has the most high schoolers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler group by grade order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, name, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Return the grade that has the greatest number of high schoolers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler group by grade order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade )\n#\n### Show me all grades that have at least 4 students.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler group by grade having count ( * ) >= 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Which grades have 4 or more high schoolers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "grade from highschooler group by grade having count ( * ) >= 4"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# friend ( friend_id, student_id )\n# highschooler ( id, name, grade )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the student IDs and numbers of friends corresponding to each.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id , count ( * ) from friend group by student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### How many friends does each student have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id , count ( * ) from friend group by student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the names of high school students and their corresponding number of friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name , count ( * ) from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### What are the names of the high schoolers and how many friends does each have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name , count ( * ) from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### What is the name of the high schooler who has the greatest number of friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### Return the name of the high school student with the most friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( friend_id, student_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### Show the names of high schoolers who have at least 3 friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id having count ( * ) >= 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### What are the names of high schoolers who have 3 or more friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id having count ( * ) >= 3"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the names of all of the high schooler Kyle's friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id join highschooler on friend.friend_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( friend_id, student_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### Return the names of friends of the high school student Kyle.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id join highschooler on friend.friend_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### How many friends does the high school student Kyle have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from friend join highschooler on friend.student_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Count the number of friends Kyle has.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from friend join highschooler on friend.student_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show ids of all students who do not have any friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from highschooler except select student_id from friend"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the ids of high school students who do not have friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "id from highschooler except select student_id from friend"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### Show names of all high school students who do not have any friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from highschooler except select highschooler.name from friend join highschooler on friend.student_id = highschooler.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# friend ( friend_id, student_id )\n# likes ( liked_id, student_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of students who have no friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from highschooler except select highschooler.name from friend join highschooler on friend.student_id = highschooler.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the ids of high schoolers who have friends and are also liked by someone else.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id from friend intersect select liked_id from likes"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# highschooler ( id, name, grade )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the ids of students who both have friends and are liked?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id from friend intersect select liked_id from likes"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show name of all students who have some friends and also are liked by someone else.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on likes.student_id = highschooler.id intersect select highschooler.name from likes join highschooler on likes.liked_id = highschooler.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of high schoolers who both have friends and are liked?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on likes.student_id = highschooler.id intersect select highschooler.name from likes join highschooler on likes.liked_id = highschooler.id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( id )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Count the number of likes for each student id.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id , count ( * ) from likes group by student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( id, name, grade )\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### How many likes correspond to each student id?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "student_id , count ( * ) from likes group by student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( name, id, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the names of high schoolers who have likes, and numbers of likes for each.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name , count ( * ) from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# likes ( student_id, liked_id )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of high schoolers who have likes, and how many likes does each have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name , count ( * ) from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( name, id, grade )\n# likes ( student_id, liked_id )\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What is the name of the high schooler who has the greatest number of likes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Give the name of the student with the most likes.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the names of students who have at least 2 likes.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( id, name )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of students who have 2 or more likes?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Show the names of students who have a grade higher than 5 and have at least 2 friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id where highschooler.grade > 5 group by friend.student_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "highschooler.name from friend join highschooler on friend.student_id = highschooler.id where highschooler.grade > 5 group by friend.student_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, name, grade )\n# likes ( student_id, liked_id )\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### How many likes does Kyle have?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from likes join highschooler on likes.student_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# likes ( student_id, liked_id )\n# highschooler ( name, id )\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Return the number of likes that the high schooler named Kyle has.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from likes join highschooler on likes.student_id = highschooler.id where highschooler.name = 'Kyle'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, name, id )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### Find the average grade of all students who have some friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( grade ) from highschooler where id in ( select friend.student_id from friend join highschooler on friend.student_id = highschooler.id )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade )\n# friend ( student_id, friend_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n#\n### What is the average grade of students who have friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( grade ) from highschooler where id in ( select friend.student_id from friend join highschooler on friend.student_id = highschooler.id )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( grade, id )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### Find the minimum grade of students who have no friends.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( grade ) from highschooler where id not in ( select friend.student_id from friend join highschooler on friend.student_id = highschooler.id )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# highschooler ( id, grade, name )\n# friend ( student_id, friend_id )\n# likes ( student_id, liked_id )\n# friend.friend_id = highschooler.id\n# friend.student_id = highschooler.id\n# likes.student_id = highschooler.id\n# likes.liked_id = highschooler.id\n#\n### What is the lowest grade of students who do not have any friends?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "min ( grade ) from highschooler where id not in ( select friend.student_id from friend join highschooler on friend.student_id = highschooler.id )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number )\n# professionals ( professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number )\n# dogs ( dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed )\n# breeds ( breed_code , breed_name )\n# sizes ( size_code , size_description )\n# treatment_types ( treatment_type_code , treatment_type_description )\n# charges ( charge_id , charge_type , charge_amount )\n# treatments ( treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which states have both owners and professionals living there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "state from owners intersect select state from professionals"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( state, owner_id, first_name, last_name, street, city, zip_code, email_address, home_phone, cell_number )\n# professionals ( state, professional_id, role_code, first_name, last_name, street, city, zip_code, email_address, home_phone, cell_number )\n#\n### Find the states where both owners and professionals live.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "state from owners intersect select state from professionals"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, age, date_of_birth, abandoned_yn, owner_id, breed_code, size_code, name, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments ( treatment_id, dog_id, date_of_treatment, cost_of_treatment, professional_id, treatment_type_code )\n# treatments.dog_id = dogs.dog_id\n#\n### What is the average age of the dogs who have gone through any treatments?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from dogs where dog_id in ( select dog_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, owner_id, age, breed_code, name, date_of_birth, date_arrived, date_adopted, date_departed, abandoned_yn, gender, weight )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# professionals ( professional_id, role_code, first_name, last_name )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# owners ( owner_id, first_name, last_name )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Find the average age of the dogs who went through treatments.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from dogs where dog_id in ( select dog_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, last_name, cell_number, state )\n# treatments ( professional_id, treatment_id, date_of_treatment, dog_id )\n# dogs ( owner_id, dog_id, breed_code )\n# owners ( owner_id, last_name, cell_number, state )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n#\n### Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professional_id , last_name , cell_number from professionals where state = 'Indiana' union select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( state, last_name, cell_number )\n# treatments ( professional_id )\n# treatments.professional_id = professionals.professional_id\n#\n### Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professional_id , last_name , cell_number from professionals where state = 'Indiana' union select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) > 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( name, dog_id, owner_id, breed_code, size_code, abandoned_yn, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments ( cost_of_treatment, dog_id, treatment_id, professional_id, treatment_type_code, date_of_treatment )\n# owners ( owner_id, first_name, last_name, email_address )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# professionals ( professional_id, first_name, last_name )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum ( cost_of_treatment ) > 1000 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( name, owner_id )\n# owners ( owner_id )\n# treatments ( dog_id, cost_of_treatment )\n# charges ( charge_amount )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n#\n### What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum ( cost_of_treatment ) > 1000 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( first_name, professional_id, role_code )\n# owners ( first_name, owner_id, last_name )\n# dogs ( owner_id )\n# breeds ( breed_name, breed_code )\n# charges ( charge_type, charge_amount )\n# sizes ( size_description, size_code )\n# treatment_types ( treatment_type_description, treatment_type_code )\n# treatments ( professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which first names are used for professionals or owners but are not used as dog names?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name from professionals union select first_name from owners except select name from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( first_name )\n# owners ( first_name )\n# dogs ( name )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### Find the first names that are used for professionals or owners but are not used as dog names.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name from professionals union select first_name from owners except select name from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, email_address )\n# treatments ( professional_id, treatment_id )\n# dogs ( dog_id )\n# owners ( owner_id )\n# breeds ( breed_code )\n# sizes ( size_code )\n# charges ( charge_id )\n# treatment_types ( treatment_type_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which professional did not operate any treatment on dogs? List the professional's id, role and email.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professional_id , role_code , email_address from professionals except select professionals.professional_id , professionals.role_code , professionals.email_address from professionals join treatments on professionals.professional_id = treatments.professional_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, email_address, first_name, last_name, street, city, state, zip_code, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.professional_id = professionals.professional_id\n#\n### Give me the id, role and email of the professionals who did not perform any treatment on dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professional_id , role_code , email_address from professionals except select professionals.professional_id , professionals.role_code , professionals.email_address from professionals join treatments on professionals.professional_id = treatments.professional_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name )\n# dogs ( owner_id, dog_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### Which owner owns the most dogs? List the owner id, first name and last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "dogs.owner_id , owners.first_name , owners.last_name from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name )\n# dogs ( owner_id, name )\n# treatments ( dog_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n#\n### Return the owner id, first name and last name of the owner who has the most dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "dogs.owner_id , owners.first_name , owners.last_name from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name )\n# treatments ( professional_id )\n# treatments.professional_id = professionals.professional_id\n#\n### Which professionals have done at least two treatments? List the professional's id, role, and first name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professionals.professional_id , professionals.role_code , professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# treatments ( professional_id, treatment_id, treatment_type_code, date_of_treatment, dog_id, cost_of_treatment )\n# treatments.professional_id = professionals.professional_id\n#\n### What are the id, role, and first name of the professionals who have performed two or more treatments?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professionals.professional_id , professionals.role_code , professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( breed_code, name )\n# breeds ( breed_code, breed_name )\n# treatments ( dog_id, treatment_type_code )\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n#\n### What is the name of the breed with the most dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( breed_code, owner_id )\n# breeds ( breed_code )\n# owners ( owner_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.breed_code = breeds.breed_code\n#\n### Which breed do the most dogs have? Give me the breed name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_name order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, last_name )\n# treatments ( dog_id, cost_of_treatment )\n# dogs ( dog_id, owner_id )\n# professionals ( professional_id )\n# treatment_types ( treatment_type_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.owner_id , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( cost_of_treatment, treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment )\n# dogs ( owner_id, dog_id, name, breed_code, size_code )\n# owners ( owner_id, last_name, first_name )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n#\n### Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.owner_id , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatment_types ( treatment_type_code, treatment_type_description )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### What is the description of the treatment type that costs the least money in total?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatment_types.treatment_type_code order by sum ( cost_of_treatment ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatment_types ( treatment_type_code )\n# treatments ( treatment_type_code, cost_of_treatment )\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Give me the description of the treatment type whose total cost is the lowest.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatment_types.treatment_type_code order by sum ( cost_of_treatment ) asc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, zip_code )\n# dogs ( owner_id, dog_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.owner_id , owners.zip_code from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( dog_id, cost_of_treatment )\n# dogs ( dog_id, owner_id )\n# owners ( owner_id, zip_code )\n# professionals ( professional_id )\n# treatment_types ( treatment_type_code )\n# breeds ( breed_code )\n# sizes ( size_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.owner_id , owners.zip_code from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, cell_number, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone )\n# treatments ( professional_id, treatment_type_code, treatment_id, dog_id, date_of_treatment, cost_of_treatment )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which professionals have done at least two types of treatments? List the professional id and cell phone.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professionals.professional_id , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Find the id and cell phone of the professionals who operate two or more types of treatments.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "professionals.professional_id , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( first_name, last_name )\n# treatments ( professional_id, cost_of_treatment )\n# treatments.professional_id = professionals.professional_id\n#\n### What are the first name and last name of the professionals who have done treatment with cost below average?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct professionals.first_name , professionals.last_name from professionals join treatments where cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.professional_id = professionals.professional_id\n#\n### Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct professionals.first_name , professionals.last_name from professionals join treatments where cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( date_of_treatment, professional_id )\n# professionals ( professional_id, first_name )\n# dogs ( dog_id )\n# treatment_types ( treatment_type_code )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### List the date of each treatment, together with the first name of the professional who operated it.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatments.date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( date_of_treatment, professional_id )\n# professionals ( professional_id, first_name )\n# dogs ( dog_id )\n# treatment_types ( treatment_type_code )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### What are the date and the operating professional's first name of each treatment?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatments.date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( cost_of_treatment )\n# treatment_types ( treatment_type_description )\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### List the cost of each treatment and the corresponding treatment type description.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( cost_of_treatment, treatment_type_code )\n# treatment_types ( treatment_type_description )\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### What are the cost and treatment type description of each treatment?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number )\n# dogs ( dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed )\n# sizes ( size_code , size_description )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n#\n### List each owner's first name, last name, and the size of his for her dog.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , owners.last_name , dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name )\n# dogs ( owner_id, size_code )\n# sizes ( size_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n#\n### What are each owner's first name, last name, and the size of their dog?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , owners.last_name , dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name, email_address, street, city, state, zip_code, home_phone, cell_number )\n# dogs ( dog_id, owner_id, name, breed_code, size_code, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### List pairs of the owner's first name and the dogs's name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name, email_address, home_phone, cell_number )\n# dogs ( dog_id, owner_id, name, breed_code, size_code )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n#\n### What are each owner's first name and their dogs's name?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# breeds ( breed_code, breed_name )\n# dogs ( breed_code, name, dog_id, date_of_birth )\n# treatments ( dog_id, date_of_treatment )\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n#\n### List the names of the dogs of the rarest breed and the treatment dates of them.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "dogs.name , treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id where dogs.breed_code = ( select breed_code from dogs group by breed_code order by count ( * ) asc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( breed_code, name, date_of_birth, date_arrived, date_adopted, date_departed )\n# breeds ( breed_code, breed_name )\n# treatments ( dog_id, date_of_treatment )\n# treatment_types ( treatment_type_code )\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which dogs are of the rarest breed? Show their names and treatment dates.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "dogs.name , treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id where dogs.breed_code = ( select breed_code from dogs group by breed_code order by count ( * ) asc limit 1 )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( first_name, owner_id )\n# dogs ( owner_id, name )\n# breeds ( breed_code )\n# sizes ( size_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n#\n### Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id where owners.state = 'Virginia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( first_name, owner_id )\n# dogs ( owner_id, name, breed_code, size_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### Find the first names of owners living in Virginia and the names of dogs they own.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id where owners.state = 'Virginia'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, date_arrived, date_departed, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_adopted )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.dog_id = dogs.dog_id\n#\n### What are the arriving date and the departing date of the dogs who have gone through a treatment?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct dogs.date_arrived , dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( date_arrived, date_departed, dog_id, owner_id, abandoned_yn )\n# treatments ( date_of_treatment, dog_id, professional_id, treatment_id, treatment_type_code )\n# professionals ( professional_id, first_name, last_name, role_code, email_address )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# owners ( owner_id, first_name, last_name, email_address )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Find the arriving date and the departing date of the dogs that received a treatment.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct dogs.date_arrived , dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, owner_id, dog_id, abandoned_yn, breed_code, size_code, name, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# owners ( owner_id, last_name, first_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### List the last name of the owner owning the youngest dog.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id where dogs.age = ( select max ( age ) from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( owner_id, date_of_birth, abandoned_yn, breed_code, size_code, name, age, gender, weight, date_arrived, date_adopted, date_departed )\n# owners ( owner_id, last_name, first_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n#\n### Who owns the youngest dog? Give me his or her last name.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id where dogs.age = ( select max ( age ) from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n#\n### List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "email_address from professionals where state = 'Hawaii' or state = 'Wisconsin'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( email_address, state )\n# owners ( email_address, state )\n# dogs ( owner_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "email_address from professionals where state = 'Hawaii' or state = 'Wisconsin'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( date_arrived, date_departed, owner_id )\n# owners ( owner_id )\n# treatments ( dog_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n#\n### What are the arriving date and the departing date of all the dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "date_arrived , date_departed from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( date_arrived, date_departed, dog_id )\n# treatments ( date_of_treatment, dog_id )\n# treatments.dog_id = dogs.dog_id\n#\n### List the arrival date and the departure date for all the dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "date_arrived , date_departed from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.dog_id = dogs.dog_id\n#\n### How many dogs went through any treatments?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct dog_id ) from treatments"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, name, date_of_birth, abandoned_yn, breed_code, size_code, owner_id, age, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatments.dog_id = dogs.dog_id\n#\n### Count the number of dogs that went through a treatment.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct dog_id ) from treatments"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( professional_id, treatment_id, dog_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# dogs ( dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n#\n### How many professionals have performed any treatment to dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct professional_id ) from treatments"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id )\n# treatments ( professional_id, dog_id )\n# dogs ( dog_id )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n#\n### Find the number of professionals who have ever treated dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( distinct professional_id ) from treatments"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( city, role_code, street, state, first_name, zip_code )\n# owners ( city, street, state, first_name, last_name, email_address )\n# dogs ( owner_id, breed_code, name )\n# breeds ( breed_code )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.breed_code = breeds.breed_code\n#\n### Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "role_code , street , city , state from professionals where city like '%West%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( role_code, street, city, state, professional_id )\n# owners ( street, city, state )\n#\n### Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "role_code , street , city , state from professionals where city like '%West%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( state, first_name, last_name, email_address )\n# dogs ( owner_id, breed_code, size_code, name )\n# professionals ( state, first_name, last_name, email_address )\n# treatments ( dog_id, professional_id )\n# breeds ( breed_code, breed_name )\n# charges ( charge_id, charge_type, charge_amount )\n# sizes ( size_code, size_description )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name , email_address from owners where state like '%North%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( first_name, last_name, email_address, state )\n# dogs ( owner_id, abandoned_yn, breed_code, size_code )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n#\n### Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "first_name , last_name , email_address from owners where state like '%North%'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, dog_id, breed_code, owner_id, abandoned_yn, size_code, name, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n#\n### How many dogs have an age below the average?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from dogs where age < ( select avg ( age ) from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, dog_id, owner_id )\n# owners ( owner_id )\n# treatments ( dog_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# treatments.dog_id = dogs.dog_id\n#\n### Count the number of dogs of an age below the average.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from dogs where age < ( select avg ( age ) from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( cost_of_treatment )\n# dogs ( dog_id )\n# professionals ( professional_id )\n# treatment_types ( treatment_type_code )\n# breeds ( breed_code )\n# sizes ( size_code )\n# owners ( owner_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### How much does the most recent treatment cost?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cost_of_treatment from treatments order by date_of_treatment desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# treatments ( date_of_treatment, cost_of_treatment )\n# dogs ( dog_id )\n# professionals ( professional_id )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n#\n### Show me the cost of the most recently performed treatment.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "cost_of_treatment from treatments order by date_of_treatment desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( dog_id, abandoned_yn, date_adopted, owner_id, size_code, breed_code )\n# treatments ( treatment_id, dog_id, treatment_type_code, professional_id )\n# breeds ( breed_code )\n# sizes ( size_code )\n# treatment_types ( treatment_type_code )\n# owners ( owner_id )\n# professionals ( professional_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### How many dogs have not gone through any treatment?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from dogs where dog_id not in ( select dog_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( owner_id )\n# treatments ( dog_id )\n# treatments.dog_id = dogs.dog_id\n#\n### Tell me the number of dogs that have not received any treatment .\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from dogs where dog_id not in ( select dog_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# dogs ( dog_id, owner_id, breed_code, size_code, abandoned_yn, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# breeds ( breed_code, breed_name )\n# charges ( charge_id, charge_type, charge_amount )\n# sizes ( size_code, size_description )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### How many owners temporarily do not have any dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from owners where owner_id not in ( select owner_id from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# owners ( owner_id, first_name, last_name, email_address, street, city, state, zip_code, home_phone, cell_number )\n# dogs ( owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### Find the number of owners who do not own any dogs at this moment.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from owners where owner_id not in ( select owner_id from dogs )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id )\n# treatments ( dog_id, professional_id )\n# dogs ( dog_id )\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n#\n### How many professionals did not operate any treatment on dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from professionals where professional_id not in ( select professional_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# dogs ( owner_id, dog_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# treatments ( professional_id, dog_id, treatment_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# owners ( owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# charges ( charge_id, charge_type, charge_amount )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Find the number of professionals who have not treated any dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from professionals where professional_id not in ( select professional_id from treatments )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( abandoned_yn, name, age, weight )\n#\n### List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , age , weight from dogs where abandoned_yn = 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( abandoned_yn, name, age, weight, owner_id, breed_code, size_code, date_of_birth, gender, date_arrived, date_adopted, date_departed )\n# breeds ( breed_code, breed_name )\n# owners ( owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# sizes ( size_code, size_description )\n# charges ( charge_id, charge_type, charge_amount )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name , age , weight from dogs where abandoned_yn = 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, date_of_birth, dog_id )\n# owners ( owner_id )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n#\n### What is the average age of all the dogs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age )\n# owners ( owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number )\n# sizes ( size_code, size_description )\n# breeds ( breed_code, breed_name )\n# charges ( charge_id, charge_type, charge_amount )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# professionals ( professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment )\n# dogs.owner_id = owners.owner_id\n# dogs.owner_id = owners.owner_id\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### Compute the average age of all the dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "avg ( age ) from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, date_of_birth )\n# breeds ( breed_code )\n# dogs.breed_code = breeds.breed_code\n#\n### What is the age of the oldest dog?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( age ) from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( age, date_of_birth, date_departed )\n#\n### Tell me the age of the oldest dog.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( age ) from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# charges ( charge_type, charge_amount )\n#\n### How much does each charge type costs? List both charge type and amount.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "charge_type , charge_amount from charges"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# charges ( charge_type, charge_amount )\n#\n### List each charge type and its amount.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "charge_type , charge_amount from charges"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# charges ( charge_type, charge_amount )\n#\n### How much does the most expensive charge type costs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( charge_amount ) from charges"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# charges ( charge_amount, charge_id )\n#\n### What is the charge amount of the most expensive charge type?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "max ( charge_amount ) from charges"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( email_address, cell_number, home_phone, professional_id )\n# owners ( email_address, cell_number, home_phone, owner_id )\n#\n### List the email, cell phone and home phone of all the professionals.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "email_address , cell_number , home_phone from professionals"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( email_address, cell_number, home_phone, role_code )\n# owners ( email_address, cell_number, home_phone, first_name )\n# treatments ( professional_id, dog_id, treatment_type_code )\n# treatments.professional_id = professionals.professional_id\n#\n### What are the email, cell phone and home phone of each professional?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "email_address , cell_number , home_phone from professionals"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# dogs ( breed_code, size_code )\n# treatments ( dog_id )\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n# treatments.dog_id = dogs.dog_id\n#\n### What are all the possible breed type and size type combinations?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct breed_code , size_code from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# dogs ( breed_code, size_code, dog_id, owner_id, abandoned_yn, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed )\n# breeds ( breed_code, breed_name )\n# sizes ( size_code, size_description )\n# dogs.size_code = sizes.size_code\n# dogs.breed_code = breeds.breed_code\n#\n### Find the distinct breed type and size type combinations for dogs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct breed_code , size_code from dogs"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( professional_id, first_name, role_code )\n# treatments ( treatment_id, dog_id, professional_id, treatment_type_code )\n# treatment_types ( treatment_type_code, treatment_type_description )\n# treatments.professional_id = professionals.professional_id\n# treatments.treatment_type_code = treatment_types.treatment_type_code\n#\n### List the first name of all the professionals along with the description of the treatment they have done.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct professionals.first_name , treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# professionals ( first_name )\n# treatments ( professional_id )\n# treatments.professional_id = professionals.professional_id\n#\n### What are each professional's first name and description of the treatment they have performed?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct professionals.first_name , treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### How many singers are there?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### What is the count of singers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( net_worth_millions, name, singer_id, birth_year, citizenship )\n# song ( sales, title, singer_id, highest_position )\n# song.singer_id = singer.singer_id\n#\n### List the name of singers in ascending order of net worth.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer order by net_worth_millions asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, net_worth_millions, singer_id )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### What are the names of singers ordered by ascending net worth?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer order by net_worth_millions asc"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( birth_year, citizenship, singer_id, name, net_worth_millions )\n#\n### What are the birth year and citizenship of singers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "birth_year , citizenship from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( birth_year, citizenship )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### What are the birth years and citizenships of the singers?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "birth_year , citizenship from singer"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, name, singer_id, birth_year, net_worth_millions )\n# song ( singer_id, title, song_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### List the name of singers whose citizenship is not \"France\".\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where citizenship != 'France'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, name, birth_year, net_worth_millions, singer_id )\n# song ( singer_id, title, song_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### What are the names of the singers who are not French citizens?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where citizenship != 'France'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( birth_year, singer_id )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### Show the name of singers whose birth year is either 1948 or 1949?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where birth_year = 1948 or birth_year = 1949"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( birth_year, name, singer_id, net_worth_millions, citizenship )\n#\n### What are the names of the singers whose birth years are either 1948 or 1949?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where birth_year = 1948 or birth_year = 1949"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( net_worth_millions, singer_id )\n# song ( singer_id )\n# song.singer_id = singer.singer_id\n#\n### What is the name of the singer with the largest net worth?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer order by net_worth_millions desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( net_worth_millions, singer_id, name, birth_year, citizenship )\n# song ( singer_id, sales, title, song_id, highest_position )\n# song.singer_id = singer.singer_id\n#\n### What is the name of the singer who is worth the most?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer order by net_worth_millions desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, singer_id, name, birth_year, net_worth_millions )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### Show different citizenship of singers and the number of singers of each citizenship.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship , count ( * ) from singer group by citizenship"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, singer_id, name, birth_year, net_worth_millions )\n# song ( singer_id, song_id, title, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### For each citizenship, how many singers are from that country?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship , count ( * ) from singer group by citizenship"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, singer_id, name, birth_year, net_worth_millions )\n# song ( singer_id, title, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### Please show the most common citizenship of singers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship from singer group by citizenship order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, singer_id, name, birth_year, net_worth_millions )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### What is the most common singer citizenship ?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship from singer group by citizenship order by count ( * ) desc limit 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, net_worth_millions, singer_id, name, birth_year )\n# song ( singer_id, sales, highest_position, song_id, title )\n# song.singer_id = singer.singer_id\n#\n### Show different citizenships and the maximum net worth of singers of each citizenship.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship , max ( net_worth_millions ) from singer group by citizenship"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, net_worth_millions, singer_id, name, birth_year )\n# song ( singer_id, sales, highest_position, song_id, title )\n# song.singer_id = singer.singer_id\n#\n### For each citizenship, what is the maximum net worth?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship , max ( net_worth_millions ) from singer group by citizenship"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# song ( title, singer_id )\n# singer ( name, singer_id )\n# song.singer_id = singer.singer_id\n#\n### Show titles of songs and names of singers.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song.title , singer.name from singer join song on singer.singer_id = song.singer_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, singer_id )\n# song ( title, singer_id )\n# song.singer_id = singer.singer_id\n#\n### What are the song titles and singer names?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "song.title , singer.name from singer join song on singer.singer_id = song.singer_id"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# song ( singer_id, sales, song_id, title )\n# singer ( singer_id, name, net_worth_millions, birth_year, citizenship )\n# song.singer_id = singer.singer_id\n#\n### Show distinct names of singers that have songs with sales more than 300000.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# song ( sales, singer_id )\n# singer ( name, singer_id )\n# song.singer_id = singer.singer_id\n#\n### what are the different names of the singers that have sales more than 300000?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### Show the names of singers that have more than one song.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name from singer join song on singer.singer_id = song.singer_id group by singer.name having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### What are the names of the singers that have more than one songs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name from singer join song on singer.singer_id = song.singer_id group by singer.name having count ( * ) > 1"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### Show the names of singers and the total sales of their songs.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name , sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, singer_id, birth_year, net_worth_millions, citizenship )\n# song ( sales, title, singer_id, song_id, highest_position )\n# song.singer_id = singer.singer_id\n#\n### For each singer name, what is the total sales for their songs?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "singer.name , sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.name"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( singer_id, name, birth_year, net_worth_millions, citizenship )\n# song ( song_id, title, singer_id, sales, highest_position )\n# song.singer_id = singer.singer_id\n#\n### List the name of singers that do not have any song.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where singer_id not in ( select singer_id from song )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( name, singer_id, birth_year, citizenship, net_worth_millions )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### What is the sname of every sing that does not have any song?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "name from singer where singer_id not in ( select singer_id from song )"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( citizenship, name, birth_year, net_worth_millions, singer_id )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### Show the citizenship shared by singers with birth year before 1945 and after 1955.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# singer ( birth_year, citizenship, singer_id, name, net_worth_millions )\n# song ( singer_id, title, sales, highest_position, song_id )\n# song.singer_id = singer.singer_id\n#\n### What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# other_available_features ( feature_id, feature_type_code, feature_name, feature_description )\n# ref_feature_types ( feature_type_code, feature_type_name )\n# other_available_features.feature_type_code = ref_feature_types.feature_type_code\n#\n### How many available features are there in total?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "count ( * ) from other_available_features"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# other_available_features ( feature_type_code, feature_name, feature_description )\n# ref_feature_types ( feature_type_code, feature_type_name )\n# other_available_features.feature_type_code = ref_feature_types.feature_type_code\n#\n### What is the feature type name of feature AirCon?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "ref_feature_types.feature_type_name from other_available_features join ref_feature_types on other_available_features.feature_type_code = ref_feature_types.feature_type_code where other_available_features.feature_name = 'AirCon'"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# properties ( property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details )\n# ref_property_types ( property_type_code, property_type_description )\n# properties.property_type_code = ref_property_types.property_type_code\n#\n### Show the property type descriptions of properties belonging to that code.\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "ref_property_types.property_type_description from properties join ref_property_types on properties.property_type_code = ref_property_types.property_type_code group by properties.property_type_code"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "You are an excellent SQL writer."
      },
      {
        "role": "user",
        "content": "### Complete sqlite SQL query only and with no explanation, and do not select extra columns that are not explicitly requested in the query.\n### Sqlite SQL tables, with their properties:\n#\n# properties ( property_name, property_type_code, room_count )\n# ref_property_types ( property_type_code )\n# other_available_features ( feature_name )\n# ref_feature_types ( feature_type_code )\n# other_property_features ( property_id, feature_id, property_feature_description )\n# other_available_features.feature_type_code = ref_feature_types.feature_type_code\n# properties.property_type_code = ref_property_types.property_type_code\n# other_property_features.property_id = properties.property_id\n# other_property_features.feature_id = other_available_features.feature_id\n#\n### What are the names of properties that are either houses or apartments with more than 1 room?\nSELECT \n"
      },
      {
        "role": "assistant",
        "content": "property_name from properties where property_type_code = 'House' union select property_name from properties where property_type_code = 'Apartment' and room_count > 1"
      }
    ]
  }
]