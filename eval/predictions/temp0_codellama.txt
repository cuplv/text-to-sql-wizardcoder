SELECT COUNT (*) FROM singer
SELECT COUNT (*) FROM singer
SELECT name,        country,        age FROM singer ORDER BY age DESC
SELECT name,        country,        age FROM singer ORDER BY age DESC
SELECT AVG (age) , MIN (age) , MAX (age) FROM singer WHERE country = 'France'
SELECT AVG (age) , MIN (age) , MAX (age) FROM singer WHERE country = 'France'
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MAX (age)      FROM singer      WHERE is_male = 1 )
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MAX (age)      FROM singer      WHERE is_male = 1 )
SELECT DISTINCT singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > 20
SELECT DISTINCT singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > 20   AND concert.year >= 1980   AND concert.year <= 2000
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT MAX (capacity) , AVG (capacity) FROM stadium
SELECT AVG (capacity) , MAX (capacity) FROM stadium
SELECT name,        capacity FROM stadium ORDER BY average ASC LIMIT 1
SELECT name,        capacity FROM stadium ORDER BY average DESC LIMIT 1
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name
SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT country FROM singer WHERE age > 40 INTERSECT   SELECT country   FROM singer WHERE age < 30
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id ORDER BY COUNT (*) DESC
SELECT concert.name,        concert.theme,        COUNT (_) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.singer_id
SELECT singer.name,        COUNT (_) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.singer_id
SELECT singer.name FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014
SELECT singer.name FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014
SELECT name,        country FROM singer WHERE song_name like '%Hey%'
SELECT singer.name,        singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.theme like '%Hey%'   OR concert.theme like '%hey%'
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE stadium.highest =     (SELECT MAX (highest)      FROM stadium)
concert.stadium_id = stadium.stadium_id
SELECT COUNT (*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10
SELECT COUNT (*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10
SELECT weight FROM pets WHERE pettype = 'Dog' ORDER BY pet_age ASC LIMIT 1
SELECT weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age =     (SELECT MIN (age)      FROM student) ORDER BY student.age ASC LIMIT 1
SELECT pettype,        MAX (weight) FROM pets GROUP BY pettype
SELECT pettype,        MAX (weight) FROM pets GROUP BY pettype
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20   AND pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20   AND pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'Dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'Dog'
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   OR pets.pettype = 'Dog'
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   OR pets.pettype = 'Dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog'
SELECT major,        age FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )
SELECT major,        age FROM student WHERE major != 'Biology' EXCEPT SELECT major,        age FROM student WHERE petid = 1
SELECT stuid FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT stuid FROM student EXCEPT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog' EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT pettype,        weight FROM pets WHERE pet_age =     (SELECT MIN (pet_age)      FROM pets)
SELECT pettype,        weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid ORDER BY student.age ASC LIMIT 1
SELECT pets.petid,        pets.weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 1
SELECT pets.petid,        pets.weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 1
SELECT pettype,        AVG (pet_age) , MAX (pet_age) FROM pets GROUP BY pettype
SELECT pettype,        AVG (pet_age) , MAX (pet_age) FROM pets GROUP BY pettype
SELECT pettype,        AVG (weight) FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype
SELECT pettype,        AVG (weight) FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype
SELECT fname,        age FROM student WHERE stuid IN     (SELECT stuid      FROM has_pet)
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.has_pet = 1
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'   AND pets.pettype = 'cat'
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'   AND student.fname = 'Alice'
SELECT COUNT (*) , has_pet.stuid FROM has_pet JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid
SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   AND pets.pet_age = 3
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.pettype = 'Cat'
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT COUNT (*) FROM continents
SELECT COUNT (*) FROM continents
SELECT continents.contid,        continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid,          continents.continent
SELECT continents.contid,        continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid,          continents.continent
SELECT COUNT (*) FROM countries
SELECT COUNT (*) FROM countries
SELECT car_makers.fullname,        car_makers.id,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id,          car_makers.fullname
SELECT fullname,        id,        COUNT (_) FROM _ GROUP BY _
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.model = cars_data.model WHERE cars_data.weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year = 1970
SELECT car_makers.fullname,        cars_data.year FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year =     (SELECT MIN (_)      FROM _)
SELECT car_makers.fullname,        cars_data.year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE car_makers.maker = 'Carr' ORDER BY cars_data.year ASC LIMIT 1
SELECT DISTINCT model FROM car_names JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_names.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
SELECT continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent
