SELECT COUNT (*) FROM singer
SELECT COUNT (*) FROM singer
SELECT name,        country,        age FROM singer ORDER BY age ASC
SELECT name,        country,        age FROM singer ORDER BY age DESC
SELECT AVG (age), MIN (age), MAX (age) FROM singer WHERE country = 'France'
SELECT AVG (age), MIN (age), MAX (age) FROM singer WHERE country = 'France'   AND is_male = 'Y'
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MIN (age)      FROM singer)
SELECT song_name,        song_release_year FROM singer ORDER BY age ASC LIMIT 10
SELECT DISTINCT country FROM singer WHERE age > 20
SELECT DISTINCT country FROM singer WHERE age > 20
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT MAX (capacity), AVG (average) FROM stadium
SELECT AVG (capacity), MAX (capacity) FROM stadium
SELECT name,        capacity FROM stadium GROUP BY stadium_id ORDER BY AVG (average) DESC LIMIT 1
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.stadium_id ORDER BY AVG (concert.attendance) DESC LIMIT 1
SELECT COUNT (*) FROM concert WHERE YEAR = '2014'   OR YEAR = '2015'
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY concert.stadium_id
SELECT stadium.name,        COUNT (*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.stadium_id
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT country FROM singer WHERE age > 40 INTERSECT   SELECT country   FROM singer WHERE age < 30
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT name FROM stadium EXCEPT SELECT stadium.name FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE YEAR = 2014
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name,          concert.theme
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT singer.name,        singer.country FROM singer JOIN song ON singer.song_name = song.title WHERE song.title like '%Hey%'
SELECT singer.name,        singer.country FROM singer JOIN song ON singer.song_name = song.song_name WHERE song.title like '%Hey%'
SELECT stadium.name,        stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM concert   JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2015
SELECT stadium.name,        stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM concert   JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2015
SELECT COUNT (*) FROM concert WHERE stadium_id =     (SELECT MAX (stadium_id)      FROM stadium)
SELECT COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id ORDER BY stadium.capacity DESC LIMIT 1
SELECT COUNT (*) FROM pets WHERE weight > 10
COUNT (*) FROM pets WHERE weight > 10
SELECT weight FROM pets WHERE pet_age < 10   AND pettype = 'dog' ORDER BY pet_age ASC LIMIT 1
SELECT MIN (weight) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age <= 18   AND pets.pettype = 'Dog'
SELECT MAX (weight), pettype FROM pets GROUP BY pettype
SELECT MAX (weight), pettype FROM pets GROUP BY pettype
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age IN     (SELECT stuid      FROM student      GROUP BY age      HAVING AVG (age) >= 20)
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20   AND has_pet.stuid IN     (SELECT stuid      FROM student      WHERE age > 20 )
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.sex = 'F'   AND has_pet.petid = pets.petid   AND pets.pettype = 'dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = 'F'   AND pets.pettype = 'dog'
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog'
SELECT major,        age FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )
SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT stuid FROM student EXCEPT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT stuid FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.petid = 'Dog' EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.petid = 'Cat'
SELECT student.fname FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT pettype,        weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT pettype,        weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT petid,        weight FROM pets WHERE pet_age > 1
SELECT petid,        weight FROM pets WHERE pet_age > 1
SELECT AVG (age), MAX (age), pettype FROM pets GROUP BY pettype
SELECT AVG (pets.pet_age), MAX (pets.pet_age), pets.pettype FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pets.pettype
SELECT AVG (weight), pettype FROM pets GROUP BY pettype
SELECT AVG (weight), pettype FROM pets GROUP BY pettype
SELECT fname,        age FROM student WHERE stuid IN     (SELECT stuid      FROM has_pet)
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.petid IN     (SELECT petid      FROM has_pet)
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'   AND has_pet.stuid = student.stuid
SELECT stuid,        COUNT (DISTINCT petid) FROM has_pet GROUP BY stuid
SELECT COUNT (*), stuid FROM has_pet GROUP BY stuid ORDER BY COUNT (*) DESC
SELECT student.fname,        student.sex FROM has_pet JOIN student ON has_pet.stuid = student.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.weight > 60
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = '3'   AND pets.weight < 100
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT COUNT (*) FROM continents
SELECT COUNT (DISTINCT continent) FROM continents
SELECT continents.contid,        continents.continent,        COUNT (*) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
SELECT continents.contid,        continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid
SELECT COUNT (*) FROM countries
###
SELECT car_makers.fullname,        car_makers.id,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id ORDER BY COUNT (*) DESC
SELECT car_makers.fullname,        car_makers.id,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id ORDER BY COUNT (*) DESC
SELECT model FROM cars_data ORDER BY horsepower ASC LIMIT 1
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT model FROM cars_data WHERE weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT model FROM cars_data WHERE weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT car_names.make,        cars_data.year FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.accelerate > 10 ORDER BY cars_data.year ASC LIMIT 3
SELECT maker,        YEAR FROM cars_data ORDER BY YEAR ASC LIMIT 1
SELECT DISTINCT model FROM car_names WHERE YEAR > '1980'
SELECT DISTINCT cars_data.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.year > 1980
SELECT countries.countryname,        COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC
SELECT continents.continent,        COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country ORDER BY COUNT (*) DESC LIMIT 1
SELECT car_makers.fullname,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname
SELECT COUNT (*), car_makers.id,                   car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT accelerate FROM cars_data WHERE id = 'amc hornet sportabout'
cars_data
SELECT COUNT (DISTINCT maker) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France'
SELECT COUNT (DISTINCT car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France'   AND car_makers.maker = 'Toyota'
SELECT COUNT (DISTINCT car_makers.maker) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'USA'   OR countries.countryname = 'Canada'
SELECT COUNT (*) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States'   AND car_names.model!= 'Toyota Corolla'   AND car_names.model!= 'Lexus LS'
SELECT AVG (mpg) FROM cars_data WHERE cylinders = 4
SELECT AVG (mpg) FROM cars_data WHERE cylinders = 4
SELECT MIN (weight) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'F-150'   AND cars_data.cylinders = 8   AND cars_data.year = 1974
SELECT MIN (weight) FROM cars_data WHERE cylinders = 8   AND YEAR = 1974
car_makers
car_makers
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT AVG (weight), YEAR FROM cars_data GROUP BY YEAR
SELECT AVG (weight), YEAR FROM cars_data GROUP BY YEAR
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT (*) >= 3
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT (*) >= 3
SELECT cars_data.horsepower,        car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY car_names.make ORDER BY COUNT (*) DESC LIMIT 1
SELECT horsepower,        maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cylinders = 3 GROUP BY maker ORDER BY MAX (horsepower) DESC LIMIT 1
SELECT model FROM cars_data ORDER BY mpg DESC LIMIT 1
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1
SELECT AVG (horsepower) FROM cars_data WHERE YEAR < 1980
SELECT AVG (horsepower) FROM cars_data WHERE YEAR < 1980
SELECT AVG (cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE model_list.model = 'volvo'
SELECT AVG (edispl) FROM cars_data WHERE cylinders = 8   AND YEAR > 2013
SELECT MAX (accelerate), cylinders FROM cars_data GROUP BY cylinders
SELECT MAX (accelerate) FROM cars_data GROUP BY cylinders
SELECT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY COUNT (*) DESC LIMIT 1
SELECT _,        COUNT (_) FROM _ GROUP BY _ ORDER BY COUNT (_) DESC LIMIT _
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE YEAR = '1980'
SELECT COUNT (*) FROM cars_data WHERE YEAR = 1980
SELECT COUNT (DISTINCT model_list.model) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = 'American Motor Company'
SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.maker = 'American Motor Company'   AND model_list.model!= 'X5'
SELECT car_makers.fullname,        car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT (*) > 3
SELECT maker,        id FROM model_list GROUP BY maker HAVING COUNT (*) > 3
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'General Motors' UNION SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.weight > 3500
SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight > 3500 UNION SELECT DISTINCT model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.maker = 'General Motors'
SELECT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000
SELECT DISTINCT YEAR FROM cars_data WHERE weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE weight > 3000
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT cylinders FROM cars_data WHERE accelerate =     (SELECT MIN (accelerate)      FROM cars_data      WHERE accelerate > 10 )   AND model = 'volvo'
SELECT cylinders FROM cars_data WHERE accelerate = '30'   AND make = 'Volvo' ORDER BY cylinders ASC LIMIT 1
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
SELECT COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryname!= 'USA' GROUP BY countries.countryname HAVING COUNT (*) > 2
SELECT COUNT (*) FROM car_makers GROUP BY country HAVING COUNT (*) > 2
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model FROM cars_data WHERE cylinders = 4 GROUP BY model ORDER BY COUNT (*) DESC LIMIT 1
SELECT car_makers.maker,        car_makers.fullname FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders >     (SELECT MIN (cylinders)      FROM cars_data) EXCEPT SELECT car_makers.maker,        car_makers.fullname FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id GROUP BY car_makers.maker HAVING MAX (cars_data.cylinders) > 3
SELECT id,        maker,        fullname FROM car_makers WHERE horsepower <     (SELECT MIN (horsepower)      FROM cars_data)
SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   OR YEAR < 1980
SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   OR YEAR < 1980
SELECT model FROM model_list WHERE weight < 3500 EXCEPT SELECT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < 3500   AND car_makers.maker!= 'Ford'
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country
SELECT maker FROM model_list GROUP BY maker HAVING COUNT (*) >= 2 UNION SELECT maker FROM car_makers GROUP BY maker HAVING COUNT (*) > 3
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.id HAVING COUNT (*) >= 2 UNION SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.id HAVING COUNT (*) > 3
SELECT countryid,        countryname FROM countries WHERE countryid IN     (SELECT DISTINCT country      FROM car_makers) INTERSECT   SELECT countries.countryid,          countries.countryname   FROM countries   JOIN model_list ON countries.countryid = model_list.maker WHERE model_list.model = 'fiat' UNION SELECT countries.countryid,        countries.countryname FROM countries JOIN model_list ON countries.countryid = model_list.maker WHERE model_list.model = 'fiat' INTERSECT   SELECT countryid,          countryname   FROM countries GROUP BY countryid HAVING COUNT (*) > 3
SELECT countries.countryid,        countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) > 3 UNION SELECT countries.countryid,        countries.countryname FROM countries JOIN model_list ON countries.countryid = model_list.maker WHERE model_list.model = 'Fiat'
SELECT country FROM airlines WHERE airline = 'JetBlue Airways'
SELECT country FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'
SELECT airline,        abbreviation FROM airlines WHERE country = 'USA'
SELECT airline,        abbreviation FROM airlines WHERE country = 'USA'
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT COUNT (*) FROM airlines
SELECT COUNT (*) FROM airlines
###
SELECT COUNT (*) FROM airports
10896543 ###
SELECT COUNT (*) FROM flights
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT COUNT (*) FROM airlines WHERE country = 'USA'
SELECT COUNT (*) FROM airlines WHERE country = 'USA'
SELECT city,        country FROM airports WHERE airportcode = 'ALT'
SELECT city,        country FROM airports WHERE airportname = 'Alton'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'   AND country = 'United Kingdom'
COUNT (*) FROM flights WHERE sourceairport = 'APG'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.country = 'Australia'   AND airports.countryabbrev = 'AU'
###
COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'United States'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'United Kingdom'   AND flights.flightno!= 'NA'
COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley'
3427061961
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'
COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.countryabbrev = 'US'   AND flights.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.country = 'United States'   AND airports.city = 'Austin'   AND flights.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Austin'   AND airlines.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.country = 'United States'   AND flights.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.airline = 'United Airlines'
COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND airports.city = 'Aberdeen'
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY flights.sourceairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.airportcode ORDER BY COUNT (*) ASC LIMIT 1
SELECT flights.sourceairport FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY flights.sourceairport ORDER BY COUNT (*) ASC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY flights.airline ORDER BY COUNT (*) ASC LIMIT 1
SELECT airlines.abbreviation,        airports.country FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid GROUP BY airlines.abbreviation ORDER BY COUNT (*) ASC LIMIT 1
SELECT airline FROM flights WHERE sourceairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airline FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.country = 'United States'
SELECT airline FROM flights WHERE destairport = 'ALA'
SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
SELECT flightno FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.country = 'USA'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG'   AND airports.country = 'United States'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Albuquerque'   AND airports.country = 'USA'   AND airports.airportname = 'Portland International Airport'   AND flights.airline = 'American Airlines'
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.airline = 'AA'
SELECT flightno FROM flights WHERE sourceairport = 'ABR'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE city = 'Aberdeen'   AND airports.country = 'United States'
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'United Kingdom'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE city = 'Aberdeen'   OR city = 'Abilene'
SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT DISTINCT sourceairport      FROM flights      UNION SELECT DISTINCT destairport      FROM flights)
SELECT airportcode FROM airports EXCEPT SELECT sourceairport FROM flights UNION SELECT destairport FROM flights
###
###
SELECT name FROM employee ORDER BY age ASC
SELECT name FROM employee ORDER BY age ASC
SELECT COUNT (*), city FROM employee GROUP BY city
SELECT COUNT (*), city FROM employee GROUP BY city
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT LOCATION,        COUNT (*) FROM shop GROUP BY LOCATION
SELECT LOCATION,        COUNT (*) FROM shop GROUP BY LOCATION
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT MIN (number_products), MAX (number_products) FROM shop
SELECT MIN (number_products), MAX (number_products) FROM shop
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT DISTINCT employee_id      FROM evaluation)
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation)
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM shop EXCEPT SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring)
SELECT shop.name,        COUNT (*) FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id
SELECT COUNT (*), shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name
SELECT SUM (bonus) FROM evaluation
SELECT SUM (bonus) FROM evaluation
SELECT * FROM hiring
SELECT * FROM hiring
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
SELECT COUNT (DISTINCT LOCATION) FROM shop
SELECT COUNT (DISTINCT LOCATION) FROM shop
SELECT COUNT (*) FROM documents
SELECT COUNT (*) FROM documents
SELECT document_id,        document_name,        document_description FROM documents
SELECT document_id,        document_name,        document_description FROM documents
SELECT document_name,        template_id FROM documents WHERE document_description like '%w%'
SELECT documents.document_name,        documents.template_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE paragraphs.paragraph_text like '%w%'
SELECT document_id,        template_id,        document_description FROM documents WHERE document_name = 'Robbin CV'
SELECT document_id,        template_id,        document_description FROM documents WHERE document_name = 'Robbin CV'
SELECT COUNT (DISTINCT template_id) FROM documents
COUNT (DISTINCT templates.template_id)
SELECT COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT templates.template_id,        COUNT (*) FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT COUNT (*), documents.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY documents.template_id
SELECT documents.template_id,        ref_template_types.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT templates.template_id,        templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT templates.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_id HAVING COUNT (*) > 1
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT (*) > 1
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
SELECT COUNT (*) FROM templates
templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT DISTINCT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT DISTINCT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_code = 'CV'
SELECT COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'CV'   AND templates.date_effective_to >= '2013-08-26 09:54:17'   AND templates.date_effective_from <= '2006-04-06 22:12:46'
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT version_number,        template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT version_number,        template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'   AND templates.date_effective_to =     (SELECT MAX (date_effective_to)      FROM templates)
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT templates.template_type_code,        COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
SELECT templates.template_type_code,        COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
SELECT template_type_code FROM documents GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT DISTINCT template_type_code      FROM documents)
SELECT template_type_code FROM ref_template_types EXCEPT SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT template_type_code,        template_type_description FROM ref_template_types ORDER BY template_type_code ASC
SELECT template_type_code,        template_type_description FROM ref_template_types
SELECT ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE templates.template_type_code = 'AD'
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT DISTINCT ref_template_types.template_type_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT DISTINCT documents.document_description FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'Statement'   AND templates.date_effective_to > '2016-09-30 15:46:28'   AND templates.date_effective_from < '2017-09-30 15:46:28'
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT template_id FROM documents WHERE document_description = 'Presentation'
###
###
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT paragraph_text FROM paragraphs WHERE paragraph_text like '%Korea %'
SELECT other_details FROM paragraphs WHERE paragraph_text like '% Korea %'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
SELECT document_id,        document_name,        COUNT (*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY documents.document_id,          documents.document_name
SELECT document_id,        document_name,        COUNT (*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY document_id,          document_name
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
SELECT document_id,        document_name FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY document_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT documents.document_id,        documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 1
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 1 OR COUNT (*) <= 2
SELECT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' INTERSECT   SELECT document_id   FROM paragraphs WHERE paragraph_text = 'Ireland'
SELECT document_id FROM paragraphs WHERE paragraph_text like '%Brazil%'   OR paragraph_text like '%Ireland%'
SELECT COUNT (*) FROM teacher
SELECT COUNT (*) FROM teacher
SELECT name FROM teacher ORDER BY age ASC
SELECT name FROM teacher ORDER BY age ASC
SELECT age,        hometown FROM teacher
SELECT age,        hometown FROM teacher
SELECT name FROM teacher WHERE hometown!= 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown!= 'Little Lever Urban District'
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
SELECT hometown,        COUNT (*) FROM teacher GROUP BY hometown
SELECT hometown,        COUNT (DISTINCT teacher_id) FROM teacher GROUP BY hometown
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course_name = math'
SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = math'
SELECT teacher.name,        COUNT (*) FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name
SELECT teacher.name,        COUNT (*) FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT COUNT (*) FROM visitor WHERE age < 30   AND level_of_membership = regular'
SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership ASC
SELECT AVG (age) FROM visitor WHERE level_of_membership NOT IN     (SELECT DISTINCT level_of_membership      FROM visitor      WHERE level_of_membership > 4 )
SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age ASC
SELECT museum_id,        name FROM museum ORDER BY num_of_staff DESC LIMIT 1
SELECT AVG (num_of_staff) FROM museum WHERE open_year < 2009
SELECT open_year,        num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT name FROM museum WHERE num_of_staff >     (SELECT MIN (num_of_staff)      FROM museum      WHERE open_year > 2010 )
SELECT visitor.id,        visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id HAVING COUNT (*) > 1
SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM (visit.total_spent) DESC LIMIT 1
SELECT museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit)
SELECT visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT AVG (num_of_ticket), MAX (num_of_ticket) FROM visit
SELECT SUM (total_spent) FROM visit JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = '1'
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON museum.museum_id = visit.museum_id WHERE museum.open_year < 2009 INTERSECT   SELECT visitor.name   FROM visitor   JOIN visit ON visitor.id = visit.visitor_id   JOIN museum ON museum.museum_id = visit.museum_id WHERE museum.open_year > 2011
SELECT COUNT (*) FROM visitor WHERE id NOT IN     (SELECT visitor_id      FROM visit      WHERE museum_id IN          (SELECT museum_id           FROM museum           WHERE open_year > 2010 ) )
SELECT COUNT (*) FROM museum WHERE open_year > 2013   OR open_year < 2008
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM matches
matches
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA'
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA'
SELECT AVG (loser_age) FROM matches UNION SELECT AVG (winner_age) FROM matches
SELECT AVG (loser_age), AVG (winner_age) FROM matches GROUP BY loser_name,          winner_name
SELECT AVG (rankings.ranking) FROM rankings JOIN matches ON rankings.tours = matches.tourney_id AND rankings.player_id = matches.winner_id WHERE matches.winning_pos = '1'   OR matches.winning_pos = '2'   OR matches.winning_pos = '3'   OR matches.winning_pos = '4'   OR matches.winning_pos = '5'
SELECT AVG (winner_rank) FROM rankings WHERE player_id NOT IN     (SELECT DISTINCT player_id      FROM matches)
SELECT MAX (matches.loser_rank) FROM matches JOIN rankings ON matches.tourney_id = rankings.tours AND matches.loser_id = rankings.player_id WHERE rankings.ranking > 2500   OR matches.loser_rank_points < 75000
SELECT loser_rank FROM matches WHERE loser_rank!= '?' GROUP BY loser_rank ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT loser_name) FROM matches WHERE score < 400   OR score > 500
SELECT COUNT (DISTINCT loser_name) FROM matches JOIN players ON matches.loser_id = players.player_id
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT (*) > 10
SELECT tourney_name FROM matches WHERE YEAR!= '2006' GROUP BY tourney_name HAVING COUNT (*) > 10
SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2013' INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2016'
SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2013' INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2016'
SELECT COUNT (*) FROM matches WHERE YEAR = '2013'   OR YEAR = '2016'
SELECT COUNT (*) FROM matches WHERE YEAR = 2013 INTERSECT   SELECT COUNT (*)   FROM matches WHERE YEAR = 2016
SELECT players.country_code,        players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON rankings.tourney_id = matches.tourney_id WHERE matches.tourney_name = 'WTA Championship' INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN rankings ON players.player_id = rankings.player_id   JOIN matches ON rankings.tourney_id = matches.tourney_id WHERE matches.tourney_name = 'Australian Open'
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON rankings.tourney_id = matches.tourney_id WHERE rankings.ranking = '1' INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN rankings ON players.player_id = rankings.player_id   JOIN matches ON rankings.tourney_id = matches.tourney_id WHERE rankings.ranking = '2'
SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name,        country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.country_code FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name,        rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name,        players.country_code,        rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM rankings JOIN players ON rankings.player_id = players.player_id WHERE rankings.tours = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'Australian Open'   AND rankings.ranking > 1 GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT matches.loser_name,        players.first_name,        players.last_name,        matches.minutes FROM matches JOIN players ON matches.winner_id = players.player_id ORDER BY matches.minutes DESC LIMIT 1
SELECT players.first_name,        players.last_name,        matches.tourney_name,        matches.tourney_date FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.minutes =     (SELECT MAX (minutes)      FROM matches)
SELECT AVG (ranking), first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
SELECT players.first_name,        AVG (rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id
SELECT players.first_name,        players.last_name,        rankings.ranking_points FROM rankings JOIN players ON rankings.player_id = players.player_id ORDER BY rankings.ranking_points ASC
SELECT players.first_name,        SUM (rankings.ranking_points) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code HAVING COUNT (*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT (*) > 50
SELECT tourney_date,        COUNT (*) FROM rankings GROUP BY tourney_date ORDER BY COUNT (*) DESC LIMIT 10
SELECT ranking_date,        COUNT (*) FROM rankings GROUP BY ranking_date
SELECT COUNT (*), YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC
SELECT COUNT (*), YEAR FROM matches GROUP BY YEAR
SELECT players.first_name,        players.last_name,        rank.ranking FROM   (SELECT *    FROM rankings    ORDER BY ranking ASC    LIMIT 3) AS rank JOIN players ON rank.player_id = players.player_id ORDER BY players.birth_date ASC LIMIT 3
SELECT players.first_name,        players.last_name,        matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3 EXCEPT SELECT players.first_name,        players.last_name,        matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age DESC LIMIT 2 EXCEPT SELECT players.first_name,        players.last_name,        matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age DESC LIMIT 1
SELECT COUNT (DISTINCT players.first_name) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championship' INTERSECT   SELECT COUNT (DISTINCT players.first_name)   FROM players   JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_name = 'WTA Championship'
SELECT COUNT (*) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.hand = 'Left'   AND matches.tourney_name = 'World Tour Auto racing Championship'
SELECT players.first_name,        players.country_code,        players.birth_date FROM   (SELECT *    FROM rankings    JOIN players ON rankings.player_id = players.player_id    ORDER BY rankings.ranking_points DESC) WHERE rankings.player_id =     (SELECT MAX (player_id)      FROM rankings)
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours > 0 ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT winner_hand,        COUNT (*) FROM matches GROUP BY winner_hand
SELECT winner_hand,        COUNT (*) FROM matches GROUP BY winner_hand
SELECT COUNT (*) FROM death WHERE note = 'Captured'
SELECT name,        tonnage FROM ship ORDER BY name DESC
SELECT name, date, RESULT FROM battle
SELECT MAX (death.killed), MIN (death.killed), death.id FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.id
SELECT AVG (injured), id FROM death GROUP BY id
SELECT * FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'
SELECT name,        RESULT FROM battle WHERE bulgarian_commander!= 'Boril'
SELECT DISTINCT battle.id,                 battle.name FROM death JOIN ship ON death.caused_by_ship_id = ship.id JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.ship_type = 'Brig'   AND battle.result = 'loss'
SELECT battle.id,        battle.name FROM death JOIN ship ON death.caused_by_ship_id = ship.id JOIN battle ON ship.lost_in_battle = battle.id GROUP BY battle.id HAVING SUM (death.killed) + SUM (death.injured) > 10
SELECT death.caused_by_ship_id,        ship.name FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.caused_by_ship_id ORDER BY SUM (death.injured) DESC LIMIT 1
SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE bulgarian_commander = 'Kaloyan'   AND latin_commander = 'Baldwin I'
SELECT COUNT (DISTINCT RESULT) FROM battle
SELECT COUNT (*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE tonnage = 225 )
SELECT battle.name,        battle.date FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.name = 'Lettice' EXCEPT SELECT battle.name,        battle.date FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.name = 'HMS Atalanta'
SELECT name,        RESULT,        bulgarian_commander FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE LOCATION = 'English Channel' )
SELECT note FROM death WHERE note like '%East%'
SELECT line_1,        line_2 FROM addresses
SELECT line_1,        line_2 FROM addresses
SELECT COUNT (*) FROM courses
SELECT COUNT (*) FROM courses
SELECT course_description FROM courses WHERE course_name = 'Math'
