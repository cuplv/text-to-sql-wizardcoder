SELECT COUNT (*) FROM singer
SELECT COUNT (*) FROM singer
SELECT name,        country,        age FROM singer ORDER BY age ASC
SELECT name,        country,        age FROM singer ORDER BY age DESC
select avg(age), min(age), max(age) from singer where country = 'France' group by country
SELECT AVG (age), MIN (age), MAX (age) FROM singer WHERE country = 'France'
SELECT song_name,        song_release_year FROM singer ORDER BY age ASC LIMIT 1
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MIN (age)      FROM singer)
SELECT DISTINCT country FROM singer WHERE age > 20
SELECT DISTINCT country FROM singer WHERE age > 20
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT MAX (capacity), AVG (average) FROM stadium
SELECT AVG (capacity), MAX (capacity) FROM stadium
###
###
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT stadium.name,        COUNT (*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.stadium_id
SELECT stadium_id,        COUNT (*) FROM concert GROUP BY stadium_id
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT country FROM singer WHERE age > 40 INTERSECT   SELECT country   FROM singer WHERE age < 30
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name,          concert.theme
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
SELECT singer.name FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT name,        country FROM singer WHERE song_name like '%Hey%'
###
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT COUNT (*) FROM stadium ORDER BY capacity DESC LIMIT 1
SELECT COUNT (*) FROM stadium ORDER BY capacity DESC LIMIT 1
SELECT COUNT (*) FROM pets WHERE weight > 10
SELECT COUNT (*) FROM pets WHERE weight > 10
SELECT weight FROM pets WHERE pet_age =     (SELECT MIN (pet_age)      FROM pets)
SELECT weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT MAX (weight), pettype FROM pets GROUP BY pettype
SELECT MAX (weight), pettype FROM pets GROUP BY pettype
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.age > 20
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.age > 20
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'dog'
###
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT fname FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog'
###
###
SELECT stuid FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )
SELECT stuid FROM student EXCEPT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname,        student.age FROM student JOIN has_pet
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT pettype,        weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT pettype,        weight FROM pets ORDER BY pet_age ASC LIMIT 1
SELECT petid,        weight FROM pets WHERE pet_age > 1
SELECT petid,        weight FROM pets WHERE pet_age > 1
###
SELECT AVG (pet_age), MAX (pet_age), pettype FROM pets GROUP BY pettype
SELECT AVG (weight), pettype FROM pets GROUP BY pettype
SELECT AVG (weight), pettype FROM pets GROUP BY pettype
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
SELECT COUNT (*), stuid FROM has_pet GROUP BY stuid
SELECT stuid,        COUNT (*) FROM has_pet GROUP BY stuid
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.pettype = 'cat'
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.pettype = 'cat'
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT COUNT (*) FROM continents
SELECT COUNT (*) FROM continents
SELECT continents.contid,        continents.continent,        COUNT (*) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.contid
SELECT continents.contid,        continents.continent,        COUNT (*) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.contid
###
SELECT COUNT (*) FROM countries
SELECT car_makers.maker,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.maker
###
###
###
###
###
SELECT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
###
###
###
###
SELECT countries.continent,        COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.continent
SELECT continent,        COUNT (*) FROM countries GROUP BY continent
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
SELECT country FROM car_makers GROUP BY country ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (*), maker FROM model_list GROUP BY maker
SELECT COUNT (*), car_makers.id,                   car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
###
SELECT cars_data.accelerate FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'AMC'   AND model_list.model = 'Hornet Sportabout'
SELECT COUNT (*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France'
SELECT COUNT (*) FROM car_makers WHERE country = 'France'
###
SELECT COUNT (*) FROM countries JOIN model_list ON countries.countryid = model_list.modelid WHERE countries.countryname = 'United States'
SELECT AVG (mpg) FROM cars_data WHERE cylinders = 4
###
SELECT MIN (weight) FROM cars_data WHERE cylinders = 8   AND YEAR = 1974
SELECT MIN (weight) FROM cars_data WHERE YEAR = 1974   AND cylinders = 8
###
###
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT AVG (weight), YEAR FROM cars_data GROUP BY YEAR
SELECT AVG (weight), YEAR FROM cars_data GROUP BY YEAR
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT (*) >= 3
###
SELECT car_names.make,        cars_data.horsepower FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY car_names.make ORDER BY COUNT (*) DESC LIMIT 1
SELECT cars_data.horsepower,        model_list.maker FROM cars_data JOIN model_list ON cars_data.id = model_list.model WHERE cars_data.cylinders = 3
###
###
SELECT AVG (horsepower) FROM cars_data WHERE YEAR < 1980
###
SELECT AVG (cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'volvo'
SELECT AVG (edispl) FROM cars_data WHERE id = 'volvo'
SELECT MAX (accelerate), cylinders FROM cars_data GROUP BY cylinders
SELECT MAX (accelerate) FROM cars_data GROUP BY cylinders
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id GROUP BY model_list.modelid ORDER BY COUNT (*) DESC LIMIT 1
SELECT model FROM model_list GROUP BY model ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE YEAR = 1980
SELECT COUNT (*) FROM cars_data WHERE YEAR = 1980
SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = 'American Motor Company'
SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.maker = 'American Motor Company'
SELECT maker FROM model_list GROUP BY maker HAVING COUNT (*) > 3
SELECT car_makers.maker,        car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT (*) > 3
###
SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.model = cars_data.id WHERE model_list.maker = 'General Motors'   OR cars_data.weight > 3500
SELECT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000
SELECT DISTINCT YEAR FROM cars_data WHERE weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE weight > 3000
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT cylinders FROM cars_data ORDER BY accelerate ASC LIMIT 1
###
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
SELECT COUNT (*) FROM car_makers GROUP BY country HAVING COUNT (*) > 2
SELECT COUNT (*) FROM car_makers GROUP BY country HAVING COUNT (*) > 2
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
###
###
###
###
###
SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   OR YEAR < 1980
###
###
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country
###
SELECT maker FROM model_list GROUP BY maker HAVING COUNT (*) >= 2
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT (*) >= 2 INTERSECT SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.id HAVING COUNT (*) > 3
###
SELECT countries.countryid,        countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) > 3 UNION SELECT countries.countryid,        countries.countryname FROM countries JOIN car_names ON countries.countryid = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id GROUP BY countries.countryid HAVING COUNT (*) > 3
SELECT country FROM airlines WHERE airline = 'JetBlue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT airline FROM airlines WHERE airline = 'Jetblue Airways'
###
###
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT COUNT (*) FROM airlines
SELECT COUNT (*) FROM airlines
SELECT COUNT (*) FROM airports
SELECT COUNT (*) FROM airports
SELECT COUNT (*) FROM flights
SELECT COUNT (*) FROM flights
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
###
SELECT COUNT (*) FROM airlines WHERE country = 'USA'
SELECT COUNT (*) FROM airlines WHERE country = 'USA'
SELECT city,        country FROM airports WHERE airportname = 'Alton'
SELECT city,        country FROM airports WHERE airportname = 'Alton'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
###
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Albuquerque'   AND airports.country = 'USA'   AND flights.airline = 'American Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Ato'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.country = 'USA'   AND flights.airline = 'American Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.airline = 'JetBlue Airways'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND airports.airportcode = 'ASY'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.airline WHERE airports.city = 'Austin'   AND airlines.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.airline = 'United Airlines'   AND flights.sourceairport = 'AHD'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN airlines ON flights.airline = airlines.airline WHERE airports.city = 'Austin'   AND airlines.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.airline WHERE airports.city = 'Aberdeen'   AND airlines.airline = 'United Airlines'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.airline = 'United Airlines'   AND flights.destairport = 'ABR'
###
SELECT city FROM airports GROUP BY city ORDER BY COUNT (*) DESC LIMIT 1
###
###
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.airportcode ORDER BY COUNT (*) ASC LIMIT 1
SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) ASC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airlines.abbreviation,        airlines.country FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline ORDER BY COUNT (*) ASC LIMIT 1
###
SELECT airline FROM flights WHERE sourceairport = 'AHD'
SELECT airline FROM flights WHERE sourceairport = 'AHD'
SELECT airline FROM flights WHERE destairport = 'AHD'
SELECT airline FROM flights WHERE destairport = 'AHD'
SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
###
###
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
###
SELECT flightno FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG'
###
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights WHERE sourceairport = 'ABR'
SELECT flightno FROM flights WHERE destairport = 'Aberdeen'
SELECT flightno FROM flights WHERE destairport = 'ABR'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene'
SELECT airportname FROM airports WHERE airportname NOT IN     (SELECT sourceairport      FROM flights)
SELECT airportcode FROM airports EXCEPT SELECT sourceairport FROM flights
###
SELECT COUNT (*) FROM employee
###
SELECT name FROM employee ORDER BY age ASC
SELECT city,        COUNT (*) FROM employee GROUP BY city
SELECT COUNT (*), city FROM employee GROUP BY city
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT LOCATION,        COUNT (*) FROM shop GROUP BY LOCATION
SELECT COUNT (*), LOCATION FROM shop GROUP BY LOCATION
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT shop.manager_name,        shop.district FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT MIN (number_products), MAX (number_products) FROM shop
SELECT MIN (number_products), MAX (number_products) FROM shop
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation)
###
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring)
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring)
SELECT shop.name,        COUNT (*) FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id
SELECT COUNT (*), shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id
SELECT SUM (bonus) FROM evaluation
SELECT SUM (bonus) FROM evaluation
SELECT * FROM hiring
SELECT * FROM hiring
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
###
SELECT COUNT (DISTINCT LOCATION) FROM shop
SELECT COUNT (*) FROM documents
SELECT COUNT (*) FROM documents
###
SELECT document_id,        document_name,        document_description FROM documents
SELECT document_name,        template_id FROM documents WHERE document_description like '%w%'
SELECT document_name,        template_id FROM documents WHERE document_description like '%w%'
SELECT document_id,        template_id,        document_description FROM documents WHERE document_name = 'Robbin CV'
SELECT document_id,        template_id,        document_description FROM documents WHERE document_name = 'Robbin CV'
SELECT COUNT (DISTINCT template_id) FROM documents
SELECT COUNT (DISTINCT template_id) FROM documents
###
SELECT COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT template_id,        COUNT (*) FROM documents GROUP BY template_id
SELECT template_id,        COUNT (*) FROM documents GROUP BY template_id
SELECT documents.template_id,        documents.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
###
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT (*) > 1
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT (*) > 1
SELECT template_id FROM templates WHERE template_id NOT IN     (SELECT template_id      FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN     (SELECT template_id      FROM documents)
SELECT COUNT (*) FROM templates
SELECT COUNT (*) FROM templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT DISTINCT template_type_code FROM templates
SELECT DISTINCT template_type_code FROM templates
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_code = 'CV'
SELECT COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'CV'
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT MIN (templates.version_number), templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
SELECT version_number,        template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
###
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT templates.template_type_code,        COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
SELECT templates.template_type_code,        COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
SELECT documents.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT template_type_code      FROM documents)
SELECT template_type_code FROM ref_template_types EXCEPT SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT template_type_code,        template_type_description FROM ref_template_types
SELECT template_type_code,        template_type_description FROM ref_template_types
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT DISTINCT ref_template_types.template_type_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT DISTINCT documents.document_description FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Statement'   OR ref_template_types.template_type_description = 'Other'
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_details = 'Presentation'
SELECT COUNT (*) FROM paragraphs
SELECT COUNT (*) FROM paragraphs
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT other_details FROM paragraphs WHERE paragraph_text = 'Korea'
SELECT other_details FROM paragraphs WHERE other_details like '%Korea %'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
###
SELECT documents.document_id,        documents.document_name,        COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
###
SELECT documents.document_id,        documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' INTERSECT   SELECT document_id   FROM paragraphs WHERE paragraph_text = 'Ireland'
###
SELECT COUNT (*) FROM teacher
SELECT COUNT (*) FROM teacher
SELECT name FROM teacher ORDER BY age ASC
SELECT name FROM teacher ORDER BY age ASC
SELECT age,        hometown FROM teacher
SELECT age,        hometown FROM teacher
SELECT name FROM teacher WHERE hometown!= 'Little Lever Urban District'
###
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
SELECT hometown,        COUNT (*) FROM teacher GROUP BY hometown
SELECT hometown,        COUNT (*) FROM teacher GROUP BY hometown
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course ='math'
SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course ='math'
SELECT teacher.name,        COUNT (*) FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id
SELECT teacher.name,        COUNT (*) FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id
SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT COUNT (*) FROM visitor WHERE age < 30
SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership ASC
SELECT AVG (age) FROM visitor WHERE level_of_membership NOT IN     (SELECT level_of_membership      FROM visitor      WHERE level_of_membership > 4 )
SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age ASC
SELECT museum_id,        name FROM museum ORDER BY num_of_staff DESC LIMIT 1
SELECT AVG (num_of_staff) FROM museum WHERE open_year < 2009
SELECT open_year,        num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT name FROM museum WHERE num_of_staff >     (SELECT MIN (num_of_staff)      FROM museum      WHERE open_year > 2010 )
SELECT visitor.id,        visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id HAVING COUNT (*) > 1
SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM (visit.total_spent) DESC LIMIT 1
SELECT museum.museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit)
SELECT visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT AVG (num_of_ticket), MAX (num_of_ticket) FROM visit
SELECT SUM (visit.total_spent) FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visitor.level_of_membership = 1
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year < 2009 INTERSECT   SELECT visitor.name   FROM visitor   JOIN visit ON visitor.id = visit.visitor_id   JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2011
SELECT COUNT (*) FROM visitor WHERE id NOT IN     (SELECT visitor_id      FROM visit      WHERE museum_id IN          (SELECT museum_id           FROM museum           WHERE open_year > 2010 ) )
SELECT COUNT (*) FROM museum WHERE open_year > 2013   OR open_year < 2008
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM matches
SELECT COUNT (*) FROM matches
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA'
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA'
SELECT AVG (winner_age), AVG (loser_age) FROM matches
SELECT AVG (winner_age), AVG (loser_age) FROM matches
SELECT AVG (winner_rank) FROM matches
###
SELECT MAX (loser_rank) FROM matches
SELECT loser_rank FROM matches GROUP BY loser_rank ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT loser_name) FROM matches
SELECT COUNT (DISTINCT loser_name) FROM matches
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT (*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT (*) > 10
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2016
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2016
SELECT COUNT (*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016
SELECT COUNT (*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016
SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open'
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'WTA Championship' INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'Australian Open'
SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name,        country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT matches.winner_name,        matches.winner_rank_points FROM matches JOIN rankings ON matches.winner_id = rankings.player_id GROUP BY matches.winner_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name,        rankings.ranking_points FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT loser_name,        winner_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT players.first_name,        players.last_name,        players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.minutes DESC LIMIT 1
SELECT AVG (ranking), first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id
SELECT players.first_name,        AVG (rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
###
SELECT players.first_name,        SUM (rankings.ranking_points) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code HAVING COUNT (*) > 50
###
###
SELECT ranking_date,        COUNT (*) FROM rankings GROUP BY ranking_date
SELECT YEAR,        COUNT (*) FROM matches GROUP BY YEAR
SELECT YEAR,        COUNT (*) FROM matches GROUP BY YEAR
###
SELECT players.first_name,        players.last_name,        rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_date ASC LIMIT 3
SELECT COUNT (DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championship' INTERSECT   SELECT COUNT (DISTINCT player_id)   FROM players WHERE hand = 'Left'
SELECT COUNT (*) FROM   (SELECT winner_id    FROM matches    WHERE tourney_name = 'WTA Championship'      AND winner_hand = 'L' ) WHERE winner_id!= 0
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1
###
SELECT winner_hand,        COUNT (*) FROM matches GROUP BY winner_hand
SELECT COUNT (*) FROM ship WHERE disposition_of_ship = 'Captured'
SELECT name,        tonnage FROM ship ORDER BY name DESC
SELECT name, date, RESULT FROM battle
SELECT MAX (death.killed), MIN (death.killed), death.caused_by_ship_id FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.caused_by_ship_id
SELECT AVG (injured), id FROM death GROUP BY id
SELECT death.note,        death.injured,        death.killed FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'
SELECT name,        RESULT FROM battle WHERE bulgarian_commander!= 'Boril'
###
SELECT battle.id,        battle.name FROM death JOIN ship ON death.killed = ship.id JOIN battle ON ship.lost_in_battle = battle.id GROUP BY ship.lost_in_battle HAVING SUM (death.killed) > 10
SELECT death.caused_by_ship_id,        ship.name FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.caused_by_ship_id ORDER BY SUM (death.injured) DESC LIMIT 1
SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE bulgarian_commander = 'Kaloyan'   AND latin_commander = 'Baldwin I'
SELECT COUNT (DISTINCT RESULT) FROM battle
SELECT COUNT (*) FROM ship WHERE tonnage = '225'   AND id NOT IN     (SELECT id      FROM ship      WHERE tonnage = '225'        AND lost_in_battle = 'no' )
SELECT name, date FROM battle WHERE RESULT = 'lost'   AND name!= 'Lettice'   AND name!= 'HMS Atalanta'
SELECT name,        RESULT,        bulgarian_commander FROM battle WHERE name = 'English Channel'   AND RESULT = 'Won'
SELECT note FROM death WHERE note like '%East%'
SELECT line_1,        line_2 FROM addresses
SELECT line_1,        line_2 FROM addresses
SELECT COUNT (*) FROM courses
SELECT COUNT (*) FROM courses
SELECT course_description FROM courses WHERE course_name = 'Math'
SELECT course_description FROM courses WHERE course_name = 'MATH'
###
SELECT zip_postcode FROM addresses WHERE line_1 = 'Port Chelsea'   AND city = 'London'   AND country = 'UK'
###
###
SELECT COUNT (*) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id
SELECT COUNT (DISTINCT department_name) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id
SELECT COUNT (DISTINCT degree_summary_name) FROM degree_programs
###
SELECT COUNT (*) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id WHERE departments.department_name = 'Engineering'
SELECT COUNT (*) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id WHERE departments.department_name = 'Engineering'
SELECT section_name,        section_description FROM sections
SELECT section_name,        section_description FROM sections
###
SELECT courses.course_name,        courses.course_id FROM courses JOIN sections ON courses.course_id = sections.course_id GROUP BY courses.course_id HAVING COUNT (*) < 2
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT semesters.semester_name,        semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semesters.semester_id ORDER BY COUNT (*) DESC LIMIT 1
###
SELECT department_description FROM departments WHERE department_name like '%computer%'
SELECT department_description FROM departments WHERE department_name like '%computer%'
