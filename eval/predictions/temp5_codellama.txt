SELECT COUNT (*) FROM singer
SELECT COUNT (*) FROM singer
SELECT name,        country,        age FROM singer ORDER BY age DESC
SELECT name,        country,        age FROM singer ORDER BY age DESC
SELECT AVG (age) , MIN (age) , MAX (age) FROM singer WHERE country = 'France'
SELECT AVG (age) , MIN (age) , MAX (age) FROM singer WHERE country = 'France'
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MAX (age)      FROM singer      WHERE is_male = 1 )
SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MAX (age)      FROM singer      WHERE is_male = 1 )
SELECT DISTINCT singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > 20
SELECT DISTINCT singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > 20   AND concert.year >= 1980   AND concert.year <= 2000
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT country,        COUNT (*) FROM singer GROUP BY country
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT song_name FROM singer WHERE age >     (SELECT AVG (age)      FROM singer)
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT LOCATION,        name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
SELECT MAX (capacity) , AVG (capacity) FROM stadium
SELECT AVG (capacity) , MAX (capacity) FROM stadium
SELECT name,        capacity FROM stadium ORDER BY average ASC LIMIT 1
SELECT name,        capacity FROM stadium ORDER BY average DESC LIMIT 1
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT COUNT (*) FROM concert WHERE YEAR = 2014   OR YEAR = 2015
SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name
SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert)
SELECT country FROM singer WHERE age > 40 INTERSECT   SELECT country   FROM singer WHERE age < 30
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
SELECT concert.concert_name,        concert.theme,        COUNT (*) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id ORDER BY COUNT (*) DESC
SELECT concert.name,        concert.theme,        COUNT (_) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id
SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.singer_id
SELECT singer.name,        COUNT (_) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.singer_id
SELECT singer.name FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014
SELECT singer.name FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014
SELECT name,        country FROM singer WHERE song_name like '%Hey%'
SELECT singer.name,        singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.theme like '%Hey%'   OR concert.theme like '%hey%'
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT stadium.name,        stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 INTERSECT   SELECT stadium.name,          stadium.location   FROM stadium   JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2015
SELECT COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE stadium.highest =     (SELECT MAX (highest)      FROM stadium)
concert.stadium_id = stadium.stadium_id
SELECT COUNT (*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10
SELECT COUNT (*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10
SELECT weight FROM pets WHERE pettype = 'Dog' ORDER BY pet_age ASC LIMIT 1
SELECT weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age =     (SELECT MIN (age)      FROM student) ORDER BY student.age ASC LIMIT 1
SELECT pettype,        MAX (weight) FROM pets GROUP BY pettype
SELECT pettype,        MAX (weight) FROM pets GROUP BY pettype
SELECT COUNT (*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20   AND pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20   AND pets.pettype = 'cat'   OR pets.pettype = 'dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'Dog'
SELECT COUNT (*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F'   AND pets.pettype = 'Dog'
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT COUNT (DISTINCT pettype) FROM pets
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   OR pets.pettype = 'Dog'
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   OR pets.pettype = 'Dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat' INTERSECT   SELECT student.fname   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog'
SELECT major,        age FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )
SELECT major,        age FROM student WHERE major != 'Biology' EXCEPT SELECT major,        age FROM student WHERE petid = 1
SELECT stuid FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT stuid FROM student EXCEPT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Dog' EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT pettype,        weight FROM pets WHERE pet_age =     (SELECT MIN (pet_age)      FROM pets)
SELECT pettype,        weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid ORDER BY student.age ASC LIMIT 1
SELECT pets.petid,        pets.weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 1
SELECT pets.petid,        pets.weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 1
SELECT pettype,        AVG (pet_age) , MAX (pet_age) FROM pets GROUP BY pettype
SELECT pettype,        AVG (pet_age) , MAX (pet_age) FROM pets GROUP BY pettype
SELECT pettype,        AVG (weight) FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype
SELECT pettype,        AVG (weight) FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype
SELECT fname,        age FROM student WHERE stuid IN     (SELECT stuid      FROM has_pet)
SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.has_pet = 1
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'   AND pets.pettype = 'cat'
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'   AND student.fname = 'Alice'
SELECT COUNT (*) , has_pet.stuid FROM has_pet JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid
SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.fname,        student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT (*) > 1
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'Cat'   AND pets.pet_age = 3
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3   AND pets.pettype = 'Cat'
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT AVG (age) FROM student WHERE stuid NOT IN     (SELECT stuid      FROM has_pet)
SELECT COUNT (*) FROM continents
SELECT COUNT (*) FROM continents
SELECT continents.contid,        continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid,          continents.continent
SELECT continents.contid,        continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid,          continents.continent
SELECT COUNT (*) FROM countries
SELECT COUNT (*) FROM countries
SELECT car_makers.fullname,        car_makers.id,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id,          car_makers.fullname
SELECT fullname,        id,        COUNT (_) FROM _ GROUP BY _
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.model = cars_data.model WHERE cars_data.weight <     (SELECT AVG (weight)      FROM cars_data)
SELECT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year = 1970
SELECT car_makers.fullname,        cars_data.year FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year =     (SELECT MIN (_)      FROM _)
SELECT car_makers.fullname,        cars_data.year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE car_makers.maker = 'Carr' ORDER BY cars_data.year ASC LIMIT 1
SELECT DISTINCT model FROM car_names JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_names.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
SELECT continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent
SELECT continents.continent,        COUNT (*) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
SELECT car_makers.fullname,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.fullname
SELECT car_makers.fullname,        COUNT (*) , car_makers.id,                    car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.id,          car_makers.maker
SELECT cars_data.accelerate FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN car_makers ON car_names.model = car_makers.fullname WHERE car_makers.fullname = 'amc hornet sportabout'   AND cars_data.year = 1968
SELECT cars_data.accelerate FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'AMC Hornet Sportabout'   AND cars_data.year = 1968
SELECT COUNT (*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'france'
SELECT COUNT (*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France'
SELECT COUNT (*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'USA'
SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = 'United States'
SELECT AVG (mpg) FROM cars_data WHERE cylinders = 4
SELECT AVG (mpg) FROM cars_data WHERE cylinders = 4
SELECT weight FROM cars_data WHERE YEAR = 1974   AND cylinders = 8 ORDER BY weight ASC LIMIT 1
SELECT MIN (cars_data.weight) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Toyota Motor Corporation'   AND cars_data.year = 1974
SELECT car_makers.maker,        model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker
SELECT car_makers.fullname,        model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT countries.countryname,        countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) >= 1
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT COUNT (*) FROM cars_data WHERE horsepower > 150
SELECT AVG (weight) , YEAR FROM cars_data GROUP BY YEAR
SELECT AVG (weight) , AVG (YEAR) , YEAR FROM cars_data GROUP BY YEAR
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryid HAVING COUNT (*) >= 3
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryid HAVING COUNT (*) >= 3 INTERSECT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT MAX (cars_data.horsepower) , car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE model_list.cylinders = 3
SELECT MAX (cars_data.horsepower) , car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = 'Horsepower'   AND cars_data.cylinders = 3 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1
SELECT AVG (cars_data.horsepower) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE cars_data.year < 1980
SELECT AVG (cars_data.horsepower) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Toyota'   AND cars_data.year < 1980
SELECT AVG (cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Volvo'
SELECT AVG (edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Volvo'
SELECT MAX (accelerate) , cylinders FROM cars_data GROUP BY cylinders
SELECT MAX (accelerate) FROM cars_data GROUP BY cylinders
SELECT car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.fullname ORDER BY COUNT (*) DESC LIMIT 1
SELECT model_list.model FROM model_list JOIN car_names ON model_list.model = car_names.model GROUP BY car_names.model ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE cylinders > 4
SELECT COUNT (*) FROM cars_data WHERE YEAR = 1980
SELECT COUNT (*) FROM cars_data WHERE YEAR = 1980
SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = 'American Motor Company'
SELECT COUNT (*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company'
SELECT fullname,        id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.fullname HAVING COUNT (*) > 3
SELECT car_makers.fullname,        car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT (*) > 3
SELECT DISTINCT model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = 'General Motors'   OR cars_data.weight > 3500
SELECT DISTINCT model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = 'General Motors'   OR cars_data.weight > 3500
SELECT DISTINCT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000
SELECT DISTINCT YEAR FROM cars_data WHERE weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE weight > 3000
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1
SELECT cars_data.cylinders FROM car_names JOIN cars_data ON car_names.model = cars_data.id JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Volvo' ORDER BY cars_data.accelerate ASC LIMIT 1
SELECT cars_data.cylinders FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Volvo Cars' ORDER BY cars_data.accelerate ASC LIMIT 1
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (horsepower)      FROM cars_data)
SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname HAVING COUNT (*) > 2
SELECT COUNT (_) FROM _ GROUP BY _ HAVING COUNT (_) > 2
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
SELECT COUNT (*) FROM cars_data WHERE cylinders > 6
SELECT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM model_list JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 4 GROUP BY model_list.model ORDER BY COUNT (*) DESC LIMIT 1
SELECT car_makers.id,        car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.id = cars_data.id WHERE cars_data.horsepower >     (SELECT MIN (_)      FROM _) EXCEPT SELECT car_makers.id,        car_makers.fullname FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.id = cars_data.id WHERE cars_data.cylinders > 3
car_makers.fullname, car_makers.id FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.horsepower <     (SELECT MIN (_)      FROM _)   AND cars_data.cylinders < 4
SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   OR YEAR < 1980
SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   OR YEAR < 1980
SELECT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < 3500 EXCEPT SELECT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname != 'Ford Motor Company'   AND cars_data.weight < 3500
SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country
SELECT countryname FROM countries WHERE countryid NOT IN     (SELECT country      FROM car_makers)
SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) >= 2 INTERSECT SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) > 3
SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT (*) >= 2 INTERSECT SELECT car_makers.id,        car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.id HAVING COUNT (*) > 3
SELECT car_makers.id,        countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY countries.countryname HAVING COUNT (*) > 3 UNION SELECT countries.countryname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id JOIN car_makers ON car_makers.id = model_list.maker WHERE car_makers.fullname = 'fiat'
SELECT car_makers.id,        car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY car_makers.id HAVING COUNT (*) > 3 UNION SELECT car_makers.id,        car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model WHERE car_names.makeid IN     (SELECT id      FROM car_makers      WHERE country = 'Italy' )
SELECT country FROM airlines WHERE airline = 'JetBlue Airways'   OR abbreviation = 'JetBlue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'   OR abbreviation = 'Jetblue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'
SELECT airline,        abbreviation FROM airlines WHERE country = 'USA'
SELECT airline,        abbreviation FROM airlines WHERE country = 'USA'
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode,        airportname FROM airports WHERE city = 'Anthony'
SELECT COUNT (*) FROM airlines
SELECT COUNT (*) FROM airlines
SELECT COUNT (*) FROM airports
SELECT COUNT (*) FROM airports
SELECT COUNT (*) FROM flights
SELECT COUNT (*) FROM flights
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT COUNT (*) FROM airlines WHERE country = 'USA'
SELECT COUNT (*) FROM airlines WHERE country = 'USA'   OR country like '%USA%'
SELECT city,        country FROM airports WHERE airportname = 'Alton'   OR airportname = 'Atlanta'
SELECT city,        country FROM airports WHERE airportname = 'Alton'   OR airportname = 'Ames'
SELECT airportname FROM airports WHERE airportcode = 'AKO'   OR airportname = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports JOIN flights ON airports.airportcode = flights.destairport WHERE airports.city = 'Aberdeen'   OR airports.city = 'Edinburgh'
SELECT airportname FROM airports WHERE city like 'Aberdeen'   AND country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.country = 'APG'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG'   AND airports.country = 'USA'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'ATO'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.country = 'ATO'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airports AS ap2 ON flights.sourceairport = ap2.airportcode WHERE ap2.city = 'Aberdeen'   AND airports.city = 'Ashley'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airports AS ap2 ON flights.sourceairport = ap2.airportcode WHERE ap2.city = 'Aberdeen'   AND airports.city = 'Ashley'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'   OR airlines.abbreviation = 'JZA'
SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'JZ'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND airports.city = 'ASY'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airlines.abbreviation = 'UA'   AND airports.city = 'ASY'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND airports.city = 'AHD'
SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airports.city = 'Atlanta'   AND airlines.abbreviation = 'UA'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airports.city = 'Aberdeen'   AND airlines.abbreviation = 'UAL'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airlines.abbreviation = 'UA'   AND airports.city = 'Aberdeen'
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY flights.destairport ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.country,        airports.airportname FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportname ORDER BY COUNT (*) DESC LIMIT 1
SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT (*) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airportcode ORDER BY COUNT (*) ASC LIMIT 1
SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT (*) ASC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY airlines.uid ORDER BY COUNT (*) ASC LIMIT 1
SELECT airlines.abbreviation,        airlines.country FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY airlines.uid ORDER BY COUNT (*) ASC LIMIT 1
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.sourceairport = 'AHD'   OR flights.destairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.destairport =     (SELECT airportcode      FROM airports      WHERE airportname = 'AHD' )
SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.destairport = 'AHD'
SELECT airline FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'APG' INTERSECT   SELECT airline   FROM flights   JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'CVO'
SELECT airline FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG' INTERSECT   SELECT airline   FROM flights   JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'CVO'
SELECT airline FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'CVO' EXCEPT SELECT airline FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'APG'
SELECT airline FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'CVO' EXCEPT SELECT airline FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.country = 'United States'   OR airports.country = 'Canada'
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
SELECT flightno FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   OR airlines.airline = 'American Airlines'
SELECT flightno FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   OR airlines.airline = 'USAir'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG'   AND airports.country = 'Australia'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'APG'   AND airports.country = 'USA'
SELECT flights.flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG'   AND airports.country = 'Australia'
SELECT flights.flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'APG'   AND airports.country = 'Australia'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.flightno != ''
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT flights.flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.airline = 'Aer Lingus'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'Scotland'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene'
SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city like '%Aberdeen%'   OR airports.city like '%Abilene%'
SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT destairport      FROM flights      UNION SELECT sourceairport      FROM flights)
SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT destairport      FROM flights      UNION SELECT sourceairport      FROM flights)
SELECT COUNT (*) FROM employee
SELECT COUNT (*) FROM employee
SELECT name FROM employee ORDER BY age ASC
SELECT name FROM employee ORDER BY age ASC
SELECT city,        COUNT (*) FROM employee GROUP BY city
SELECT city,        COUNT (*) FROM employee GROUP BY city
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT (*) > 1
SELECT LOCATION,        COUNT (*) FROM shop GROUP BY LOCATION
SELECT LOCATION,        COUNT (*) FROM shop GROUP BY LOCATION
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT manager_name,        district FROM shop ORDER BY number_products DESC LIMIT 1
SELECT MIN (number_products) , MAX (number_products) FROM shop
SELECT MIN (number_products) , MAX (number_products) FROM shop
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name,        LOCATION,        district FROM shop ORDER BY number_products DESC
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT name FROM shop WHERE number_products >     (SELECT AVG (number_products)      FROM shop)
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE evaluation.bonus =     (SELECT MAX (_)      FROM _)
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation)
SELECT name FROM employee WHERE employee_id NOT IN     (SELECT employee_id      FROM evaluation)
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.is_full_time = 1   AND hiring.start_from =     (SELECT MAX (_)      FROM _)
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY hiring.shop_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring)
SELECT name FROM shop WHERE shop_id NOT IN     (SELECT shop_id      FROM hiring)
SELECT shop.name,        COUNT (_) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name,          shop.district
SELECT COUNT (*) , shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name
SELECT SUM (bonus) FROM evaluation
SELECT SUM (bonus) FROM evaluation
SELECT * FROM hiring JOIN employee ON hiring.employee_id = employee.employee_id JOIN shop ON hiring.shop_id = shop.shop_id
SELECT * FROM hiring JOIN employee ON hiring.employee_id = employee.employee_id JOIN shop ON hiring.shop_id = shop.shop_id
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 INTERSECT   SELECT district   FROM shop WHERE number_products > 10000
SELECT COUNT (DISTINCT LOCATION) FROM shop
SELECT COUNT (DISTINCT LOCATION) FROM shop
SELECT COUNT (*) FROM documents
SELECT COUNT (*) FROM documents
SELECT document_id,        document_name,        document_description FROM documents
SELECT document_id,        document_name,        document_description FROM documents
SELECT documents.document_name,        documents.template_id FROM documents JOIN documents ON documents.document_id = paragraphs.document_id WHERE documents.document_description like '%w%'
SELECT documents.document_name,        documents.document_description FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE paragraphs.paragraph_text like '%w%'
SELECT document_id,        template_id,        document_description FROM documents WHERE document_name = 'Robbin CV'
SELECT document_id,        template_id,        document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE document_name = 'Robbin CV'
SELECT COUNT (DISTINCT templates.template_type_code) FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT COUNT (DISTINCT template_type_code) FROM templates
SELECT COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT template_id,        COUNT (*) FROM documents GROUP BY template_id
SELECT template_id,        COUNT (*) FROM documents GROUP BY template_id
SELECT documents.template_id,        ref_template_types.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT templates.template_id,        templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY documents.template_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT document_id FROM documents GROUP BY document_id HAVING COUNT (*) > 1
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT (*) > 1
SELECT template_id FROM templates WHERE template_id NOT IN     (SELECT template_id      FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN     (SELECT template_id      FROM documents)
SELECT COUNT (*) FROM ref_template_types
SELECT COUNT (*) FROM templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT template_id,        version_number,        template_type_code FROM templates
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT template_id FROM templates WHERE template_type_code = 'PP'   OR template_type_code = 'PPT'
SELECT COUNT (*) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT (*) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = 'CV'
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT version_number,        template_type_code FROM templates WHERE version_number > 5
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code,        COUNT (*) FROM templates GROUP BY template_type_code
SELECT template_type_code FROM ref_template_types GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY ref_template_types.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT (*) < 3
SELECT version_number,        template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT version_number,        template_type_code FROM templates ORDER BY version_number ASC LIMIT 1
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'
SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'
SELECT document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'
SELECT ref_template_types.template_type_code,        COUNT (*) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY ref_template_types.template_type_code
SELECT template_type_code,        COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code GROUP BY templates.template_type_code
SELECT ref_template_types.template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY ref_template_types.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT template_type_code      FROM templates)
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT template_type_code      FROM templates)
SELECT * FROM ref_template_types
SELECT template_type_code,        template_type_description FROM ref_template_types
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id JOIN paragraphs ON documents.document_id = paragraphs.document_id
SELECT DISTINCT templates.template_details FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_id = 'document id'
SELECT templates.template_id FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT COUNT (*) FROM paragraphs
SELECT COUNT (*) FROM paragraphs
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Summer Show'
SELECT other_details FROM paragraphs WHERE paragraph_text like '% Korea %'   OR paragraph_text like '% South Korea %'
SELECT * FROM paragraphs WHERE paragraph_text like '% Korea %'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_id,        paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Welcome to NY'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE documents.document_name = 'Customer reviews'
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
SELECT document_id,        COUNT (*) FROM paragraphs GROUP BY document_id ORDER BY document_id ASC
SELECT document_id,        document_name,        COUNT (*) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id,          document_name
SELECT document_id,        document_name,        COUNT (_) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id UNION SELECT document_id,        document_name,        COUNT (_) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
SELECT documents.document_id,        documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT documents.document_id,        documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) BETWEEN 1 AND 2
SELECT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' INTERSECT   SELECT document_id   FROM paragraphs WHERE paragraph_text = 'Ireland'
SELECT document_id FROM paragraphs WHERE paragraph_text like '%Brazil%'   OR paragraph_text like '%Ireland%'
SELECT COUNT (*) FROM teacher
SELECT COUNT (*) FROM teacher
SELECT name FROM teacher ORDER BY age ASC
SELECT name FROM teacher ORDER BY age ASC
SELECT age,        hometown FROM teacher WHERE teacher_id IN     (SELECT teacher_id      FROM course_arrange)
SELECT age,        hometown FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id
SELECT name FROM teacher WHERE hometown != ' Little Lever Urban District '
SELECT name FROM teacher WHERE hometown != ' Little Lever Urban District'
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT name FROM teacher WHERE age = 32   OR age = 33
SELECT hometown FROM teacher WHERE age =     (SELECT MIN (age)      FROM teacher)
SELECT hometown FROM teacher WHERE age =     (SELECT MIN (age)      FROM teacher)
SELECT hometown,        COUNT (*) FROM teacher GROUP BY hometown
SELECT hometown,        COUNT (*) FROM teacher GROUP BY hometown
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT (*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT (*) >= 2
SELECT teacher.name,        course.course FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name,        course.course FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id ORDER BY teacher.name ASC
SELECT teacher.name FROM course JOIN course_arrange ON course.course_id = course_arrange.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = 'math'
SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = 'math'
SELECT teacher.name,        COUNT (*) FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id
SELECT teacher.name,        COUNT (_) FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.name
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT name FROM teacher WHERE teacher_id NOT IN     (SELECT teacher_id      FROM course_arrange)
SELECT COUNT (*) FROM visitor WHERE level_of_membership = 'Visitor'   AND age < 30
SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC
SELECT AVG (visitor.age) FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visitor.level_of_membership <= 4
SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age DESC
SELECT museum_id,        name FROM museum ORDER BY num_of_staff DESC LIMIT 1
SELECT AVG (num_of_staff) FROM museum WHERE open_year < 2009
SELECT open_year,        num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT name FROM museum WHERE num_of_staff >     (SELECT MIN (num_of_staff)      FROM museum      WHERE open_year > 2010 )
SELECT visitor.id,        visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id HAVING COUNT (*) > 1
SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id ORDER BY visit.total_spent DESC LIMIT 1
SELECT museum.museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT name FROM museum WHERE museum_id NOT IN     (SELECT museum_id      FROM visit)
SELECT visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket =     (SELECT MAX (num_of_ticket)      FROM visit)
SELECT AVG (num_of_ticket) , MAX (num_of_ticket) FROM visit
SELECT SUM (visit.total_spent) FROM visit JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year < 2009 INTERSECT   SELECT visitor.name   FROM visitor   JOIN visit ON visitor.id = visit.visitor_id   JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2011
SELECT COUNT (*) FROM visitor WHERE id NOT IN     (SELECT visitor_id      FROM visit      WHERE museum_id IN          (SELECT museum_id           FROM museum           WHERE open_year > 2010 ) )
SELECT COUNT (*) FROM museum WHERE open_year > 2013   OR open_year < 2008
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM players
SELECT COUNT (*) FROM matches
SELECT COUNT (*) FROM matches
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA' ORDER BY birth_date ASC
SELECT first_name,        birth_date FROM players WHERE country_code = 'USA'
SELECT AVG (winner_age) , AVG (loser_age) FROM matches WHERE YEAR = 2017
SELECT AVG (winner_age) , AVG (loser_age) FROM matches GROUP BY YEAR
SELECT AVG (winner_rank) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE YEAR = 2018
SELECT AVG (winner_rank) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE YEAR = 2019
SELECT MAX (loser_rank) FROM matches WHERE YEAR = 2017   AND loser_rank != 'None'
rankings.ranking FROM rankings JOIN players ON rankings.player_id = players.player_id JOIN matches ON players.player_id = matches.loser_id ORDER BY rankings.ranking DESC LIMIT 1
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT country_code) FROM players
SELECT COUNT (DISTINCT loser_name) FROM matches WHERE YEAR = 2017
SELECT COUNT (DISTINCT loser_name) FROM matches
SELECT tourney_name FROM matches GROUP BY tourney_id HAVING COUNT (*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT (*) > 10
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN matches AS m ON players.player_id = m.loser_id WHERE matches.tourney_year = 2013 INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN matches AS m ON players.player_id = m.loser_id WHERE matches.tourney_year = 2016
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN players ON players.player_id = matches.loser_id WHERE matches.tourney_year = 2013 INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN players ON players.player_id = matches.loser_id WHERE matches.tourney_year = 2016
SELECT COUNT (*) FROM matches JOIN players ON matches.winner_id = players.player_id JOIN matches ON matches.loser_id = players.player_id WHERE YEAR = 2013   OR YEAR = 2016
SELECT COUNT (*) FROM matches WHERE YEAR = 2013   OR YEAR = 2016
SELECT players.country_code,        players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'WTA Championships' INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'Australian Open'
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'WTA Championships' INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN matches ON players.player_id = matches.winner_id   JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'Australian Open'
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id ORDER BY players.birth_date ASC LIMIT 1
SELECT players.first_name,        players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id ORDER BY players.birth_date ASC LIMIT 1
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name,        last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id OR players.player_id = matches.loser_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name,        rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name,        rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id WHERE rankings.tour = 'Australian Open'   AND rankings.year = 2018 ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN tourneys ON tourneys.tourney_id = matches.tourney_id WHERE tourneys.tourney_name = 'Australian Open'   AND players.country_code = 'AU' ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT players.first_name,        players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id OR players.player_id = matches.loser_id WHERE matches.minutes =     (SELECT MAX (_)      FROM _)
players JOIN matches ON players.player_id = matches.winner_id OR players.player_id = matches.loser_id WHERE matches.minutes =     (SELECT MAX (minutes)      FROM matches) UNION SELECT _ FROM _ WHERE _ =     (SELECT MIN (minutes)      FROM matches)
SELECT players.first_name,        AVG (rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id
SELECT players.first_name,        AVG (rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY AVG (rankings.ranking) ASC
SELECT SUM (rankings.ranking_points) , players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id,          players.first_name
SELECT players.first_name,        SUM (rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY SUM (rankings.ranking_points) ASC
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code
SELECT country_code,        COUNT (*) FROM players GROUP BY country_code ORDER BY COUNT (*) DESC
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT (*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code HAVING COUNT (*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT (*) > 50
SELECT ranking_date,        COUNT (*) FROM rankings GROUP BY ranking_date
SELECT ranking_date,        COUNT (*) FROM rankings GROUP BY ranking_date
SELECT YEAR,        COUNT (*) FROM matches GROUP BY YEAR
SELECT YEAR,        COUNT (*) FROM matches GROUP BY YEAR
SELECT players.first_name,        rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON rankings.player_id = matches.winner_id OR rankings.player_id = matches.loser_id ORDER BY rankings.ranking_date ASC LIMIT 3
SELECT players.first_name,        players.last_name,        rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id OR matches.loser_id = players.player_id ORDER BY players.birth_date ASC LIMIT 3
SELECT COUNT (DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' INTERSECT   SELECT COUNT (DISTINCT winner_id)   FROM matches WHERE winner_hand = 'L'   AND match_num = 100
SELECT COUNT (*) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.hand = 'L'   AND matches.tourney_name = 'WTA Championships'   AND matches.year = 2014
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id OR matches.loser_id = players.player_id ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT hand,        COUNT (*) FROM players GROUP BY hand
SELECT hand,        COUNT (*) FROM players GROUP BY hand
SELECT COUNT (*) FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE battle.result = 'Captured'
SELECT name,        tonnage FROM ship ORDER BY name DESC
SELECT name , date , RESULT FROM battle
SELECT MAX (killed) , MIN (killed) FROM death GROUP BY caused_by_ship_id
SELECT AVG (injured) FROM death
SELECT death.note,        death.killed,        death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'   AND death.killed > 0
SELECT name,        RESULT FROM battle WHERE bulgarian_commander != 'Boril'
SELECT DISTINCT battle.id,                 battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type like '%Brig%'
SELECT battle.id,        battle.name FROM battle JOIN death ON battle.id = death.killed_in_battle GROUP BY battle.id HAVING SUM (death.killed) > 10
SELECT ship.id,        ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id ORDER BY SUM (death.killed + death.injured) DESC LIMIT 1
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan'   AND latin_commander = 'Baldwin I'
SELECT COUNT (DISTINCT RESULT) FROM battle
SELECT COUNT (*) FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE tonnage = 225 )
SELECT battle.name,        battle.date FROM battle JOIN ship ON battle.latin_commander = ship.id WHERE ship.name = 'Lettice'   OR ship.name = 'HMS Atalanta'
SELECT name,        RESULT,        bulgarian_commander FROM battle WHERE id NOT IN     (SELECT lost_in_battle      FROM ship      WHERE LOCATION = 'English Channel' )
SELECT note FROM death WHERE note like '%East%'
SELECT * FROM addresses WHERE line_1 like '%line 1%'   OR line_2 like '%line 2%'
SELECT addresses.line_1,        addresses.line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id
SELECT COUNT (*) FROM courses
SELECT COUNT (*) FROM courses
SELECT course_description FROM courses WHERE course_name = 'Math'
SELECT course_description FROM courses WHERE course_name like '%Math%'
SELECT addresses.zip_postcode FROM addresses JOIN students ON addresses.address_id = students.current_address_id WHERE addresses.city = 'Port Chelsea'   AND students.current_address_id != 0
SELECT addresses.zip_postcode FROM addresses JOIN students ON addresses.address_id = students.current_address_id WHERE addresses.city = 'Port Chelsea'   AND addresses.state_province_county = 'NY'
SELECT departments.department_name,        departments.department_id FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id GROUP BY departments.department_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT departments.department_name,        departments.department_id FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY departments.department_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT COUNT (DISTINCT department_id) FROM degree_programs
SELECT COUNT (DISTINCT department_id) FROM degree_programs
SELECT COUNT (DISTINCT degree_programs.degree_summary_name) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id JOIN students ON departments.department_id = students.department_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE student_enrolment.semester_id = 'Fall 2019'   OR student_enrolment.semester_id = 'Spring 2020'
SELECT COUNT (DISTINCT degree_programs.degree_summary_name) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id JOIN degree_programs ON departments.department_id = degree_programs.department_id
SELECT COUNT (*) FROM courses JOIN departments ON courses.department_id = departments.department_id WHERE departments.department_name = 'Engineering'   AND courses.course_description like '%Degree%'
SELECT COUNT (*) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id WHERE departments.department_name = 'Engineering'
SELECT courses.course_name,        courses.course_description FROM courses JOIN sections ON courses.course_id = sections.course_id
SELECT sections.section_name,        sections.section_description FROM sections JOIN courses ON sections.course_id = courses.course_id
SELECT courses.course_name,        courses.course_id FROM courses JOIN sections ON courses.course_id = sections.course_id GROUP BY courses.course_id HAVING COUNT (*) <= 2
SELECT courses.course_name,        courses.course_id FROM courses JOIN sections ON courses.course_id = sections.course_id GROUP BY courses.course_id HAVING COUNT (*) < 2
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT semesters.semester_name,        semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semesters.semester_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT semesters.semester_name,        semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semesters.semester_id ORDER BY COUNT (*) DESC LIMIT 1
SELECT department_description FROM departments WHERE department_name like '%the computer%'
