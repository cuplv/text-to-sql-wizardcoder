SELECT count ( * ) from singer
SELECT count ( * ) from singer
SELECT name , country , age from singer order by age desc
SELECT name , country , age from singer order by age desc
SELECT avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France'
SELECT avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France';
SELECT name , song_release_year from singer order by age asc limit 1;
SELECT name , song_release_year from singer order by age asc limit 1
SELECT distinct country from singer where age > 20
SELECT distinct country from singer where age > 20
SELECT country , count ( * ) from singer group by country;
SELECT country , count ( * ) from singer group by country ;
SELECT song_name from singer where age > ( select avg ( age ) from singer );
SELECT song_name from singer where age > ( select avg ( age ) from singer )
SELECT location , name from stadium where capacity between 5000 and 10000
SELECT location , name from stadium where capacity between 5000 and 10000
SELECT max ( capacity ) , avg ( capacity ) from stadium
SELECT max ( capacity ) , avg ( capacity ) from stadium
SELECT name , capacity from stadium order by average desc limit 1
SELECT name , capacity from stadium order by average desc limit 1
SELECT count ( * ) from concert where year = 2014 or year = 2015
SELECT count ( * ) from concert where year = 2014 or year = 2015
SELECT stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id
SELECT stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id;
SELECT stadium.name , stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year >= 2014 group by concert.stadium_id order by count ( * ) desc limit 1
SELECT stadium.name , stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year > 2013 group by concert.stadium_id order by count ( * ) desc limit 1
SELECT year from concert group by year order by count ( * ) desc limit 1
SELECT year from concert group by year order by count ( * ) desc limit 1
SELECT name from stadium where stadium_id not in ( select stadium_id from concert )
SELECT name from stadium where stadium_id not in ( select stadium_id from concert )
SELECT country from singer where age > 40 intersect select country from singer where age < 30
SELECT name from stadium except select stadium.name from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014
SELECT name from stadium except select concert.concert_name from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014
SELECT concert.concert_name , concert.theme , count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by singer_in_concert.concert_id
SELECT concert.concert_name , concert.theme , count ( * ) from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.concert_id;
SELECT singer.name , count ( * ) from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id group by singer.singer_id;
SELECT singer.name , count ( * ) from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id group by singer.singer_id;
SELECT singer.name from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where year = 2014
SELECT singer.name from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id join singer on singer_in_concert.singer_id = singer.singer_id where concert.year = 2014;
SELECT name , country from singer where song_name like '%Hey%';
SELECT name , country from singer where song_name like '%Hey%';
SELECT stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015
SELECT stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2014 intersect select stadium.name , stadium.location from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year = 2015
SELECT count ( * ) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 );
SELECT count ( * ) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 );
SELECT count ( * ) from pets where weight > 10
SELECT count ( * ) from pets where weight > 10
SELECT weight from pets where pettype = 'dog' order by pet_age desc limit 1
SELECT weight from pets where pettype = 'dog' order by pet_age desc limit 1
SELECT max ( weight ) , pettype from pets group by pettype
SELECT max ( weight ) , pettype from pets group by pettype
SELECT count ( * ) from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where student.age > 20
SELECT count ( * ) from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where student.age > 20
SELECT count ( * ) from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'dog' and student.sex = 'F';
SELECT count ( * ) from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'Dog' and student.sex = 'F'
SELECT count ( distinct pettype ) from pets
SELECT count ( distinct pettype ) from pets
SELECT student.fname from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat' or pets.pettype = 'Dog'
SELECT student.fname from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'Cat' or pets.pettype = 'Dog' group by student.stuid having count ( * ) >= 2
SELECT student.fname from has_pet join student on has_pet.stuid = student.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'cat' intersect select student.fname from has_pet join student on has_pet.stuid = student.stuid join pets on pets.petid = has_pet.petid where pets.pettype = 'dog';
SELECT student.fname from has_pet join student on has_pet.stuid = student.stuid where has_pet.petid in ( select petid from pets where pettype = 'Cat' ) intersect select student.fname from has_pet join student on has_pet.stuid = student.stuid where has_pet.petid in ( select petid from pets where pettype = 'Dog' );
SELECT major , age from student where stuid not in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' )
SELECT major , age from student where stuid not in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' )
SELECT stuid from has_pet except select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat'
SELECT stuid from has_pet except select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'cat';
SELECT student.fname , student.age from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'dog' except select student.fname , student.age from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'cat';
SELECT student.fname from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'Dog' except select student.fname from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'Cat';
SELECT pettype , weight from pets order by pet_age desc limit 1
SELECT pettype , weight from pets order by pet_age desc , weight asc limit 1
SELECT petid , weight from pets where pet_age > 1
SELECT petid , weight from pets where pet_age > 1
SELECT avg ( pet_age ) , max ( pet_age ) from pets group by pettype
SELECT pettype , avg ( pet_age ) , max ( pet_age ) from pets group by pettype
SELECT pettype , avg ( weight ) from pets group by pettype;
SELECT avg ( weight ) , pettype from pets group by pettype
SELECT distinct student.fname , student.age from has_pet join student on has_pet.stuid = student.stuid;
SELECT distinct student.fname , student.age from has_pet join student on has_pet.stuid = student.stuid
SELECT pets.petid from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where student.lname = 'Smith';
SELECT pets.petid from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where student.lname = 'Smith';
SELECT count ( * ) , stuid from has_pet group by stuid
SELECT stuid , count ( * ) from has_pet group by stuid
SELECT student.fname , student.sex from has_pet join student on has_pet.stuid = student.stuid group by has_pet.stuid having count ( * ) > 1
SELECT student.fname , student.sex from has_pet join student on has_pet.stuid = student.stuid group by has_pet.stuid having count ( * ) > 1 ;
SELECT student.lname from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'cat' and pets.pet_age = 3
SELECT student.lname from has_pet join pets on has_pet.petid = pets.petid join student on student.stuid = has_pet.stuid where pets.pettype = 'cat' and pets.pet_age = 3
SELECT avg ( age ) from student where stuid not in ( select stuid from has_pet )
SELECT avg ( age ) from student where stuid not in ( select stuid from has_pet )
SELECT count ( * ) from continents
SELECT count ( * ) from continents
SELECT continents.contid , continents.continent , count ( * ) , countries.continent from countries join continents on countries.continent = continents.contid group by countries.continent;
SELECT continents.contid , continents.continent , count ( * ) from countries join continents on countries.continent = continents.contid group by countries.continent;
SELECT count ( * ) from countries
SELECT count ( * ) from countries
SELECT car_makers.fullname , model_list.maker , count ( * ) from model_list join car_makers on model_list.maker = car_makers.id group by model_list.maker;
SELECT car_makers.fullname , model_list.id , count ( * ) from car_makers join model_list on car_makers.id = model_list.id group by model_list.id
SELECT model_list.model from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model order by cars_data.horsepower asc limit 1
SELECT distinct model_list.model from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model order by cars_data.horsepower asc limit 1 ;
SELECT distinct model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.weight < ( select avg ( weight ) from cars_data )
SELECT distinct model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.weight < ( select avg ( weight ) from cars_data )
SELECT maker from cars_data where year = 1970
SELECT distinct car_makers.fullname from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.modelid join car_makers on model_list.maker = car_makers.id where cars_data.year = 1970
SELECT car_names.make , cars_data.year from car_names join cars_data on car_names.id = cars_data.id order by cars_data.year asc limit 1 ;
SELECT car_makers.maker , cars_data.year from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id order by cars_data.year asc limit 1
SELECT distinct model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.year > 1980
SELECT distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.year > 1980 ;
SELECT continents.continent , count ( * ) from countries join continents on countries.continent = continents.contid group by countries.continent
SELECT continents.continent , count ( * ) from car_makers join countries on car_makers.country = countries.countryid join continents on countries.continent = continents.contid group by countries.continent
SELECT countries.countryname from car_makers join countries on car_makers.country = countries.countryid group by countries.countryname order by count ( * ) desc limit 1
SELECT countries.countryname from car_makers join countries on car_makers.country = countries.countryid group by car_makers.country order by count ( * ) desc limit 1
SELECT count ( * ) , car_makers.fullname from model_list join car_makers on model_list.maker = car_makers.id group by car_makers.fullname
SELECT count ( * ) , car_makers.id , car_makers.fullname from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id
SELECT cars_data.accelerate from car_names join cars_data on car_names.makeid = cars_data.id where car_names.model = 'amc hornet sportabout (sw)';
SELECT accelerate from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model where model_list.maker = ( select id from car_makers where maker = 'amc' ) and model_list.model = 'hornet sportabout (sw)'
SELECT count ( * ) from car_makers where country = 'France'
SELECT count ( * ) from car_makers where country = 'France'
SELECT count ( * ) from car_names join model_list on car_names.model = model_list.model join car_makers on car_makers.id = model_list.maker where car_makers.country = 'usa';
SELECT count ( * ) from car_names join car_makers on car_names.makeid = car_makers.id where car_makers.country = 'United States'
SELECT avg ( mpg ) from cars_data where cylinders = 4
SELECT avg ( mpg ) from cars_data where cylinders = 4
SELECT min ( weight ) from cars_data where year = 1974 and cylinders = 8
SELECT min ( weight ) from cars_data where cylinders = 8 and year = 1974
SELECT maker , model from model_list
SELECT maker , model from model_list
SELECT car_makers.fullname , car_makers.id from car_makers join countries on car_makers.country = countries.countryid group by countries.countryname having count ( * ) >= 1;
SELECT distinct countries.countryname , countries.countryid from countries join car_makers on countries.countryid = car_makers.country
SELECT count ( * ) from cars_data where horsepower > 150
SELECT count ( * ) from cars_data where horsepower > 150
SELECT avg ( weight ) , year from cars_data group by year
SELECT avg ( weight ) , year from cars_data group by year
SELECT countries.countryname from countries join car_makers on countries.countryid = car_makers.country where countries.continent = 'Europe' group by countries.countryname having count ( * ) >= 3
SELECT countries.countryname from countries join car_makers on countries.countryid = car_makers.country where countries.continent = 'Europe' group by countries.countryname having count ( distinct car_makers.maker ) >= 3;
SELECT max ( cars_data.horsepower ) , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.cylinders = 3 group by car_names.make
SELECT max ( cars_data.horsepower ) , car_makers.maker from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id where cars_data.cylinders = 3;
SELECT model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id order by cars_data.mpg desc limit 1
SELECT model_list.model from model_list join cars_data on model_list.modelid = cars_data.id order by cars_data.mpg desc limit 1
SELECT avg ( horsepower ) from cars_data where year < 1980
SELECT avg ( horsepower ) from cars_data where year < 1980
SELECT avg ( cars_data.edispl ) from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'volvo';
SELECT avg ( cars_data.edispl ) from car_names join cars_data on car_names.makeid = cars_data.id where car_names.make = 'volvo';
SELECT max ( accelerate ) , cylinders from cars_data group by cylinders
SELECT max ( accelerate ) , cylinders from cars_data group by cylinders
SELECT model from car_names group by model order by count ( * ) desc limit 1
SELECT model from model_list group by model order by count ( * ) desc limit 1
SELECT count ( * ) from cars_data where cylinders > 4
SELECT count ( * ) from cars_data where cylinders > 4
SELECT count ( * ) from cars_data where year = 1980
SELECT count ( * ) from cars_data where year = 80
SELECT count ( * ) from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'American Motor Company';
SELECT count ( * ) from model_list where maker = 'American Motors Corporation';
SELECT car_makers.fullname , model_list.maker from model_list join car_makers on model_list.maker = car_makers.id group by model_list.maker having count ( * ) > 3
SELECT maker , id from model_list group by maker having count ( * ) > 3
SELECT distinct model_list.model from model_list join car_names on model_list.model = car_names.model where car_names.make in ( select car_makers.maker from car_makers where car_makers.fullname = 'General Motors' ) or car_names.makeid in ( select id from cars_data where weight > 3500 );
SELECT distinct model_list.model from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'General Motors' or cars_data.weight > 3500;
SELECT year from cars_data where weight >= 3000 and weight <= 4000
SELECT distinct year from cars_data where weight < 4000 intersect select distinct year from cars_data where weight > 3000
SELECT horsepower from cars_data order by accelerate desc limit 1
SELECT horsepower from cars_data order by accelerate desc limit 1
SELECT cars_data.cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'volvo' order by cars_data.accelerate asc limit 1
SELECT cars_data.cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'volvo' order by cars_data.accelerate asc limit 1
SELECT count ( * ) from cars_data where accelerate > ( select max ( horsepower ) from cars_data );
SELECT count ( * ) from cars_data where accelerate > ( select max ( horsepower ) from cars_data );
SELECT countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryname having count ( distinct car_makers.maker ) > 2
SELECT countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryname having count ( distinct car_makers.maker ) > 2;
SELECT count ( * ) from cars_data where cylinders > 6
SELECT count ( * ) from cars_data where cylinders > 6
SELECT max ( cars_data.horsepower ) , model_list.model from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.modelid where cars_data.cylinders = 4;
SELECT model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1
SELECT makeid , make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.horsepower > ( select min ( horsepower ) from cars_data ) except select makeid , make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders > 3
SELECT car_names.makeid , car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders < ( select min ( horsepower ) from cars_data )
SELECT max ( mpg ) from cars_data where cylinders = 8 or year < 1980
SELECT max ( mpg ) from cars_data where cylinders = 8 or year < 1980
SELECT model_list.model from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model where cars_data.weight < 3500 except select model from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'Ford Motor Company';
SELECT distinct model_list.model from model_list join car_names on model_list.model = car_names.model join cars_data on car_names.makeid = cars_data.id where cars_data.weight < 3500 except select distinct model from model_list join car_names on model_list.model = car_names.model where model_list.maker = 'Ford'
SELECT countryname from countries where countryname not in ( select fullname from car_makers )
SELECT countryname from countries where countryname not in ( select fullname from car_makers )
SELECT car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) >= 2 intersect select car_makers.id , car_makers.maker from car_makers group by car_makers.id having count ( * ) > 3
SELECT car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model group by car_names.make having count ( * ) > 3 intersect select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.model = car_names.model group by car_names.make having count ( * ) > 1
SELECT countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country where countries.countryid in ( select countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 ) or car_makers.maker = 'fiat'
SELECT countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country where car_makers.id in ( select id from car_makers group by id having count ( * ) > 3 ) or car_makers.maker = 'fiat'
SELECT country from airlines where airline = 'JetBlue Airways'
SELECT country from airlines where airline = 'JetBlue Airways';
SELECT abbreviation from airlines where airline = 'JetBlue Airways'
SELECT abbreviation from airlines where airline = 'JetBlue Airways'
SELECT airline , abbreviation from airlines where country = 'USA'
SELECT airline , abbreviation from airlines where country = 'USA'
SELECT airportcode , airportname from airports where city = 'Anthony'
SELECT airportcode , airportname from airports where city = 'Anthony'
SELECT count ( * ) from airlines
SELECT count ( * ) from airlines
SELECT count ( * ) from airports
SELECT count ( * ) from airports
SELECT count ( * ) from flights
SELECT count ( * ) from flights
SELECT airline from airlines where abbreviation = 'UAL'
SELECT airline from airlines where abbreviation = 'UAL'
SELECT count ( * ) from airlines where country = 'United States';
SELECT count ( * ) from airlines where country = 'United States'
SELECT city , country from airports where airportname = 'Alton';
SELECT city , country from airports where airportname = 'Alton';
SELECT airportname from airports where airportcode = 'AKO'
SELECT airportname from airports where airportcode = 'AKO'
SELECT airportname from airports where city = 'Aberdeen'
SELECT airportname from airports where city = 'Aberdeen'
SELECT count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'Phillips Aaf'
SELECT count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'APG';
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Atlanta';
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Athens';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = 'Aberdeen';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = 'Aberdeen';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen';
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.sourceairport join airports on airports.airportcode = flights.destairport where airports.city = 'Aberdeen' and airports.city = 'Ashley';
SELECT count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen' join airports on flights.destairport = airports.airportcode where airports.city = 'Ashley';
SELECT count ( * ) from flights where airline = 'JetBlue Airways';
SELECT count ( * ) from flights where airline = 'JetBlue Airways'
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode join airlines on flights.airline = airlines.abbreviation where airlines.airline = 'United Airlines' and airports.airportcode = 'ASY';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.destairport where flights.airline = 'United Airlines' and flights.destairport = 'ASY';
SELECT count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.airportname = 'AHD' and flights.airline = 'United Airlines';
SELECT count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'Ardmore Municipal Airport' and flights.airline = 'United Airlines'
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen' and flights.airline = 'United Airlines';
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen' and flights.airline = 'United Airlines';
SELECT airports.city from airports join flights on flights.destairport = airports.airportcode group by airports.city order by count ( * ) desc limit 1
SELECT airports.city from airports join flights on flights.destairport = airports.airportcode group by airports.city order by count ( * ) desc limit 1
SELECT airports.city from airports join flights on flights.sourceairport = airports.airportcode group by airports.city order by count ( * ) desc limit 1
SELECT airports.city from airports join flights on airports.airportcode = flights.sourceairport group by airports.city order by count ( * ) desc limit 1
SELECT sourceairport from flights group by sourceairport order by count ( * ) desc limit 1
SELECT destairport from flights group by destairport order by count ( * ) desc limit 1
SELECT sourceairport from flights group by sourceairport order by count ( * ) asc limit 1
SELECT sourceairport from flights group by sourceairport order by count ( * ) asc limit 1
SELECT airline from flights group by airline order by count ( * ) desc limit 1
SELECT airline from flights group by airline order by count ( * ) desc limit 1
SELECT airlines.abbreviation , airlines.country from flights join airlines on flights.airline = airlines.abbreviation group by airlines.abbreviation order by count ( * ) asc limit 1 ;
SELECT abbreviation , country from airlines join flights on airlines.uid = flights.airline group by airline order by count ( * ) asc limit 1
SELECT distinct airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on airports.airportcode = flights.sourceairport where airports.airportname = 'AHD';
SELECT airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.airportname = 'Ardmore Municipal Airport';
SELECT distinct airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on airports.airportcode = flights.destairport where airports.airportname = 'Doha Intl'
SELECT airlines.airline from airlines join flights on airlines.abbreviation = flights.airline join airports on airports.airportcode = flights.destairport where airports.airportname = 'Ardmore Municipal Airport';
SELECT airline from flights where sourceairport = 'APG' intersect select airline from flights where sourceairport = 'CVO';
SELECT airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.abbreviation where airports.airportname = 'Phillips Aaf' intersect select airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.abbreviation where airports.airportname = 'Corvallis Muni';
SELECT airlines.airline from flights join airports on flights.destairport = airports.airportcode join airlines on flights.airline = airlines.uid where airports.airportname = 'Cordova Municipal Airport' except select airlines.airline from flights join airports on flights.destairport = airports.airportcode join airlines on flights.airline = airlines.uid where airports.airportname = 'Phillips Army Air Field';
SELECT airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.city = 'Cordova' except select airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.city = 'Marion';
SELECT airline from flights group by airline having count ( * ) >= 10
SELECT airline from flights group by airline having count ( * ) >= 10
SELECT airline from flights group by airline having count ( * ) < 200
SELECT airline from flights group by airline having count ( * ) < 200
SELECT flightno from flights where airline = 'United Airlines'
SELECT flightno from flights where airline = 'United Airlines'
SELECT flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'Phillips Army Air Field';
SELECT flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Malmo';
SELECT flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.airportname = 'Phillips Army Air Field';
SELECT flightno from flights where destairport = 'APG'
SELECT flights.flightno from airports join flights on airports.airportcode = flights.sourceairport where airports.city = 'Aberdeen';
SELECT flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen';
SELECT flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen'
SELECT distinct flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen';
SELECT count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.city = 'Aberdeen' or airports.city = 'Abilene';
SELECT count ( * ) from flights where destairport = 'Aberdeen' or destairport = 'Abilene';
SELECT airportname from airports where airportcode not in ( select destairport from flights ) and airportcode not in ( select sourceairport from flights )
SELECT airportname from airports except select airportname from airports join flights on airports.airportcode = flights.sourceairport join airports on airports.airportcode = flights.destairport
SELECT count ( * ) from employee
SELECT count ( * ) from employee
SELECT name from employee order by age asc;
SELECT name from employee order by age asc
SELECT city , count ( * ) from employee group by city ;
SELECT count ( * ) , city from employee group by city ;
SELECT city from employee where age < 30 group by city having count ( * ) > 1
SELECT city from employee where age < 30 group by city having count ( * ) > 1
SELECT location , count ( * ) from shop group by location ;
SELECT location , count ( * ) from shop group by location ;
SELECT manager_name , district from shop order by number_products desc limit 1
SELECT manager_name , district from shop order by number_products desc limit 1
SELECT max ( number_products ) , min ( number_products ) from shop
SELECT max ( number_products ) , min ( number_products ) from shop
SELECT name , location , district from shop order by number_products desc
SELECT name , location , district from shop order by number_products desc
SELECT name from shop where number_products > ( select avg ( number_products ) from shop )
SELECT name from shop where number_products > ( select avg ( number_products ) from shop );
SELECT employee.name from evaluation join employee on evaluation.employee_id = employee.employee_id group by evaluation.employee_id order by count ( * ) desc limit 1
SELECT employee.name from evaluation join employee on evaluation.employee_id = employee.employee_id group by evaluation.employee_id order by count ( * ) desc limit 1
SELECT employee.name from evaluation join employee on evaluation.employee_id = employee.employee_id order by bonus desc limit 1
SELECT employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1;
SELECT name from employee except select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id
SELECT name from employee where employee_id not in ( select employee_id from evaluation )
SELECT shop.name from shop join hiring on shop.shop_id = hiring.shop_id group by shop.shop_id order by count ( * ) desc limit 1
SELECT shop.name from shop join hiring on shop.shop_id = hiring.shop_id group by shop.shop_id order by count ( * ) desc limit 1;
SELECT name from shop where shop_id not in ( select shop_id from hiring )
SELECT name from shop where shop_id not in ( select shop_id from hiring )
SELECT count ( * ) , shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.name
SELECT count ( * ) , shop.name from shop join hiring on shop.shop_id = hiring.shop_id group by shop.shop_id;
SELECT sum ( bonus ) from evaluation
SELECT sum ( bonus ) from evaluation
SELECT * from hiring
SELECT * from hiring
SELECT district from shop where number_products < 3000 intersect select district from shop where number_products > 10000
SELECT district from shop where number_products < 3000 intersect select district from shop where number_products > 10000
SELECT count ( distinct location ) from shop
SELECT count ( distinct location ) from shop
SELECT count ( * ) from documents
SELECT count ( * ) from documents
SELECT document_id , document_name , document_description from documents
SELECT document_id , document_name , document_description from documents
SELECT document_name , template_id from documents where document_description like '%w%';
SELECT document_name , document_id from documents where document_description like '%w%';
SELECT documents.document_id , documents.template_id , documents.document_description from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text like '%Robbin CV%';
SELECT documents.document_id , documents.template_id , documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text like '%Robbin%';
SELECT count ( distinct templates.template_id ) from documents join templates on documents.template_id = templates.template_id
SELECT count ( distinct templates.template_id ) from documents join templates on documents.template_id = templates.template_id
SELECT count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT'
SELECT count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT';
SELECT template_id , count ( * ) from documents group by template_id
SELECT template_id , count ( * ) from documents group by template_id
SELECT templates.template_id , templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_id order by count ( * ) desc limit 1
SELECT templates.template_id , templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by documents.template_id order by count ( * ) desc limit 1
SELECT template_id from documents group by template_id having count ( * ) > 1
SELECT documents.template_id from documents group by template_id having count ( * ) > 1
SELECT template_id from templates except select template_id from documents
SELECT template_id from templates except select template_id from documents
SELECT count ( * ) from templates
SELECT count ( * ) from templates
SELECT template_id , version_number , template_type_code from templates
SELECT template_id , version_number , template_type_code from templates
SELECT distinct template_type_code from templates
SELECT distinct template_type_code from templates
SELECT template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'
SELECT template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'
SELECT count ( * ) from templates where template_type_code = 'CV';
SELECT count ( * ) from templates where template_type_code = 'CV';
SELECT version_number , template_type_code from templates where version_number > 5
SELECT version_number , template_type_code from templates where version_number > 5
SELECT template_type_code , count ( * ) from templates group by template_type_code;
SELECT template_type_code , count ( * ) from templates group by template_type_code
SELECT template_type_code from templates group by template_type_code order by count ( * ) desc limit 1
SELECT template_type_code from templates group by template_type_code order by count ( * ) desc limit 1
SELECT template_type_code from templates group by template_type_code having count ( * ) < 3
SELECT template_type_code from templates group by template_type_code having count ( * ) < 3
SELECT template_type_code , min ( version_number ) from templates group by template_type_code order by min ( version_number ) asc limit 1;
SELECT template_type_code , min ( version_number ) from templates group by template_type_code order by min ( version_number ) asc limit 1 ;
SELECT templates.template_type_code from documents join templates on documents.template_id = templates.template_id where documents.document_name = 'Data base'
SELECT templates.template_type_code from documents join templates on documents.template_id = templates.template_id where documents.document_name = 'Data Base';
SELECT documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'BK'
SELECT documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'BK'
SELECT template_type_code , count ( * ) from documents join templates on documents.template_id = templates.template_id group by templates.template_type_code
SELECT template_type_code , count ( * ) from documents join templates on documents.template_id = templates.template_id group by templates.template_type_code
SELECT templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by templates.template_type_code order by count ( * ) desc limit 1
SELECT templates.template_type_code from documents join templates on documents.template_id = templates.template_id group by templates.template_type_code order by count ( * ) desc limit 1
SELECT template_type_code from templates except select template_type_code from templates join documents on templates.template_id = documents.template_id
SELECT template_type_code from templates except select template_type_code from documents
SELECT template_type_code , template_type_description from ref_template_types
SELECT template_type_code , template_type_description from ref_template_types
SELECT template_type_description from ref_template_types where template_type_code = 'AD'
SELECT template_type_description from ref_template_types where template_type_code = 'AD'
SELECT template_type_code from ref_template_types where template_type_description = 'Book';
SELECT template_type_code from ref_template_types where template_type_description = 'Book'
SELECT distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code join documents on templates.template_id = documents.template_id
SELECT distinct templates.template_details from documents join templates on documents.template_id = templates.template_id
SELECT templates.template_id from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code where ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id from templates join documents on templates.template_id = documents.template_id where documents.document_description = 'Presentation'
SELECT count ( * ) from paragraphs
SELECT count ( * ) from paragraphs
SELECT count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Summer Show';
SELECT count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Summer Show';
SELECT other_details from paragraphs where paragraph_text = 'Korea';
SELECT paragraph_text from paragraphs where paragraph_text like '%Korea %';
SELECT paragraph_id , paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Welcome to NY';
SELECT paragraphs.paragraph_id , paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Welcome to NY';
SELECT paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Customer reviews';
SELECT document_id , count ( * ) from paragraphs group by document_id order by document_id asc
SELECT document_id , count ( * ) from paragraphs group by document_id order by document_id asc
SELECT documents.document_id , documents.document_name , count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id
SELECT documents.document_id , documents.document_name , count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id;
SELECT document_id from paragraphs group by document_id having count ( * ) >= 2
SELECT documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) >= 2
SELECT documents.document_id , documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * ) desc limit 1
SELECT documents.document_id , documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count ( * ) desc limit 1
SELECT document_id from paragraphs group by document_id order by count ( * ) asc limit 1
SELECT document_id from paragraphs group by document_id order by count ( * ) asc limit 1
SELECT document_id from paragraphs group by document_id having count ( * ) between 1 and 2
SELECT documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) between 1 and 2
SELECT document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland'
SELECT documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text like '%Brazil%' intersect select document_id from paragraphs where paragraph_text like '%Ireland%';
SELECT count ( * ) from teacher
SELECT count ( * ) from teacher
SELECT name from teacher order by age asc
SELECT name from teacher order by age asc
SELECT age , hometown from teacher
SELECT age , hometown from teacher
SELECT name from teacher where hometown != 'Little Lever Urban District';
SELECT name from teacher where hometown != 'Little Lever Urban District'
SELECT name from teacher where age = 32 or age = 33
SELECT name from teacher where age = 32 or age = 33
SELECT hometown from teacher order by age asc limit 1;
SELECT hometown from teacher order by age asc limit 1
SELECT hometown , count ( * ) from teacher group by hometown
SELECT hometown , count ( * ) from teacher group by hometown ;
SELECT hometown from teacher group by hometown order by count ( * ) desc limit 1
SELECT hometown from teacher group by hometown order by count ( * ) desc limit 1
SELECT hometown from teacher group by hometown having count ( * ) >= 2 ;
SELECT hometown from teacher group by hometown having count ( * ) >= 2
SELECT teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id
SELECT teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id order by teacher.name asc
SELECT teacher.name , course.course from course_arrange join course on course_arrange.course_id = course.course_id join teacher on course_arrange.teacher_id = teacher.teacher_id order by teacher.name asc
SELECT teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math'
SELECT teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math'
SELECT teacher.name , count ( * ) from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by course_arrange.teacher_id
SELECT teacher.name , count ( * ) from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.name
SELECT teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by course_arrange.teacher_id having count ( * ) >= 2 ;
SELECT teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by course_arrange.teacher_id having count ( * ) >= 2
SELECT name from teacher where teacher_id not in ( select teacher_id from course_arrange )
SELECT name from teacher where teacher_id not in ( select teacher_id from course_arrange )
SELECT count ( * ) from visitor where age < 30
SELECT name from visitor where level_of_membership > 4 order by level_of_membership desc
SELECT avg ( age ) from visitor where level_of_membership <= 4
SELECT name , level_of_membership from visitor where level_of_membership > 4 order by age desc
SELECT museum_id , name from museum order by num_of_staff desc limit 1
SELECT avg ( num_of_staff ) from museum where open_year < 2009
SELECT open_year , num_of_staff from museum where name = 'Plaza Museum'
SELECT name from museum where num_of_staff > ( select min ( num_of_staff ) from museum where open_year > 2010 );
SELECT visitor.id , visitor.name , visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visit.visitor_id having count ( * ) > 1
SELECT visitor.id , visitor.name , visitor.level_of_membership from visitor join visit on visitor.id = visit.visitor_id group by visitor.id order by sum ( total_spent ) desc limit 1
SELECT visit.museum_id , museum.name from visit join museum on visit.museum_id = museum.museum_id group by visit.museum_id order by count ( * ) desc limit 1
SELECT name from museum except select museum.name from visit join museum on visit.museum_id = museum.museum_id
SELECT visitor.name , visitor.age from visitor join visit on visitor.id = visit.visitor_id order by visit.num_of_ticket desc limit 1
SELECT avg ( num_of_ticket ) , max ( num_of_ticket ) from visit
SELECT sum ( num_of_ticket ) from visit join visitor on visit.visitor_id = visitor.id where visitor.level_of_membership = 1
SELECT visitor.name from visitor join visit on visitor.id = visit.visitor_id join museum on visit.museum_id = museum.museum_id where museum.open_year < 2009 intersect select visitor.name from visitor join visit on visitor.id = visit.visitor_id join museum on visit.museum_id = museum.museum_id where museum.open_year > 2011
SELECT count ( * ) from visitor where id not in ( select visit.visitor_id from visit join museum on visit.museum_id = museum.museum_id where museum.open_year > 2010 )
SELECT count ( * ) from museum where open_year > 2013 or open_year < 2008
SELECT count ( * ) from players
SELECT count ( * ) from players
SELECT count ( * ) from matches
SELECT count ( * ) from matches
SELECT first_name , birth_date from players where country_code = 'USA'
SELECT first_name , birth_date from players where country_code = 'USA'
SELECT avg ( winner_age ) , avg ( loser_age ) from matches
SELECT avg ( winner_age ) , avg ( loser_age ) from matches
SELECT avg ( winner_rank ) from matches where winner_rank != 0
SELECT avg ( winner_rank ) from matches where winner_rank != 'N/A';
SELECT max ( loser_rank ) from matches
SELECT loser_rank from matches order by loser_rank asc limit 1
SELECT count ( distinct country_code ) from players
SELECT count ( distinct country_code ) from players
SELECT count ( distinct loser_name ) from matches
SELECT count ( distinct loser_name ) from matches
SELECT tourney_name from matches group by tourney_name having count ( * ) > 10
SELECT tourney_name from matches group by tourney_name having count ( * ) > 10
SELECT players.first_name , players.last_name from players join matches on players.player_id = matches.winner_id where matches.year = 2013 intersect select players.first_name , players.last_name from players join matches on players.player_id = matches.winner_id where matches.year = 2016
SELECT players.first_name , players.last_name from players join matches on players.player_id = matches.winner_id where matches.year = 2013 intersect select players.first_name , players.last_name from players join matches on players.player_id = matches.winner_id where matches.year = 2016;
SELECT count ( * ) from matches where year = 2013 or year = 2016
SELECT count ( * ) from matches where year = 2013 or year = 2016
SELECT players.country_code , players.first_name from players join matches on matches.winner_id = players.player_id where matches.tourney_name = 'WTA Championships' intersect select players.country_code , players.first_name from players join matches on matches.winner_id = players.player_id where matches.tourney_name = 'Australian Open';
SELECT players.first_name , players.country_code from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'WTA Championships' intersect select players.first_name , players.country_code from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'Australian Open';
SELECT first_name , country_code from players order by birth_date asc limit 1
SELECT players.first_name , players.country_code from players join rankings on players.player_id = rankings.player_id order by rankings.ranking_date asc limit 1
SELECT first_name , last_name from players order by birth_date asc
SELECT first_name , last_name from players order by birth_date asc
SELECT first_name , last_name from players where hand = 'L' order by birth_date asc
SELECT first_name , last_name from players where hand = 'L' order by birth_date asc
SELECT players.first_name , players.country_code from players join rankings on players.player_id = rankings.player_id where rankings.tours = ( select tours from rankings group by tours order by count ( * ) desc limit 1 ) limit 1;
SELECT players.first_name , players.country_code from players join rankings on players.player_id = rankings.player_id where rankings.tours = ( select max ( tours ) from rankings );
SELECT year from matches group by year order by count ( * ) desc limit 1
SELECT year from matches group by year order by count ( * ) desc limit 1;
SELECT winner_name , winner_rank_points from matches group by winner_id order by count ( * ) desc limit 1 ;
SELECT players.first_name , players.last_name , matches.winner_name , rankings.ranking_points from players join rankings on players.player_id = rankings.player_id join matches on players.player_id = matches.winner_id group by players.player_id order by count ( * ) desc limit 1
SELECT players.first_name , players.last_name from players join matches on matches.winner_id = players.player_id where matches.tourney_name = 'Australian Open' order by matches.winner_rank_points desc limit 1
SELECT winner_name from matches where tourney_name = 'Australian Open' join players on matches.winner_id = players.player_id join rankings on players.player_id = rankings.player_id order by rankings.ranking_points desc limit 1
SELECT winner_name , loser_name from matches order by minutes desc limit 1
SELECT winner_name , loser_name from matches order by minutes desc limit 1
SELECT avg ( rankings.ranking ) , players.first_name from rankings join players on rankings.player_id = players.player_id group by players.first_name
SELECT players.first_name , avg ( rankings.ranking ) from players join rankings on players.player_id = rankings.player_id group by players.player_id
SELECT sum ( ranking_points ) , players.first_name from players join rankings on players.player_id = rankings.player_id group by players.player_id;
SELECT players.first_name , sum ( rankings.ranking_points ) from players join rankings on players.player_id = rankings.player_id group by players.player_id
SELECT count ( * ) , country_code from players group by country_code order by count ( * ) desc;
SELECT country_code , count ( * ) from players group by country_code ;
SELECT country_code from players group by country_code order by count ( * ) desc limit 1
SELECT country_code from players group by country_code order by count ( * ) desc limit 1
SELECT country_code from players group by country_code having count ( * ) > 50
SELECT country_code from players group by country_code having count ( * ) > 50
SELECT ranking_date , sum ( tours ) from rankings group by ranking_date
SELECT ranking_date , sum ( tours ) from rankings group by ranking_date
SELECT year , count ( * ) from matches group by year
SELECT year , count ( * ) from matches group by year
SELECT winner_name , winner_rank from matches order by winner_age asc limit 3
SELECT winner_name , winner_rank from matches order by winner_age asc limit 3;
SELECT count ( * ) from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'WTA Championships' and players.hand = 'L';
SELECT count ( * ) from players join matches on players.player_id = matches.winner_id where matches.tourney_name = 'WTA Championships' and players.hand = 'L';
SELECT players.first_name , players.country_code , players.birth_date from players join matches on players.player_id = matches.winner_id join rankings on players.player_id = rankings.player_id order by rankings.ranking_points desc limit 1
SELECT players.first_name , players.country_code , players.birth_date from players join matches on players.player_id = matches.winner_id order by matches.winner_rank_points desc limit 1
SELECT hand , count ( * ) from players group by hand
SELECT hand , count ( * ) from players group by hand;
SELECT count ( * ) from ship where disposition_of_ship = 'Captured';
SELECT name , tonnage from ship order by name desc
SELECT name , date , result from battle
SELECT max ( killed ) , min ( killed ) from death
SELECT avg ( injured ) from death
SELECT death.note , sum ( death.killed ) , sum ( death.injured ) from ship join death on ship.id = death.caused_by_ship_id where ship.tonnage = 't' group by death.note;
SELECT name , result from battle where bulgarian_commander != 'Boril'
SELECT battle.id , battle.name from battle join ship on battle.id = ship.lost_in_battle where ship.ship_type = 'Brig' group by battle.id having count ( * ) >= 1
SELECT battle.id , battle.name from battle join death on battle.id = death.caused_by_ship_id group by battle.id having sum ( death.killed ) > 10
SELECT ship.name , ship.id from ship join death on ship.id = death.caused_by_ship_id group by ship.id order by sum ( death.injured ) desc limit 1
SELECT distinct name from battle where bulgarian_commander = 'Kaloyan' and latin_commander = 'Baldwin I';
SELECT count ( distinct result ) from battle
SELECT count ( * ) from battle where id not in ( select lost_in_battle from ship where tonnage = 225 )
SELECT battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'Lettice' intersect select battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'HMS Atalanta';
SELECT name , result , bulgarian_commander from battle where id not in ( select lost_in_battle from ship where location = 'English Channel' )
SELECT note from death where note like '%East%';
SELECT line_1 , line_2 from addresses
SELECT line_1 , line_2 from addresses
SELECT count ( * ) from courses
SELECT count ( * ) from courses
SELECT course_description from courses where course_name = 'Math';
SELECT courses.course_description from courses join sections on courses.course_id = sections.course_id where sections.section_name = 'MATH'
SELECT zip_postcode from addresses where city = 'Port Chelsea'
SELECT zip_postcode from addresses where city = 'Port Chelsea'
SELECT departments.department_name , degree_programs.department_id from degree_programs join departments on degree_programs.department_id = departments.department_id group by degree_programs.department_id order by count ( * ) desc limit 1
SELECT departments.department_name , degree_programs.department_id from departments join degree_programs on departments.department_id = degree_programs.department_id group by degree_programs.department_id order by count ( * ) desc limit 1
SELECT count ( distinct department_id ) from degree_programs
SELECT count ( distinct department_id ) from degree_programs
SELECT count ( distinct degree_summary_name ) from degree_programs
SELECT count ( distinct degree_summary_name ) from degree_programs
SELECT count ( * ) from degree_programs join departments on degree_programs.department_id = departments.department_id where departments.department_name = 'Engineering';
SELECT count ( * ) from departments join degree_programs on departments.department_id = degree_programs.department_id where departments.department_name = 'Engineering';
SELECT section_name , section_description from sections
SELECT section_name , section_description from sections
SELECT courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) <= 2
SELECT courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) < 2
SELECT section_name from sections order by section_name desc
SELECT section_name from sections order by section_name desc
SELECT semesters.semester_name , student_enrolment.semester_id from student_enrolment join semesters on student_enrolment.semester_id = semesters.semester_id group by student_enrolment.semester_id order by count ( * ) desc limit 1
SELECT semesters.semester_name , student_enrolment.semester_id from student_enrolment join semesters on student_enrolment.semester_id = semesters.semester_id group by student_enrolment.semester_id order by count ( * ) desc limit 1
SELECT department_description from departments where department_name like '%computer%';
SELECT department_description from departments where department_name like '%computer%';
SELECT students.first_name , students.middle_name , students.last_name , students.student_id from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id , student_enrolment.semester_id having count ( * ) = 2
SELECT students.first_name , students.middle_name , students.last_name , student_enrolment.student_id from student_enrolment join students on student_enrolment.student_id = students.student_id group by student_enrolment.student_id having count ( * ) = 2
SELECT students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'Bachelor'
SELECT students.first_name , students.middle_name , students.last_name from student_enrolment join students on student_enrolment.student_id = students.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'Bachelors';
SELECT degree_programs.degree_summary_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by student_enrolment.degree_program_id order by count ( * ) desc limit 1
SELECT degree_programs.degree_summary_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by degree_programs.degree_summary_name order by count ( * ) desc limit 1
SELECT degree_programs.degree_program_id , degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by student_enrolment.degree_program_id order by count ( * ) desc limit 1
SELECT degree_program_id , degree_summary_name from degree_programs group by degree_program_id order by count ( * ) desc limit 1
SELECT student_enrolment.student_id , students.first_name , students.middle_name , students.last_name , count ( * ) from student_enrolment join students on student_enrolment.student_id = students.student_id group by student_enrolment.student_id order by count ( * ) desc limit 1
SELECT students.first_name , students.middle_name , students.last_name , students.student_id , count ( * ) from students join student_enrolment on students.student_id = student_enrolment.student_id group by students.student_id order by count ( * ) desc limit 1
SELECT semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )
SELECT semester_name from semesters except select semesters.semester_name from semesters join student_enrolment on semesters.semester_id = student_enrolment.semester_id
SELECT distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id
SELECT courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id
SELECT courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by student_enrolment_courses.course_id order by count ( * ) desc limit 1 ;
SELECT courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id group by student_enrolment_courses.course_id order by count ( * ) desc limit 1
SELECT distinct students.first_name , students.middle_name , students.last_name from students join addresses on students.current_address_id = addresses.address_id where addresses.state_province_county = 'North Carolina' except select students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id
SELECT distinct students.last_name from students join addresses on students.permanent_address_id = addresses.address_id where addresses.state_province_county = 'North Carolina' except select distinct students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id
SELECT transcripts.transcript_date , transcripts.transcript_id from transcripts join transcript_contents on transcripts.transcript_id = transcript_contents.transcript_id group by transcripts.transcript_id having count ( * ) >= 2
SELECT transcripts.transcript_date , transcript_contents.transcript_id from transcripts join transcript_contents on transcripts.transcript_id = transcript_contents.transcript_id group by transcripts.transcript_date , transcript_contents.transcript_id having count ( * ) >= 2
SELECT cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'
SELECT cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'
SELECT first_name , middle_name , last_name from students order by date_first_registered asc limit 1;
SELECT first_name , middle_name , last_name from students order by date_first_registered asc limit 1;
SELECT students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id order by student_enrolment.date_left asc limit 1
SELECT students.first_name , students.middle_name , students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id order by student_enrolment.date_first_graduated asc limit 1
SELECT first_name from students where permanent_address_id != current_address_id
SELECT first_name from students where permanent_address_id != current_address_id
SELECT addresses.address_id , addresses.line_1 , addresses.line_2 , addresses.line_3 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1
SELECT addresses.address_id , addresses.line_1 , addresses.line_2 from addresses join students on addresses.address_id = students.permanent_address_id group by addresses.address_id order by count ( * ) desc limit 1
SELECT avg ( transcript_date ) from transcripts
SELECT avg ( transcript_date ) from transcripts
SELECT transcripts.transcript_date , transcripts.other_details from transcripts order by transcripts.transcript_date asc limit 1
SELECT min ( transcript_contents.transcript_date ) , transcripts.other_details from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id
SELECT count ( * ) from transcripts
SELECT count ( * ) from transcripts
SELECT transcript_date from transcripts order by transcript_date desc limit 1;
SELECT transcript_date from transcripts order by transcript_date desc limit 1
SELECT student_course_id , count ( * ) from transcript_contents group by student_course_id order by count ( * ) desc limit 1
SELECT student_enrolment_courses.course_id , count ( * ) from student_enrolment_courses join transcript_contents on student_enrolment_courses.student_course_id = transcript_contents.student_course_id group by student_enrolment_courses.course_id order by count ( * ) desc limit 1
SELECT transcript_contents.transcript_id , transcripts.transcript_date from transcript_contents join transcripts on transcript_contents.transcript_id = transcripts.transcript_id group by transcript_contents.transcript_id order by count ( * ) asc limit 1 , transcripts.transcript_date
SELECT transcripts.transcript_date , transcripts.transcript_id from transcripts join transcript_contents on transcripts.transcript_id = transcript_contents.transcript_id group by transcripts.transcript_id order by count ( * ) desc limit 1
SELECT semester_id from student_enrolment where degree_program_id = 1 intersect select semester_id from student_enrolment where degree_program_id = 2
SELECT semester_id from student_enrolment where degree_program_id = 2 intersect select semester_id from student_enrolment where degree_program_id = 3
SELECT count ( distinct current_address_id ) from students
SELECT distinct addresses.line_1 from addresses join students on students.permanent_address_id = addresses.address_id
SELECT * from students order by first_name desc , last_name desc
SELECT other_student_details from students order by first_name desc , last_name desc
SELECT section_description from sections where section_name = 'h'
SELECT section_description from sections where section_name = 'h'
SELECT students.first_name from students join addresses on students.permanent_address_id = addresses.address_id where addresses.country = 'Haiti' or students.cell_mobile_number = '09700166582'
SELECT students.first_name from students join addresses on students.permanent_address_id = addresses.address_id where addresses.country = 'Haiti' union select first_name from students where cell_mobile_number = '09700166582';
SELECT title from cartoon order by title asc
SELECT title from cartoon order by title asc
SELECT title from cartoon where directed_by = 'Ben Jones'
SELECT title from cartoon where directed_by = 'Ben Jones'
SELECT count ( * ) from cartoon where written_by = 'Joseph Kuhr'
SELECT count ( * ) from cartoon where written_by = 'Joseph Kuhr';
SELECT title , directed_by from cartoon order by original_air_date asc
SELECT title , directed_by from cartoon order by original_air_date asc
SELECT title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti';
SELECT title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti'
SELECT country , count ( * ) from tv_channel group by country order by count ( * ) desc limit 1
SELECT country , count ( * ) from tv_channel group by country order by count ( * ) desc limit 1
SELECT count ( distinct series_name ) , count ( distinct content ) from tv_channel
SELECT count ( distinct series_name ) , count ( distinct content ) from tv_channel
SELECT content from tv_channel where series_name = 'Sky Radio'
SELECT content from tv_channel where series_name = 'Sky Radio';
SELECT package_option from tv_channel where series_name = 'Sky Radio'
SELECT package_option from tv_channel where series_name = 'Sky Radio'
SELECT count ( * ) from tv_channel where language = 'English';
SELECT count ( * ) from tv_channel where language = 'English';
SELECT language , count ( * ) from tv_channel group by language order by count ( * ) asc limit 1
SELECT language , count ( * ) from tv_channel group by language order by count ( * ) asc limit 1
SELECT language , count ( * ) from tv_channel group by language ;
SELECT language , count ( * ) from tv_channel group by language;
SELECT tv_channel.series_name from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.title = 'The Rise of the Blue Beetle!';
SELECT tv_channel.series_name from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.title = 'The Rise of the Blue Beetle';
SELECT cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = 'Sky Radio'
SELECT cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = 'Sky Radio'
SELECT episode from tv_series order by rating asc;
SELECT episode from tv_series order by rating asc;
SELECT episode , rating from tv_series order by rating desc limit 3
SELECT episode , rating from tv_series order by rating desc limit 3
SELECT max ( share ) , min ( share ) from tv_series
SELECT max ( share ) , min ( share ) from tv_series
SELECT tv_series.air_date from tv_series join cartoon on tv_series.channel = cartoon.channel where cartoon.title = 'A Love of a Lifetime';
SELECT cartoon.original_air_date from cartoon join tv_series on cartoon.channel = tv_series.channel where cartoon.title = 'A Love of a Lifetime';
SELECT weekly_rank from tv_series where episode = 'A Love of a Lifetime';
SELECT tv_series.weekly_rank from tv_series join cartoon on tv_series.channel = cartoon.channel where cartoon.title = 'A Love of a Lifetime';
SELECT tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = 'A Love of a Lifetime';
SELECT title from cartoon where title = 'A Love of a Lifetime';
SELECT tv_series.episode from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_channel.series_name = 'Sky Radio';
SELECT episode from tv_series where id in ( select channel from tv_channel where series_name = 'Sky Radio' )
SELECT directed_by , count ( * ) from cartoon group by directed_by;
SELECT count ( * ) , directed_by from cartoon group by directed_by;
SELECT production_code , channel from cartoon order by original_air_date desc limit 1
SELECT production_code , channel from cartoon order by original_air_date desc limit 1
SELECT hight_definition_tv , series_name from tv_channel where hight_definition_tv = 'Yes'
SELECT tv_channel.hight_definition_tv , tv_channel.package_option , tv_channel.series_name from tv_channel where hight_definition_tv = 'Yes';
SELECT distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey';
SELECT distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey';
SELECT country from tv_channel except select tv_channel.country from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.written_by = 'Todd Casey';
SELECT distinct country from tv_channel except select tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey';
SELECT tv_channel.series_name , tv_channel.country from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.directed_by = 'Ben Jones' intersect select tv_channel.series_name , tv_channel.country from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.directed_by = 'Michael Chang';
SELECT tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Ben Jones' intersect select tv_channel.series_name , tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Michael Chang';
SELECT pixel_aspect_ratio_par , country from tv_channel where language != 'english'
SELECT pixel_aspect_ratio_par , country from tv_channel where language != 'english'
SELECT id from tv_channel where country in ( select country from tv_channel group by country having count ( * ) > 2 )
SELECT id from tv_channel group by id having count ( * ) > 2
SELECT id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones';
SELECT id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'
SELECT package_option from tv_channel except select tv_channel.package_option from cartoon join tv_channel on cartoon.channel = tv_channel.id where cartoon.directed_by = 'Ben Jones'
SELECT package_option from tv_channel except select tv_channel.package_option from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'Ben Jones'
SELECT count ( * ) from poker_player
SELECT count ( * ) from poker_player
SELECT earnings from poker_player order by earnings desc
SELECT earnings from poker_player order by earnings desc
SELECT final_table_made , best_finish from poker_player
SELECT final_table_made , best_finish from poker_player
SELECT avg ( earnings ) from poker_player
SELECT avg ( earnings ) from poker_player
SELECT money_rank from poker_player order by earnings desc limit 1
SELECT money_rank from poker_player order by earnings desc limit 1
SELECT max ( final_table_made ) from poker_player where earnings < 200000
SELECT max ( final_table_made ) from poker_player where earnings < 200000
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id
SELECT distinct people.name from people join poker_player on people.people_id = poker_player.people_id where poker_player.earnings > 300000
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id where poker_player.earnings > 300000
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.final_table_made asc
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.final_table_made asc
SELECT people.birth_date from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings asc limit 1
SELECT people.birth_date from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings asc limit 1
SELECT poker_player.money_rank from people join poker_player on people.people_id = poker_player.people_id order by people.height desc limit 1
SELECT poker_player.money_rank from people join poker_player on people.people_id = poker_player.people_id order by people.height desc limit 1
SELECT avg ( poker_player.earnings ) from people join poker_player on people.people_id = poker_player.people_id where people.height > 200
SELECT avg ( poker_player.earnings ) from people join poker_player on people.people_id = poker_player.people_id where people.height > 200
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings desc
SELECT people.name from people join poker_player on people.people_id = poker_player.people_id order by poker_player.earnings desc
SELECT distinct nationality , count ( * ) from people group by nationality;
SELECT count ( * ) , nationality from people group by nationality ;
SELECT nationality from people group by nationality order by count ( * ) desc limit 1
SELECT nationality from people group by nationality order by count ( * ) desc limit 1
SELECT nationality from people group by nationality having count ( * ) >= 2
SELECT nationality from people group by nationality having count ( * ) >= 2
SELECT name , birth_date from people order by name asc
SELECT name , birth_date from people order by name asc
SELECT name from people where nationality != 'Russia'
SELECT distinct name from people where nationality != 'Russia'
SELECT name from people where people_id not in ( select people_id from poker_player )
SELECT name from people where people_id not in ( select people_id from poker_player );
SELECT count ( distinct nationality ) from people
SELECT count ( distinct nationality ) from people
SELECT count ( * ) from area_code_state
SELECT contestants.contestant_number , contestants.contestant_name from contestants order by contestants.contestant_name desc
SELECT distinct vote_id , phone_number , state from votes
SELECT max ( area_code ) , min ( area_code ) from area_code_state
SELECT max ( created ) from votes where state = 'CA'
SELECT contestant_name from contestants where contestant_name != 'Jessie Alloway'
SELECT distinct state , created from votes
SELECT contestants.contestant_name , contestants.contestant_number from contestants join votes on contestants.contestant_number = votes.contestant_number group by contestants.contestant_number having count ( * ) >= 2
SELECT contestants.contestant_number , contestants.contestant_name from contestants join votes on contestants.contestant_number = votes.contestant_number group by contestants.contestant_number order by count ( * ) asc limit 1
SELECT count ( * ) from votes where state = 'NY' or state = 'CA';
SELECT count ( * ) from contestants where contestant_number not in ( select contestant_number from votes )
SELECT area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state group by area_code_state.area_code order by count ( * ) desc limit 1
SELECT distinct votes.created , votes.state , votes.phone_number from contestants join votes on contestants.contestant_number = votes.contestant_number where contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.state from votes join area_code_state on votes.state = area_code_state.state join contestants on votes.contestant_number = contestants.contestant_number where area_code_state.area_code in ( select area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = 'Tabatha Gehling' intersect select area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = 'Kelly Clauss' ) group by votes.state having count ( * ) >= 2;
SELECT contestant_name from contestants where contestant_name like '%Al%';
SELECT name from country where indepyear > 1950
SELECT name from country where indepyear > 1950
SELECT count ( * ) from country where governmentform like '%Republic%';
SELECT count ( * ) from country where governmentform like '%Republic%';
SELECT sum ( surfacearea ) from country where region = 'Caribbean';
SELECT sum ( surfacearea ) from country where continent = 'Caribbean'
SELECT continent from country where name = 'Anguilla'
SELECT continent from country where name = 'Anguilla'
SELECT country.region from city join country on city.countrycode = country.code where city.name = 'Kabul';
SELECT region from country join city on country.capital = city.id where city.name = 'Kabul';
SELECT language from countrylanguage where countrycode = 'ABW' and isofficial = 'T' order by percentage desc limit 1;
SELECT language from countrylanguage where countrycode in ( select code from country where name = 'Aruba' ) and isofficial = 'T'
SELECT population , lifeexpectancy from country where name = 'Brazil'
SELECT population , lifeexpectancy from country where name = 'Brazil'
SELECT region , population from country where name = 'Angola'
SELECT region , population from country where name = 'Angola'
SELECT avg ( lifeexpectancy ) from country where region = 'Central Africa'
SELECT avg ( lifeexpectancy ) from country where region = 'Central Africa'
SELECT name from country where continent = 'Asia' order by lifeexpectancy asc limit 1
SELECT name from country where continent = 'Asia' order by lifeexpectancy asc limit 1
SELECT sum ( population ) , max ( gnp ) from country where continent = 'Asia'
SELECT sum ( population ) , max ( gnp ) from country where continent = 'Asia'
SELECT avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform like '%Republic%';
SELECT avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform like '%Republic%';
SELECT sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'
SELECT sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'
SELECT sum ( population ) from city where district = 'Gelderland'
SELECT sum ( population ) from city where district = 'Gelderland'
SELECT avg ( gnp ) , sum ( population ) from country where governmentform = 'US Trust Territory';
SELECT avg ( gnp ) , sum ( population ) from country where name like '%U.S.%';
SELECT count ( distinct language ) from countrylanguage
SELECT count ( distinct language ) from countrylanguage
SELECT count ( distinct governmentform ) from country where region = 'Africa'
SELECT count ( distinct governmentform ) from country where continent = 'Africa';
SELECT count ( * ) from countrylanguage where countrycode = 'ABW';
SELECT count ( * ) from countrylanguage where countrycode = 'ABW';
SELECT count ( * ) from countrylanguage where countrycode = 'AFG' and isofficial = 'T';
SELECT count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.name = 'Afghanistan' and isofficial = 'T'
SELECT country.name from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode order by count ( * ) desc limit 1
SELECT country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by countrylanguage.countrycode order by count ( * ) desc limit 1
SELECT continent from countrylanguage join country on countrylanguage.countrycode = country.code group by country.continent order by count ( distinct countrylanguage.language ) desc limit 1
SELECT continent from countrylanguage join country on countrylanguage.countrycode = country.code group by country.continent order by count ( distinct countrylanguage.language ) desc limit 1
SELECT count ( * ) from countrylanguage where language = 'english' and countrycode in ( select countrycode from countrylanguage where language = 'dutch' )
SELECT count ( * ) from countrylanguage where language = 'english' intersect select count ( * ) from countrylanguage where language = 'dutch';
SELECT country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'english' intersect select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'french';
SELECT name from country where code in ( select countrycode from countrylanguage where language = 'english' intersect select countrycode from countrylanguage where language = 'french' );
SELECT name from countrylanguage join country on countrylanguage.countrycode = country.code where language = 'english' intersect select name from countrylanguage join country on countrylanguage.countrycode = country.code where language = 'french'
SELECT country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'english' intersect select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'french'
SELECT count ( * ) from countrylanguage where language = 'Chinese' and isofficial = 'T'
SELECT count ( * ) from countrylanguage where language = 'Chinese' and isofficial = 'T'
SELECT region from countrylanguage join country on countrylanguage.countrycode = country.code where language = 'English' or language = 'Dutch'
SELECT distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'Dutch' or countrylanguage.language = 'English'
SELECT distinct countryname from countrylanguage where language = 'English' and isofficial = 'T' intersect select distinct countryname from countrylanguage where language = 'Dutch' and isofficial = 'T';
SELECT country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'English' and countrylanguage.isofficial = 'T' union select country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'Dutch' and countrylanguage.isofficial = 'T';
SELECT language from countrylanguage join country on countrylanguage.countrycode = country.code where continent = 'Asia' group by language order by sum ( population ) desc limit 1 ;
SELECT language from countrylanguage join country on countrylanguage.countrycode = country.code where country.continent = 'Asia' group by countrylanguage.language order by count ( * ) desc limit 1
SELECT language from countrylanguage join country on countrylanguage.countrycode = country.code where governmentform = 'Republic' group by language having count ( * ) = 1;
SELECT language from countrylanguage join country on countrylanguage.countrycode = country.code where governmentform = 'Republic' group by language having count ( * ) = 1
SELECT city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' order by city.population desc limit 1;
SELECT city . name from city join countrylanguage on city . countrycode = countrylanguage . countrycode where countrylanguage . language = 'english' order by city . population desc limit 1
SELECT name , population , lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1
SELECT name , population , lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1
SELECT avg ( lifeexpectancy ) from country where code not in ( select countrycode from countrylanguage where language = 'english' and isofficial = 'T' )
SELECT avg ( lifeexpectancy ) from country where code not in ( select countrycode from countrylanguage where language = 'english' and isofficial = 'T' )
SELECT sum ( population ) from country where code not in ( select countrycode from countrylanguage where language = 'english' )
SELECT sum ( population ) from country where code not in ( select countrycode from countrylanguage where language = 'english' )
SELECT countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix' and countrylanguage.isofficial = 'T';
SELECT countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix' and countrylanguage.isofficial = 'T'
SELECT count ( distinct language ) from countrylanguage join country on countrylanguage.countrycode = country.code where indepyear < 1930
SELECT count ( distinct language ) from countrylanguage join country on countrylanguage.countrycode = country.code where indepyear < 1930 and isofficial = 'T';
SELECT name from country where surfacearea > ( select max ( surfacearea ) from country where continent = 'Europe' )
SELECT name from country where surfacearea > ( select max ( surfacearea ) from country where continent = 'Europe' );
SELECT name from country where population < ( select min ( population ) from country where continent = 'Asia' ) and continent = 'Africa'
SELECT name from country where continent = 'Africa' and population < ( select min ( population ) from country where continent = 'Asia' );
SELECT name from country where continent = 'Asia' and population > ( select max ( population ) from country where continent = 'Africa' );
SELECT name from country where continent = 'Asia' and population > ( select max ( population ) from country where continent = 'Africa' );
SELECT code from country except select countrycode from countrylanguage where language = 'english';
SELECT countrycode from countrylanguage where language != 'english'
SELECT distinct countrycode from countrylanguage where language != 'english';
SELECT distinct countrycode from countrylanguage where language != 'english'
SELECT code from country except select countrycode from countrylanguage where language = 'English' except select code from country where governmentform = 'Republic';
SELECT code from country except select countrycode from countrylanguage where language = 'English' and isofficial = 'T' except select code from country where governmentform = 'Republic';
SELECT city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'Europe' and countrylanguage.language != 'english' and countrylanguage.isofficial = 'T'
SELECT city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'Europe' and countrylanguage.language = 'english' and countrylanguage.isofficial = 'F'
SELECT distinct city.name from city join country on city.countrycode = country.code join countrylanguage on countrylanguage.countrycode = country.code where country.continent = 'Asia' and countrylanguage.language = 'Chinese' and countrylanguage.isofficial = 'T'
SELECT distinct city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'Asia' and countrylanguage.language = 'Chinese' and countrylanguage.isofficial = 'T'
SELECT name , indepyear , surfacearea from country order by population asc limit 1
SELECT name , indepyear , surfacearea from country order by population asc limit 1
SELECT name , headofstate , population from country order by surfacearea desc limit 1
SELECT name , population , headofstate from country order by surfacearea desc limit 1
SELECT country . name , count ( * ) from countrylanguage join country on countrylanguage . countrycode = country . code group by countrylanguage . countrycode having count ( * ) >= 3 ;
SELECT count ( * ) , country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by countrylanguage.countrycode having count ( * ) > 2;
SELECT count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district;
SELECT count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district ;
SELECT governmentform , sum ( population ) from country group by governmentform having avg ( lifeexpectancy ) > 72 ;
SELECT governmentform , sum ( population ) from country group by governmentform having avg ( lifeexpectancy ) > 72;
SELECT continent , avg ( population ) , sum ( population ) from country group by continent having avg ( lifeexpectancy ) < 72 ;
SELECT continent , sum ( population ) , avg ( lifeexpectancy ) from country group by continent having avg ( lifeexpectancy ) < 72;
SELECT name , surfacearea from country order by surfacearea desc limit 5
SELECT name , surfacearea from country order by surfacearea desc limit 5
SELECT name from country order by population desc limit 3
SELECT name from country order by population desc limit 3;
SELECT name from country order by population asc limit 3
SELECT name from country order by population asc limit 3
SELECT count ( * ) from country where continent = 'Asia'
SELECT count ( * ) from country where continent = 'Asia';
SELECT name from country where continent = 'Europe' and population > 80000
SELECT name from country where continent = 'Europe' and population = 80000
SELECT sum ( population ) , avg ( surfacearea ) from country where continent = 'North America' and surfacearea > 3000;
SELECT sum ( population ) , avg ( surfacearea ) from country where continent = 'North America' and surfacearea > 3000;
SELECT name from city where population between 160000 and 900000
SELECT name from city where population between 160000 and 900000
SELECT language from countrylanguage where isofficial = 'T' group by language order by count ( * ) desc limit 1
SELECT language from countrylanguage group by language order by count ( * ) desc limit 1;
SELECT country.name , countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 'T' group by country.name order by percentage desc , country.name asc;
SELECT countrycode , language from countrylanguage where ( countrycode , percentage ) in ( select countrycode , max ( percentage ) from countrylanguage group by countrycode );
SELECT count ( * ) from countrylanguage where language = 'spanish' and isofficial = 'T'
SELECT count ( * ) from countrylanguage where language = 'spanish' and isofficial = 'T';
SELECT countrycode from countrylanguage where language = 'spanish' order by percentage desc limit 1;
SELECT countrycode from countrylanguage where language = 'spanish' and isofficial = 'T';
SELECT count ( * ) from conductor
SELECT count ( * ) from conductor
SELECT name from conductor order by age asc
SELECT name from conductor order by age asc
SELECT name from conductor where nationality != 'USA'
SELECT name from conductor where nationality != 'USA'
SELECT record_company from orchestra order by year_of_founded desc
SELECT record_company from orchestra order by year_of_founded desc
SELECT avg ( attendance ) from show
SELECT avg ( attendance ) from show
SELECT max ( share ) , min ( share ) from performance where type != 'Live final';
SELECT max ( share ) , min ( share ) from performance where type != 'Live final'
SELECT count ( distinct nationality ) from conductor
SELECT count ( distinct nationality ) from conductor
SELECT name from conductor order by year_of_work desc
SELECT name from conductor order by year_of_work desc
SELECT name from conductor order by year_of_work desc limit 1
SELECT name from conductor order by year_of_work desc limit 1
SELECT conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id
SELECT conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count ( * ) > 1
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count ( * ) > 1 ;
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id order by count ( * ) desc limit 1
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name order by count ( * ) desc limit 1
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008
SELECT conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008
SELECT record_company , count ( * ) from orchestra group by record_company;
SELECT count ( * ) , record_company from orchestra group by record_company;
SELECT major_record_format from orchestra group by major_record_format order by count ( * ) asc;
SELECT major_record_format from orchestra group by major_record_format order by count ( * ) asc
SELECT record_company from orchestra group by record_company order by count ( * ) desc limit 1
SELECT record_company from orchestra group by record_company order by count ( * ) desc limit 1
SELECT orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )
SELECT orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )
SELECT record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003
SELECT record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003
SELECT count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD';
SELECT count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD'
SELECT year_of_founded from orchestra where orchestra_id in ( select orchestra_id from performance group by orchestra_id having count ( * ) > 1 )
SELECT orchestra.year_of_founded from orchestra join performance on orchestra.orchestra_id = performance.orchestra_id group by performance.orchestra_id having count ( * ) > 1
SELECT count ( * ) from highschooler
SELECT count ( * ) from highschooler
SELECT name , grade from highschooler
SELECT name , grade from highschooler
SELECT distinct grade from highschooler
SELECT grade from highschooler
SELECT grade from highschooler where name = 'Kyle';
SELECT grade from highschooler where name = 'Kyle'
SELECT name from highschooler where grade = 10
SELECT name from highschooler where grade = 10
SELECT id from highschooler where name = 'Kyla';
SELECT id from highschooler where name = 'Kyla';
SELECT count ( * ) from highschooler where grade = 9 or grade = 10
SELECT count ( * ) from highschooler where grade = 9 or grade = 10
SELECT count ( * ) , grade from highschooler group by grade;
SELECT count ( * ) , grade from highschooler group by grade
SELECT grade from highschooler group by grade order by count ( * ) desc limit 1
SELECT grade from highschooler group by grade order by count ( * ) desc limit 1
SELECT grade from highschooler group by grade having count ( * ) >= 4
SELECT grade from highschooler group by grade having count ( * ) >= 4
SELECT student_id , count ( * ) from friend group by student_id
SELECT student_id , count ( * ) from friend group by student_id order by count ( * ) asc limit 1 ;
SELECT highschooler.name , count ( * ) from friend join highschooler on friend.student_id = highschooler.id group by highschooler.id
SELECT highschooler.name , count ( * ) from friend join highschooler on friend.friend_id = highschooler.id group by highschooler.name;
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id group by friend.student_id order by count ( * ) desc limit 1
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id group by friend.student_id order by count ( * ) desc limit 1
SELECT name from highschooler where id in ( select student_id from friend group by student_id having count ( * ) >= 3 )
SELECT highschooler.name from friend join highschooler on friend.student_id = highschooler.id group by friend.student_id having count ( * ) >= 3
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id where friend.student_id = ( select id from highschooler where name = 'Kyle' )
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id where highschooler.name = 'Kyle';
SELECT count ( * ) from highschooler join friend on highschooler.id = friend.friend_id where highschooler.name = 'Kyle';
SELECT count ( * ) from highschooler join friend on highschooler.id = friend.student_id where highschooler.name = 'Kyle';
SELECT id from highschooler where id not in ( select student_id from friend )
SELECT id from highschooler except select student_id from friend
SELECT name from highschooler where id not in ( select student_id from friend )
SELECT name from highschooler where id not in ( select student_id from friend )
SELECT distinct highschooler.id from friend join likes on friend.friend_id = likes.student_id and friend.student_id != likes.liked_id
SELECT student_id from friend intersect select student_id from likes
SELECT highschooler.name from friend join likes on friend.student_id = likes.student_id join highschooler on likes.liked_id = highschooler.id intersect select highschooler.name from friend join likes on friend.friend_id = likes.student_id join highschooler on likes.liked_id = highschooler.id;
SELECT highschooler.name from highschooler join friend on highschooler.id = friend.student_id join likes on highschooler.id = likes.student_id;
SELECT student_id , count ( * ) from likes group by student_id
SELECT student_id , count ( * ) from likes group by student_id ;
SELECT highschooler.name , count ( * ) from likes join highschooler on highschooler.id = likes.student_id group by likes.student_id;
SELECT highschooler.name , count ( * ) from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id;
SELECT highschooler.name from likes join highschooler on likes.student_id = highschooler.id group by likes.student_id order by count ( * ) desc limit 1
SELECT name from highschooler where id in ( select student_id from likes group by student_id order by count ( * ) desc limit 1 );
SELECT name from highschooler where id in ( select student_id from likes group by student_id having count ( * ) >= 2 )
SELECT highschooler.name from likes join highschooler on likes.liked_id = highschooler.id group by likes.student_id having count ( * ) >= 2 ;
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id where highschooler.grade > 5 group by friend.student_id having count ( * ) >= 2 ;
SELECT highschooler.name from friend join highschooler on friend.friend_id = highschooler.id where highschooler.grade > 5 group by friend.student_id having count ( * ) >= 2 ;
SELECT count ( * ) from likes join highschooler on likes.student_id = highschooler.id where highschooler.name = 'Kyle';
SELECT count ( * ) from likes join highschooler on likes.student_id = highschooler.id where highschooler.name = 'Kyle';
SELECT avg ( grade ) from highschooler where id in ( select student_id from friend )
SELECT avg ( grade ) from highschooler where id in ( select student_id from friend )
SELECT min ( grade ) from highschooler where id not in ( select student_id from friend );
SELECT grade from highschooler where id not in ( select student_id from friend ) order by grade asc limit 1
SELECT state from owners intersect select state from professionals
SELECT state from owners intersect select state from professionals
SELECT avg ( age ) from dogs where dog_id in ( select dog_id from treatments )
SELECT avg ( date_of_birth ) from dogs where dog_id in ( select dog_id from treatments )
SELECT professional_id , last_name , cell_number from professionals where state = 'Indiana' or professional_id in ( select professional_id from treatments group by professional_id having count ( * ) > 2 )
SELECT professional_id , last_name , cell_number from professionals where state = 'Indiana' or professional_id in ( select professional_id from treatments group by professional_id having count ( * ) > 2 )
SELECT name from dogs group by name having sum ( cost_of_treatment ) > 1000
SELECT name from dogs where dog_id not in ( select dogs.dog_id from dogs join treatments on dogs.dog_id = treatments.dog_id group by dogs.dog_id having sum ( cost_of_treatment ) > 1000 )
SELECT first_name from owners intersect select first_name from professionals except select name from dogs
SELECT first_name from owners where first_name not in ( select name from dogs ) union select first_name from professionals where first_name not in ( select name from dogs );
SELECT professional_id , role_code , email_address from professionals where professional_id not in ( select professional_id from treatments )
SELECT professional_id , role_code , email_address from professionals where professional_id not in ( select professional_id from treatments )
SELECT owners.owner_id , owners.first_name , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count ( * ) desc limit 1
SELECT owners.owner_id , owners.first_name , owners.last_name from dogs join owners on dogs.owner_id = owners.owner_id group by owners.owner_id order by count ( * ) desc limit 1
SELECT professionals.professional_id , professionals.role_code , professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2
SELECT professionals.professional_id , professionals.role_code , professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2
SELECT breeds.breed_name from dogs join breeds on dogs.breed_code = breeds.breed_code group by breeds.breed_name order by count ( * ) desc limit 1
SELECT breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_name order by count ( * ) desc limit 1
SELECT owners.owner_id , owners.last_name from treatments join dogs on treatments.dog_id = dogs.dog_id join owners on dogs.owner_id = owners.owner_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1
SELECT owners.owner_id , owners.last_name from treatments join dogs on treatments.dog_id = dogs.dog_id join owners on dogs.owner_id = owners.owner_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1
SELECT treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum ( cost_of_treatment ) asc limit 1 ;
SELECT treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum ( treatments.cost_of_treatment ) asc limit 1
SELECT owners.owner_id , owners.zip_code from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1
SELECT dogs.owner_id , owners.zip_code from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by sum ( dogs.weight ) desc limit 1
SELECT professionals.professional_id , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( distinct treatment_type_code ) >= 2
SELECT professionals.professional_id , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( distinct treatment_type_code ) >= 2
SELECT distinct professionals.first_name , professionals.last_name from professionals join treatments on professionals.professional_id = treatments.professional_id where treatments.cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments )
SELECT distinct professionals.first_name , professionals.last_name from professionals join treatments on professionals.professional_id = treatments.professional_id where treatments.cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments )
SELECT treatments.date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id
SELECT date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id
SELECT treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT distinct owners.first_name , owners.last_name , sizes.size_description from dogs join owners on dogs.owner_id = owners.owner_id join sizes on dogs.size_code = sizes.size_code
SELECT owners.first_name , owners.last_name , sizes.size_description from dogs join owners on dogs.owner_id = owners.owner_id join sizes on dogs.size_code = sizes.size_code
SELECT owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id
SELECT distinct owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id
SELECT dogs.name , treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id join breeds on dogs.breed_code = breeds.breed_code where breeds.breed_name = ( select breed_name from breeds group by breed_name order by count ( * ) asc limit 1 )
SELECT dogs.name , treatments.date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id join breeds on dogs.breed_code = breeds.breed_code where breeds.breed_name = ( select breed_name from breeds group by breed_name order by count ( * ) asc limit 1 )
SELECT owners.first_name , dogs.name from dogs join owners on dogs.owner_id = owners.owner_id where owners.state = 'Virginia'
SELECT owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id where owners.state = 'Virginia' ;
SELECT distinct dogs.date_arrived , dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived , dogs.date_departed from dogs join treatments on dogs.dog_id = treatments.dog_id
SELECT owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id order by dogs.age desc limit 1
SELECT owners.first_name from owners join dogs on owners.owner_id = dogs.owner_id order by dogs.age desc limit 1
SELECT email_address from professionals where state = 'HI' or state = 'WI'
SELECT email_address from professionals where state = 'Hawaii' or state = 'Wisconsin'
SELECT date_arrived , date_departed from dogs
SELECT date_arrived , date_departed from dogs
SELECT count ( distinct dog_id ) from treatments
SELECT count ( distinct dog_id ) from treatments
SELECT count ( distinct professional_id ) from treatments
SELECT count ( distinct professional_id ) from treatments
SELECT role_code , street , city , state from professionals where city like '%West%';
SELECT role_code , street , city , state from professionals where city like '%West%';
SELECT first_name , last_name , email_address from owners where state like '%North%';
SELECT first_name , last_name , email_address from owners where state like '%North%';
SELECT count ( * ) from dogs where age < ( select avg ( age ) from dogs )
SELECT count ( * ) from dogs where age < ( select avg ( age ) from dogs );
SELECT cost_of_treatment from treatments order by date_of_treatment desc limit 1
SELECT cost_of_treatment from treatments order by date_of_treatment desc limit 1
SELECT count ( * ) from dogs where dog_id not in ( select dog_id from treatments )
SELECT count ( * ) from dogs where dog_id not in ( select dog_id from treatments )
SELECT count ( * ) from owners where owner_id not in ( select owner_id from dogs where date_adopted = '9999-12-31' )
SELECT count ( * ) from owners where owner_id not in ( select owner_id from dogs where date_departed = 'null' )
SELECT count ( * ) from professionals where professional_id not in ( select professional_id from treatments )
SELECT count ( * ) from professionals where professional_id not in ( select professional_id from treatments )
SELECT name , age , weight from dogs where abandoned_yn = 1
SELECT name , age , weight from dogs where abandoned_yn = 1
SELECT avg ( age ) from dogs
SELECT avg ( age ) from dogs
SELECT max ( age ) from dogs
SELECT age from dogs order by age desc limit 1
SELECT charge_type , charge_amount from charges
SELECT charge_type , charge_amount from charges
SELECT max ( charge_amount ) from charges where charge_type = 'Adoption';
SELECT charge_amount from charges order by charge_amount desc limit 1;
SELECT email_address , cell_number , home_phone from professionals
SELECT email_address , cell_number , home_phone from professionals
SELECT breeds.breed_name , sizes.size_description from breeds cross join sizes
SELECT distinct breed_code , size_code from dogs
SELECT distinct professionals.first_name , treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT distinct professionals.first_name , treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT count ( * ) from singer
SELECT count ( * ) from singer
SELECT name from singer order by net_worth_millions asc;
SELECT name from singer order by net_worth_millions asc
SELECT birth_year , citizenship from singer
SELECT birth_year , citizenship from singer
SELECT name from singer where citizenship != 'France'
SELECT name from singer where citizenship != 'French';
SELECT name from singer where birth_year = 1948 or birth_year = 1949
SELECT name from singer where birth_year = 1948 or birth_year = 1949
SELECT name from singer order by net_worth_millions desc limit 1
SELECT name from singer order by net_worth_millions desc limit 1
SELECT citizenship , count ( * ) from singer group by citizenship;
SELECT citizenship , count ( * ) from singer group by citizenship;
SELECT citizenship from singer group by citizenship order by count ( * ) desc limit 1
SELECT citizenship from singer group by citizenship order by count ( * ) desc limit 1
SELECT max ( net_worth_millions ) , citizenship from singer group by citizenship;
SELECT max ( net_worth_millions ) , citizenship from singer group by citizenship;
SELECT title , name from singer join song on singer.singer_id = song.singer_id
SELECT song.title , singer.name from song join singer on song.singer_id = singer.singer_id
SELECT distinct singer.name from song join singer on song.singer_id = singer.singer_id where song.sales > 300000
SELECT distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000
SELECT name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1 ;
SELECT singer.name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1 ;
SELECT sum ( song.sales ) , singer.name from song join singer on song.singer_id = singer.singer_id group by singer.name;
SELECT sum ( song.sales ) , singer.name from song join singer on song.singer_id = singer.singer_id group by singer.name;
SELECT name from singer where singer_id not in ( select singer_id from song )
SELECT name from singer where singer_id not in ( select singer_id from song )
SELECT citizenship from singer where birth_year > 1955 intersect select citizenship from singer where birth_year < 1945
SELECT citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955
SELECT count ( * ) from other_available_features
SELECT ref_feature_types.feature_type_name from other_available_features join ref_feature_types on other_available_features.feature_type_code = ref_feature_types.feature_type_code where other_available_features.feature_name = 'AirCon'
SELECT ref_property_types.property_type_description from ref_property_types join properties on ref_property_types.property_type_code = properties.property_type_code where properties.property_type_code = 'apt';
SELECT property_name from properties where property_type_code = 'HSE' and room_count > 1 union select property_name from properties where property_type_code = 'APT' and room_count > 1
