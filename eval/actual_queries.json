[
    {
        "NatSQL": "select count ( singer.* )  from singer",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( singer.* )  from singer",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , singer.Country , singer.Age from singer  order by singer.Age asc",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , singer.Country , singer.Age from singer  order by singer.Age desc",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from singer  where  singer.Country = \"France\"",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select avg ( SINGER.AGE )  , min ( SINGER.AGE )  , max ( SINGER.AGE )  from SINGER  where  SINGER.COUNTRY = \"France\"",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select song.song_name , song.song_release_year from song  order by singe.age asc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , singer.Song_Release_Year from singer  order by singer.Age asc limit 10",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select  distinct singer.Country from singer  where  singer.Age > 20",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select  distinct singer.Country from singer  where  singer.Age > 20  and  count ( song.* )  >= 1  group by singer.Country , concert.Theme",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Country , count ( singer.* )  from singer  group by singer.Country",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( singer.* )  , singer.Country from singer  group by singer.Country",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select song.song_name from song  where  @.@ > avg ( singer.age )",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select song.song_name from singer  where  @.@ > avg ( singer.age )",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Location , staidium.Name from staidium  where  staidium.Capacity between 5000 and 10000  and  staidium.Capacity between 5000 and 10000",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select max ( stadium.Capacity )  , avg ( stadium.Average )  from stadium",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select max ( stadium.Capacity )  , avg ( stadium.Average )  from stadium",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select stadium.Name , stadium.Capacity from stadium  order by stadium.Average desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select stadium.Name , stadium.Capacity from stadium  order by stadium.Average desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( concert.* )  from concert  where  concert.Year = 2014  or  concert.Year = 2015",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( concert.* )  from concert  where  concert.Year = 2014  or  concert.Year = 2015",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name , count ( concert.* )  from staidium  group by staidium.Stadium_ID",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( concert.* )  , concert.Stadium_ID from concert  group by concert.Stadium_ID",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name , stadium.Capacity from concert  where  concert.Year >= 2014  or  count ( concert.* )  >= 3  group by concert.Stadium_ID  order by count ( concert.* )  desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  order by concert.Concert_ID desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select concert.Year from concert  group by concert.Year  order by count ( concert.* )  desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select concert.Year from concert  group by concert.Year  order by count ( concert.* )  desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name from staidium  where  concert.\"Concert Name\" = \"\"",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name from staidium  where  @.@ not in concert.*",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Country from singer  where  @.@ join singer_in_concert.*  and  singer.Age > 40  and  @.@ join singer_in_concert.*  and  singer.Age < 30",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name from staidium  where  @.@ not in concert.*  and  concert.Year != 2014",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name from staidium  where  @.@ not in concert.*  and  concert.Year = 2014",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select concert.Concert_Name , concert.Theme , count ( singe r.* )  from concert  group by concert.Concert_ID , concert.Theme",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select concert.Concert_Name , concert.Theme , count ( singe r.* )  from concert  where  count ( singe r.* )  > 1  group by concert.Concert_Name , concert.Theme",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , count ( concert.* )  from singer  group by singer.Singer_ID , singer.Name",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , count ( concert.* )  from singer  group by singer.Singer_ID",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name from concert  where  concert.Year = 2014",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name from concert  where  concert.Year = 2014",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , singer.Country from song  where  @.@ join song.Singer_ID  and  song.Song_Name like \"%Hey%\"",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select singer.Name , singer.Country from song  where  @.@ join song.*  and  song.Song_Name like \"%Hey%\"",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name , stadium.Location from stadium  where  concert.Year = 2014  and  @.@ in concert.*  and  concert.Year = 2015",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select staidium.Name , stadium.Location from concert  where  concert.Year = 2014  and  @.@ in concert.*  and  concert.Year = 2015",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( concert.* )  from concert  where  @.@ join singer_in_concert.*  and  staidium.capacity = max ( stadium.capacity )   order by concert.year desc limit 1000",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( concert.* )  from concert  where  @.@ join singer_in_concert.*  and  staidium.capacity = max ( stadium.capacity )   order by concert.year desc limit 1",
        "db_id": "concert_singer"
    },
    {
        "NatSQL": "select count ( pet.* )  from pet  where  pet.Weight > 10",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( pet.* )  from pet  where  pet.Weight > 10  and  @.@ > pet.Weight  group by pet.PetType , pet.City_Code",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select pets.Weight from student  order by student.Age asc limit 1",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select min ( _ )  from _  order by _ asc limit _",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select max ( pets.Weight )  , pets.PetType from pets  group by pets.PetType",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select max ( pets.Weight )  , pets.PetType from pets  group by pets.PetType",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( has_pet.* )  from student  where  student.Age > 20  and  @.@ > student.StuID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( has_pet.* )  from student  where  @.@ join has_pet.*  and  student.AGE > 20",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( pet.* )  from student  where  student.sex = \"F\"  and  pet.PetType = \"Dog\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( pet.* )  from student  where  @.@ join has_pet.*  and  student.SEX = \"F\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count (  distinct pet.PetType )  from pet",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count (  distinct pets.PetType )  from pets",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME from student  where  @.@ join has_pet.*  and  pets.PETTYPE = \"cat\"  or  pets.PETTYPE = \"dog\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME from student  where  @.@ join has_pet.*  and  pets.PETTYPE = \"cat\"  or  pets.PETTYPE = \"dog\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.fname from student  where  @.@ join has_pet.*  and  pets.PetType = \"cat\"  and  pets.PetType = \"dog\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME from student  where  @.@ join has_pet.*  and  pets.PETTYPE = \"cat\"  and  @.@ join has_pet.*  and  pets.PETTYPE = \"dog\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.Major , student.Age from student  where  except_  @.@ is pets.*  and  pets.PetType = \"Cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.Major , student.Age from student  where  @.@ not in has_pet.*  and  student.StuID = has_pet.StuID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.STUID from student  where  except_  @.@ is has_pet.*  and  pets.PETTYPE = \"Cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.STUID from student  where  except_  @.@ is has_pet.*  and  pets.PETTYPE = \"cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.fname , student.age from student  where  @.@ join has_pet.*  and  pets.PetType = \"Dog\"  except_  @.@ join has_pet.*  and  pets.PetType = \"Cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME from student  where  @.@ join has_pet.*  and  pets.PETTYPE = \"Dog\"  except_  @.@ join has_pet.*  and  pets.PETTYPE = \"Cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select pettype , weight from pets  order by pet_age asc limit 1",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select pettype , weight from pets  order by pet_age asc limit 1",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select pets.PetID , pets.Weight from pets  where  @.@ > student.Age",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select pets.PetID , pets.Weight from pets  where  student.Age > 1",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( student.Age )  , max ( student.Age )  , pets.PetType from student  group by pets.PetType",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( pet_age )  , max ( pet_age )  , pettype from pets  group by pettype",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( pets.Weight )  , pets.PetType from pets  group by pets.PetType",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( pets.Weight )  , pets.PetType from pets  group by pets.PetType",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.fname , student.age from student  where  @.@ join has_pet.*",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select  distinct student.fname , student.age from student  where  @.@ join has_pet.*",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select has_pet.PetID from student  where  @.@ join has_pet.*  and  student.Lname = \"Smith\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select has_pet.PetID from student  where  @.@ join has_pet.*  and  student.Lname = \"Smith\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( has_pet.* )  , student.STUID from student  where  @.@ join has_pet.*  group by student.STUID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( has_pet.* )  , student.STUID from student  where  @.@ join has_pet.*  group by student.STUID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME , student.GENDER from student  where  count ( has_pet.* )  > 1  group by student.STUID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.FNAME , student.GENDER from student  where  count ( has_pet.* )  > 1  group by student.STUID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.LNAME from student  where  pets.PET_AGE = 3  and  has_pet.PETID = pets.PETID  and  has_pet.STUID = student.STUID",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select student.lnam from student  where  student.Age = 3  and  @.@ in has_pet.*  and  pets.PetType = \"cat\"",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( student.Age )  from student  where  @.@ not in has_pet.*",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select avg ( student.Age )  from student  where  @.@ not in has_pet.*",
        "db_id": "pets_1"
    },
    {
        "NatSQL": "select count ( continents.* )  from continents",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( continents.* )  from continents",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select continents.Continents , count ( countries.* )  from countries  group by continents.Continents",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select continents.ContID , continents.Continent , count ( countries.* )  from continents  group by continents.Continent , continents.ContID",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( countries.* )  from countries",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( countries.* )  from countries",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.Fullname , car_makers.id , count ( model_list.* )  from car_makers  group by car_makers.Maker  order by count ( model_list.* )  desc",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.Fullname , car_makers.id , count ( model_list.* )  from car_makers  join model_list  on model_list.Maker = car_makers.ID  group by car_makers.id , car_makers.Fullname",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Model from cars_data  order by cars_data.HorsePower asc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from cars_data  order by cars_data.HorsePower asc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from model_list  where  @.@ < avg ( cars_data.Weight )",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from cars_data  where  @.@ < avg ( cars_data.Weight )",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.Fullname from car_makers  where  cars_data.Year = 1970",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct car_makers.MAKER from car_makers  where  cars_data.YEAR = 1970",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Make , cars_data.Year from cars_data  where  cars_data.Year = min ( _ )  order by cars_data.Year asc limit _",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.MAKER , cars_data.YEAR from cars_data  order by cars_data.YEAR asc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct models.Model from models  where  models.Year > 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct models.* from cars_data  where  cars_data.Year > 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select continents.Continent , count ( distinct car_makers.Makr )  from continents  group by continents.Continent",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select continents.Continent , count ( car_makers.* )  from continents  group by continents.Continent",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from countries  group by countries.Continent  order by count ( car_makers.* )  desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from car_makers  group by countries.Continent  order by count ( car_makers.* )  desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  , car_makers.fullname from car_makers  group by car_makers.makr",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  , car_makers.id , car_makers.fullname from car_makers  group by car_makers.maker , car_makers.id , car_makers.fullname",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Accelerate from car_names  where  car_names.Make = \"AMC\"  and  car_names.Model = \"Hornet Sportabout (Sw)\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.accelerate from cars_data  where  car_names.Model = \"amc hornet\"  and  car_names.Make = \"sportabout (sw)\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( car_makers.* )  from countries  where  countries.Continent = \"Europe\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( car_makers.* )  from countries  where  countries.Continent = \"Europe\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  from countries  where  countries.CountryName = \"USA\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  from countries  where  countries.CountryName = \"United States\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.MPG )  from cars_data  where  cars_data.CYLINDERS = 4",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.MPG )  from cars_data  where  cars_data.CYLINDERS = 4",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select min ( _ ) from _ where _",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select min ( cars_data.Weight )  from cars_data  where  cars_data.Cylinders = 8  and  cars_data.Year = 1974",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.maker , model_list.model from car_makers  join  model_list on car_makers.id = model_list.maker",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.maker , model_list.model from car_makers  join  model_list on car_makers.id = model_list.maker",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName , countries.CountryID from countries  where  count ( car_makers.* )  >= 1  group by countries.CountryID , countries.CountryName",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName , countries.CountryID from countries  where  @.@ join car_makers.*  and  count ( car_makers.* )  >= 1  group by countries.CountryID , countries.CountryName",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.horsepower > 150",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.horsepower > 150",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.Weight )  , cars_data.Year from cars_data  group by cars_data.Year",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.Weight )  , cars_data.Year from cars_data  group by cars_data.Year",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from countries  where  count ( car_makers.* )  >= 3  and  @.@ in countries.Continent and countries.Continent = \"Europe\"  group by countries.CountryName , countries.Continent",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from countries  where  count ( manufacturers.* )  >= 3  and  @.@ in manufacturers.*  and  countries.Continent = \"Europe\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.horsepwer , car_makers.macker from cars_data  where  cars_data.cylinder = 3  group by car_names.model  order by max ( cars_data.horsepower )  asc limit 2",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Horsepower , car_makers.Makr from cars_data  where  cars_data.Cylinders = 3  and  count ( cars_data.* )  >= 4  group by car_names.Model  order by cars_data.Horsepower desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Model from cars_data  group by cars_data.Model  order by max ( cars_data.Mpg )  asc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Model from cars_data  order by cars_data.MPG desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.horsepower )  from cars_data  where  cars_data.year < 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.horsepower )  from cars_data  where  @.@ < cars_data.year  and  cars_data.year < 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.EDISPL )  from cars_data  where  car_names.Model = \"volvo\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select avg ( cars_data.EDISPL )  from cars_data  where  car_makers.MAKER = \"Volvo\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select max ( cars_data.accelerate )  , cars_data.cylinders from cars_data  group by cars_data.cylinders",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select max ( cars_data.accelerate )  from cars_data  group by cars_data.cylinders",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from model_list  group by model_list.MakeR  order by count ( model_list.* )  desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from model_list  group by model_list.Model  order by count (  distinct model_list.Version )  desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.cylinders > 4",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.cylinders > 4",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.Year = 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.Year = 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  from car_makers  where  car_makers.MAKER = \"American Motor Company\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( model_list.* )  from car_makers  where  car_makers.mkr = \"American Motor Company\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.Fullname , car_makers.id from car_makers  where  count ( car_names.* )  > 3  group by car_makers.id , car_makers.Makr",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.full_name , car_makers.id from car_makers  where  count ( model_list.* )  > 3  group by car_makers.id , car_makers.macker",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct model_list.Model from car_makers  where  car_makers.Fullname = \"General Motors\"  or  @.@ > cars_data.Weight  and  car_makers.Fullname = \"General Motors\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct model_list.Model from car_makers  where  car_makers.Makr = \"General Motors\"  or  @.@ > cars_data.Weight  and  cars_data.Weight > 3500",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Year from cars_data  where  cars_data.Weight >= 3000  and  cars_data.Weight <= 4000",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct cars_data.Year from cars_data  where  cars_data.Weight < 4000  and  @.@ in cars_data.*  and  cars_data.Weight > 3000",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.horsepower from cars_data  order by cars_data.accelerate desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.horsepower from cars_data  order by cars_data.accelerate desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  @.@ join model_list.*  and  model_list.Model = \"Volvo\"  order by cars_data.Accelerate asc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  @.@ join models_in_use.*  and  min ( cars_data.accelerate )   by models_in_use.Model",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  @.@ > max ( cars_data.accelerate )",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  @.@ > max ( cars_data.accelerate )",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( countries.* )  from countries  where  count ( car_makers.* )  > 2  group by countries.Continent",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( countries.* )  from countries  where  count ( car_makers.* )  > 2  group by countries.Continent",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinders > 6  and  count ( cars_data.* )  >= 4  group by cars_data.Make , cars_data.Model",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinder > 6  and  count ( cars_data.* )  >= 6  group by cars_data.Make , cars_data.Model",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_names.Model from cars_data  where  cars_data.Cylinders = 4  order by cars_data.HorsePower desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select cars_data.Model from cars_data  where  cars_data.Cylinders = 4  group by cars_data.Model  order by sum ( cars_data.HorsePower )  desc limit 1",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.id , car_makers.maker from cars_data  where  @.@ > min ( cars_data.horsepower )   and  cars_data.cylinders <= 3",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.Make, car_makers.Fullname from cars_data  where  @.@ not in min ( cars_data.HorsePower )   and  cars_data.Cylinders < 4",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select max ( cars_data.MPG )  from cars_data  where  cars_data.CYLINDERS = 8  or  @.@ < cars_data.YEAR  and  cars_data.YEAR < 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select max ( cars_data.MPG )  from cars_data  where  cars_data.CYLINDERS = 8  or  @.@ in cars_data.*  and  cars_data.YEAR < 1980",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select model_list.Model from model_list  where  cars_data.Mpg < 3500  and  @.@ not in car_makers.*  and  car_makers.Makr = \"Ford Motor Company\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select  distinct models.* from models  where  cars_data.weight < 3500  and  @.@ not in cars_data.*  and  car_makers.mfr != \"Ford Motor Company\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from countries  where  not  exists  car_makers.*  group by countries.Continent, countries.CountryName",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryName from countries  where  except_  @.@ is car_makers.*  and  car_makers.Makr = \"Toyota\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.id , car_makers.mkr from car_makers  where  count ( model_list.* )  >= 2  and  count ( car_makers.* )  > 3  group by car_makers.id , car_makers.mkr",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select car_makers.ID , car_makers.MAKER from car_makers  where  count ( model_list.* )  >= 2  and  count ( cars_data.* )  > 3  group by car_makers.MAKER , car_makers.ID",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryID , countries.CountryName from countries  where  count ( car_makers.* )  >= 4  or  @.@ join cars_data.*  and  car_makers.Makr = \"fiat\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select countries.CountryID , countries.CountryName from countries  where  count ( car_makers.* )  > 3  or  @.@ join cars_data.*  and  car_makers.Makr = \"Fiat\"",
        "db_id": "car_1"
    },
    {
        "NatSQL": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.abbreviation from airlines  where  airlines.airline = \"JetBlue Airways\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode , airports.AirportName from airports  where  @.@ join flights.*  and  airports.City = \"Anthony\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode , airports.AirportName from airports  where  airports.City = \"Anthony\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airlines.* )  from airlines",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airlines.* )  from airlines",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airports.* )  from airports",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airports.* )  from airports",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from flights",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from flights",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from airlines  where  airlines.abbreviation = \"UAL\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airlines.* )  from airlines  where  airlines.country = \"USA\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.City , airports.Country from airports  where  airports.AirportCode = \"ALTON\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.City , airports.Country from airports  where  airports.AirportCode = \"ALTON\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportName from airports  where  airports.AirportCode = \"AKO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportName from airports  where  airports.AirportCode = \"AKO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportName from airports  where  airports.City = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportName from airports  where  @.@ join flights.*  and  airports.City = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportcode = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from flights  where  flights.airline = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from flights  where  airports.airportcode = \"ATO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportcode = \"ATO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.CITY = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportcode = \"ABR\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.CITY = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.CITY = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.city = \"Aberdeen\"  and  flights.destairport = \"Ashley\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportname = \"Aberdeen\"  and  airports.airportname = \"Ashley\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airlines  where  airlines.airline = \"JetBlue Airways\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airlines  where  airlines.airline = \"JetBlue\"  and  airports.airportname = \"Chicago O'Hare\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airlines  where  airlines.airline = \"United Airlines\"  and  airports.airportname = \"Asheville, NC\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportname = \"ASY\"  and  airports.country = \"United States\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportname = \"AHD\"  and  airlines.airline = \"United Airlines\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportname = \"Athens\"  and  airlines.airline = \"United Airlines\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airlines  where  airlines.airline = \"United Airlines\"  and  airports.city = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airlines  where  airlines.airline = \"United Airlines\"  and  airports.airportname = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.city from flights  group by flights.sourceairport  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.city from airports  group by flights.destairport  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.city from flights  group by flights.sourceairport  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.city from airports  group by flights.sourceairport  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode from airports  group by airports.City  order by count ( flights.* )  asc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  asc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  group by airlines.Airline  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  group by airlines.Airline  order by count ( flights.* )  desc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Abbreviation , airlines.Country from airlines  group by airlines.Airline  order by count ( flights.* )  asc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Abbreviation , airlines.Country from airlines  group by airlines.Airline  order by count ( flights.* )  asc limit 1",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from flights  where  @.@ join flights.*  and  airports.airportname = \"AHD\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from flights  where  @.@ join flights.*  and  airports.AIRPORTNAME = \"AHT\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from flights  where  @.@ join flights.*  and  airports.airportname = \"AHD\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from flights  where  @.@ join flights.*  and  airports.AIRPORTNAME = \"Athens\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from airlines  where  @.@ join flights.*  and  airports.airportcode = \"APG\"  and  airports.airportcode = \"CVO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from airlines  where  @.@ join flights.*  and  airports.AirportCode = \"APG\"  and  airports.AirportCode = \"CVO\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from airlines  where  @.@ join flights.*  and  airports.airportcode = \"CVO\"  except_  @.@ join flights.*  and  airports.airportcode = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from airports  where  @.@ join flights.*  and  airports.AIRPORTCODE = \"CVO\"  except_  @.@ join flights.*  and  airports.AIRPORTCODE = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.* from flights  where  count ( flights.* )  >= 10  group by flights.airline , airlines.uid",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  where  count ( flights.* )  >= 10  group by airlines.Airline , airlines.Country",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airlines  where  airlines.airline = \"United Airlines\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airlines  where  airlines.airline = \"United Airlines\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from flights  where  @.@ join flights.*  and  airports.airportname = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airports  where  @.@ join flights.*  and  airports.airportcode = \"APG\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from flights  where  @.@ join flights.*  and  airports.airportname = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airports  where  @.@ join flights.*  and  airports.airportname = \"Aberdeen Penn\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from flights  where  @.@ join flights.*  and  airports.city = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airports  where  @.@ join flights.*  and  airports.CITY = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from flights  where  @.@ join flights.*  and  airports.city = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select flights.flightno from airports  where  @.@ join flights.*  and  airports.CITY = \"Aberdeen\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.CITY = \"Aberdeen\"  or  airports.CITY = \"Abilene\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( flights.* )  from airports  where  airports.airportname = \"Aberdeen\"  or  airports.airportname = \"Abilene\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.AirportName from airports  where  @.@ not in flights.*  and  flights.DestAirport = \"BNA\"",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select airports.* from airports  where  @.@ not in flights.*  and  @.@ not in flights.*",
        "db_id": "flight_2"
    },
    {
        "NatSQL": "select count ( employee.* )  from employee",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( employee.* )  from employee",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from employee  order by employee.Age asc",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from employee  order by employee.Age asc",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( employee.* )  , employee.City from employee  group by employee.City",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( employee.* )  , employee.City from employee  group by employee.City",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.City from employee  where  count ( employee.* )  > 2  and  employee.Age < 30  group by employee.City , employee.State",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.City from employee  where  count ( employee.* )  > 1  and  employee.Age < 30",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( shop.* )  , shop.Location from shop  group by shop.Location",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( shop.* )  , shop.Location from shop  group by shop.Location",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Manager_Name , shop.District from shop  order by shop.Number_Products desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Manager_Name , shop.District from shop  order by shop.Number_Products desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select min ( shop.Number_Products )  , max ( shop.Number_Products )  from shop ###",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select min ( shop.Number_Products )  , max ( shop.Number_Products )  from shop",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name , shop.Location , shop.District from shop  order by shop.Number_Products desc",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name , shop.Location , shop.District from shop  order by shop.Number_Products desc limit 1000",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  where  @.@ > avg ( shop.Number_Products )",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  where  @.@ > avg ( shop.Number_Products )   group by shop.Shop_ID",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from evaluation  group by evaluation.Employee_ID  order by count ( evaluation.* )  desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from evaluation  group by evaluation.Employee_ID  order by count ( evaluation.* )  desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from evaluation  order by evaluation.Bonus desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from employee  order by evaluation.Bonus desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from employee  where  except_  @.@ is evaluation.*  and  evaluation.Year_Awarded != \"NULL\"  and  evaluation.Bonus != \"NULL\"",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.Name from employee  where  except_  @.@ is evaluation.*",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  order by count ( employee.* )  desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  group by shop.Shop_ID  order by count ( employee.* )  desc limit 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  where  except_  @.@ is employee.*",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.Name from shop  where  @.@ not in employee.*",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( hiring.* )  , shop.Name from shop  group by shop.Shop_ID",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( employee.* )  , shop.Name from shop  group by shop.Shop_ID",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select sum ( evaluation.Bonus )  from evaluation",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select sum ( evaluation.Bonus )  from evaluation",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select hiring.* from hiring  where  @.@ join evaluation.*  and  hiring.Is_Full_Time = \"Yes\"",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select employee.* from employee  where  @.@ join hiring.*  and  hiring.Is_Full_Time = 1",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.District from shop  where  @.@ join store.*  and  count ( store.* )  < 3000  and  count ( store.* )  > 10000  group by shop.District",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select shop.District from shop  where  shop.Number_Products < 3000  and  shop.Number_Products > 10000  and  count ( shop.* )  >= 2  and  count ( shop.* )  <= 2  group by shop.District , shop.Shop_ID",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count (  distinct shop.Location )  from shop",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count (  distinct shop.Location )  from shop",
        "db_id": "employee_hire_evaluation"
    },
    {
        "NatSQL": "select count ( documents.* )  from documents",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( documents.* )  from documents",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from documents",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from documents",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_NAME , documents.TEMPLATE_ID from documents  where  @.@ join paragraphs.*  and  documents.DOCUMENT_DESCRIPTION like \"%w%\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.document_name , documents.template_id from documents  where  @.@ join paragraphs.*  and  documents.document_description like \"%w%\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , documents.TEMPLATE_ID , documents.DOCUMENT_DESCRIPTION from documents  where  documents.DOCUMENT_NAME = \"Robbin CV\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , documents.TEMPLATE_ID , documents.DOCUMENT_DESCRIPTION from documents  where  documents.DOCUMENT_NAME = \"Robbin CV\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count (  distinct templates.Template_ID )  from templates  join documents on templates.Template_ID = documents.Template_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count (  distinct documents.TEMPLATE_ID )  from documents",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( documents.* )  from templates  where  templates.template_type_code = \"PPT\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( documents.* )  from documents  where  templates.template_type_code = \"PPT\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID , count ( documents.* )  from templates  group by templates.Template_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_ID , count ( documents.* )  from templates  group by templates.TEMPLATE_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID , templates.Template_Type_Code from templates  group by templates.Template_ID  order by count ( documents.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID , templates.Template_Type_Code from templates  group by templates.Template_ID  order by count ( documents.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from templates  where  count ( templates.* )  > 1  group by templates.Template_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from templates  where  count ( documents.* )  > 1  group by templates.Template_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.* from templates  where  @.@ not in documents.*",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.* from templates  where  @.@ not in documents.*",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( templates.* )  from templates  where  @.@ join _",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( templates.* )  from templates  where  @.@ join _  and _",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from templates",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from templates",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select  distinct templates.Template_Type_Code from templates",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select  distinct templates.Template_Type_Code from templates",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from templates  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from templates  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( templates.* )  from templates  where  templates.TEMPLATE_TYPE_CODE = \"CV\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( templates.* )  from templates  where  templates.Template_Type_Code = \"CV\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.version_number , templates.template_type_code from templates  where  templates.version_number > 5  and  @.@ > templates.date_effective_from",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.version_number , templates.template_type_code from templates  where  templates.version_number > 5  and  @.@ > templates.version_number",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_TYPE_CODE , count ( templates.* )  from templates  group by templates.TEMPLATE_TYPE_CODE",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_TYPE_CODE , count ( templates.* )  from templates  group by templates.TEMPLATE_TYPE_CODE",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_TYPE_CODE from templates  group by templates.TEMPLATE_TYPE_CODE  order by count ( templates.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from templates  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from templates  where  count ( templates.* )  < 3  group by templates.Template_Type_Code",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from templates  where  count ( templates.* )  < 3  group by templates.Template_Type_Code",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.version_number , templates.template_type_code  from templates  order by templates.version_number asc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.version_number , templates.template_type_code from templates  order by templates.version_number asc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from documents  where  documents.Document_Name = \"Data base\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from documents  where  documents.Document_Name = \"Data base\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_NAME from templates  where  templates.TEMPLATE_TYPE_CODE = \"BK\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_NAME from documents  where  @.@ join templates.*  and  templates.TEMPLATE_TYPE_CODE = \"BK\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code , count ( documents.* )  from templates  group by templates.Template_Type_Code",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_TYPE_CODE , count ( documents.* )  from documents  group by templates.TEMPLATE_TYPE_CODE , templates.VERSION_NUMBER",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.TEMPLATE_TYPE_CODE from templates  group by templates.TEMPLATE_TYPE_CODE  order by count ( documents.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from templates  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.*",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.Template_Type_Code from ref_template_types  where  except_  @.@ is templates.*",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.template_type_description from ref_template_types  where  ref_template_types.template_type_code = \"AD\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.template_type_description from ref_template_types  where  ref_template_types.template_type_code = \"AD\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select  distinct templates.Template_Type_Description from templates  where  @.@ join documents.*",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select  distinct templates.Template_Details from templates  where  @.@ join documents.*  and  count ( templates.* )  >= 2  group by templates.Template_Details",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select templates.Template_ID from templates  where  templates.Template_Details = \"Presentation\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( paragraphs.* )  from paragraphs",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( paragraphs.* )  from paragraphs",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( paragraphs.* )  from documents  where  documents.DOCUMENT_NAME = \"Summer Show\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( paragraphs.* )  from documents  where  documents.document_name = \"Summer Show\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.* from paragraphs  where  paragraphs.paragraph_text like \"Korea %\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.* from paragraphs  where  paragraphs.paragraph_text like \"%Korea %\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from documents  where  documents.Document_Name = \"Welcome to NY\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from documents  where  documents.Document_Name = \"Welcome to NY\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.paragraph_text from documents  where  documents.document_name = \"Customer reviews\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.paragraph_text from documents  where  documents.document_name = \"Customer reviews\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , count ( paragraphs.* )  from documents  group by documents.DOCUMENT_ID  order by documents.DOCUMENT_ID asc",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( paragraphs.* )  , documents.Document_ID from documents  group by documents.Document_ID  order by documents.Document_ID asc",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , documents.DOCUMENT_NAME , count ( paragraphs.* )  from documents  group by documents.DOCUMENT_ID , documents.DOCUMENT_NAME",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , documents.DOCUMENT_NAME , count ( paragraphs.* )  from documents  group by documents.DOCUMENT_ID , documents.DOCUMENT_NAME",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID from documents  where  count ( paragraphs.* )  >= 2  group by documents.Document_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID from documents  where  count ( paragraphs.* )  >= 2  group by documents.Document_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID , documents.DOCUMENT_NAME from documents  group by documents.DOCUMENT_ID  order by count ( paragraphs.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID , documents.Document_Name from documents  group by documents.Document_ID  order by count ( paragraphs.* )  desc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID from documents  group by documents.DOCUMENT_ID  order by count ( paragraphs.* )  asc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID from documents  group by documents.Document_ID  order by count ( paragraphs.* )  asc limit 1",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.DOCUMENT_ID from documents  where  count ( paragraphs.* )  between 1 and 2  group by documents.DOCUMENT_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID from documents  where  count ( paragraphs.* )  between 1 and 2  group by documents.Document_ID",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select paragraphs.Paragraph_ID from paragraphs  where  paragraphs.Paragraph_Text = \"Brazil\"  and  @.@ in documents.Document_ID  and  paragraphs.Paragraph_Text = \"Ireland\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select documents.Document_ID from documents  where  paragraphs.Paragraph_Text like \"%Brazil%\"  and  paragraphs.Paragraph_Text like \"%Ireland%\"",
        "db_id": "cre_Doc_Template_Mgt"
    },
    {
        "NatSQL": "select count ( teacher.* )  from teacher",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select count ( teacher.* )  from teacher",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  order by teacher.Age asc",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  order by teacher.Age asc",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Age , teacher.Hometown from teacher",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Age , teacher.Hometown from teacher",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  where  teacher.Hometown != \"Littlle Lever Urban District\"",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  where  teacher.Hometown != \"Li<NAME> Urban District\"",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  where  teacher.Age = 32  or  teacher.Age = 33",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from teacher  where  teacher.Age = 32  or  teacher.Age = 33",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.HomeTown from teacher  order by teacher.Age asc limit 1",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown from teacher  order by teacher.Age asc limit 1",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown , count ( teacher.* )  from teacher  group by teacher.Hometown  order by count ( teacher.* )  desc",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select count ( teacher.* )  , teacher.Hometown from teacher  group by teacher.Hometown",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown from teacher  group by teacher.Hometown  order by count ( teacher.* )  desc limit 1",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown from teacher  group by course_arrange.Teacher_ID  order by count ( course_arrange.* )  desc limit 1",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown from teacher  where  count ( teacher.* )  >= 2  group by teacher.Hometown , course_arrange.Teacher_ID",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Hometown from teacher  where  count ( teacher.* )  >= 2  group by teacher.Hometown , course_arrange.Course_ID",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , course.Course from course  where  @.@ join course_arrange.*",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , course.Course from course  join course_arrange  on course_arrange.Course_ID = course.Course_ID  join teacher  on course_arrange.Teacher_ID = teacher.Teacher_ID",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , course.Course from course  order by teacher.Name asc",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , course.Course from course  order by teacher.Name asc",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course  where  course.Course = \"math\"",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course  where  @.@ join course_arrange.*  and  course.Description contains \"math\"",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , count ( course.* )  from course  group by course.Teacher_ID , teacher.Name",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name , count ( course.* )  from course  group by course.Teacher_ID , teacher.Name",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course_arrange  where  count ( course_arrange.* )  >= 2  group by course_arrange.Teacher_ID , course_arrange.Course_ID , course.Starting_Date , course.Course_ID , teacher.Name",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course_arrange  where  count ( course_arrange.* )  >= 2  group by course_arrange.Teacher_ID , course_arrange.Course_ID , teacher.Name",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course_arrange  where  @.@ not in course_arrange.*  and  course_arrange.Grade != \"C\"",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select teacher.Name from course  where  @.@ not in course_arrange.*",
        "db_id": "course_teach"
    },
    {
        "NatSQL": "select count ( visitor.* )  from visitor  where  visitor.Age < 30",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.Name from visitor  where  visitor.Level_of_Membership > 4  order by visitor.Level_of_Membership desc",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select avg ( visitor.Age )  from visitor  where  visitor.Level_of_Membership <= 4",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.Name , visitor.Level_of_Membership from visitor  where  visitor.Level_of_Membership > 4  order by visitor.Age asc",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select museum.MUSEMU_ID , museum.NAME from museum  order by museum.NUM_OF_STAFF desc limit 1",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Open_Year < 2009",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select museum.Open_Year , museum.Num_of_Staff from museum  where  museum.Name = \"Plaza Museum\"",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select musemu.Name from musemu  where  @.@ > min ( musemu.Num_of_Staff )   and  musemu.Open_Year > 2010",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.ID , visitor.Name , visitor.Age from visitor  where  count ( visit.* )  > 1  group by visitor.ID , visitor.Name , visitor.Age",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.ID , visitor.Name , visitor.Level_of_Membership from visit  where  @.@ join visit.*  and  visit.Total_Spent  group by visit.Visitor_ID  order by sum ( visit.Total_Spent )  desc limit 10",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select museum.MUSEMU_ID , museum.NAME from visit  group by visit.MUSEMU_ID  order by count ( visit.* )  desc limit 1",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select museum.Name from museum  where  @.@ not in visit.*  limit  1",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.Name , visitor.Age from visitor  group by visit.Visitor_ID  order by sum ( visit.Num_of_Ticket )  desc limit 1",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select avg ( visit.Num_of_Ticket )  , max ( visit.Num_of_Ticket )  from visit  group by visit.Musuem_ID , visit.Visitor_ID",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select sum ( visit.Total_Spent )  from visitor  where  visitor.Level_of_Membership = 1",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select visitor.Name from visitor  where  @.@ join visit.*  and  museum.Open_Year < 2009  and  @.@ join visit.*  and  museum.Open_Year > 2011",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select count ( visitor.* )  from visitor  where  @.@ not in visit.*  and  museum.Open_Year > 2010",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select count ( museum.* )  from museum  where  museum.Open_Year > 2013  or  museum.Open_Year < 2008",
        "db_id": "museum_visit"
    },
    {
        "NatSQL": "select count ( players.* )  from players",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( players.* )  from players",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  from matches",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  from matches  where  matches.year = 2000",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select avg ( matches.loser_age )  from matches  union  select avg ( matches.winner_age )  from matches",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from matches  group by matches.year",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select avg ( ranking.Ranking )  from ranking  where  @.@ in matches.*  and  rankings.Ranking <= 30",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select avg ( ranking.* )  from ranking  where  @.@ in matches.*",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select max ( matches.loser_rank )  from matches",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select min ( rankings.Ranking )  from rankings  ###",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count (  distinct players.Country_Code )  from players",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count (  distinct players.Country_Code )  from players",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count (  distinct players.loser_name )  from players  where  players.loser_rank != \"Unranked\"  and  players.country_code = \"USA\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count (  distinct players.loser_name )  from players",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.tourney_name from players  where  count ( matches.* )  > 10  group by players.tourney_name  order by count ( matches.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select tournaments.tournament_name from tournaments  where  count ( matches.* )  > 10  group by tournaments.tournament_name , tournaments.start_year",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name from players  where  matches.year = 2013  and  @.@ in matches.*  and  matches.year = 2016",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name from players  where  matches.year = 2013  and  @.@ in matches.*  and  matches.year = 2016",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  from matches  where  matches.year = 2013  or  matches.year = 2016",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  from matches  where  matches.year = 2013  or  matches.year = 2016",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.country_code , players.first_name from players  where  matches.tourney_name = \"WTA Championships\"  and  @.@ in matches.*  and  matches.tourney_name = \"Australian Open\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code from players  where  rankings.ranking == \"1\"  and  @.@ in rankings.*  and  players.country_code == \"AUS\"  or  players.country_code == \"WTA\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code from players  order by players.birth_date asc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code from players  order by players.birth_date asc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name from players  order by players.birth_date asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name from players  order by players.birth_date asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name from players  where  players.hand = \"L\"  order by players.birth_date asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name from players  where  players.Hand = \"L\"  order by players.Birth_date asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code from players  group by players.player_id  order by count ( rankings.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code from players  group by players.player_id  order by count ( rankings.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select matches.year from matches  group by matches.year  order by count ( matches.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select matches.year from matches  group by matches.year  order by count ( matches.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.rank_points from players  group by players.player_id  order by count ( matches.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.player_id , players.ranking_points from players  group by players.player_id  order by count ( matches.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name from players  where  @.@ join rankings.*  and  players.country_code = \"Australia\"  order by rankings.Ranking_Points desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name from players  where  tournaments.tournament_name = \"Australian Open\"  order by rankings.ranking_points desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.player_id from players  order by matches.minutes desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.player_id from players  order by matches.minutes desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select avg ( ranking )  , players.first_name from players  group by players.player_id",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , avg ( ranking.ranking )  from players  group by players.first_name",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select sum ( ranking.Ranking_Points )  , players.First_Name from players  group by players.Player_ID",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , sum ( rankings.ranking_points )  from players  where  @.@ join rankings.*  group by players.player_id  order by sum ( rankings.Ranking_Points )  asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( players.* )  , players.Country_Code from players  group by players.Country_Code",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( players.* )  , players.Country_Code from players  group by players.Country_Code  order by count ( players.* )  desc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.Country_Code from players  group by players.Country_Code  order by count ( players.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.Country_Code from players  group by players.Country_Code  order by count ( players.* )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.Country_Code from players  where  count ( players.* )  > 50  group by players.Country_Code",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.Country_Code from players  where  count ( players.* )  > 50  group by players.Country_Code",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select sum ( rankings.tours )  , rankings.ranking_date from rankings  group by rankings.ranking_date",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( rankings.* )  , rankings.Ranking_Date from rankings  group by rankings.Ranking_Date",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  , matches.Year from matches  group by matches.Year  order by matches.Year asc",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  , matches.Year from matches  group by matches.Year",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.rank from players  where  players.year = min ( _ )   and  players.rank <= 3  order by players.birth_date asc limit 3",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.last_name , players.rank from players  where  players.year = max ( matches.year )   and  players.rank <= 3  order by players.birth_date asc limit 3",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count (  distinct matches.Winner_ID )  from matches  where  @.@ join tournaments.*  and  players.HAND = \"L\"  and  tournaments.TOURNEY_NAME = \"WTA Championship\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( matches.* )  from matches  where  matches. competition = \"WTA\"  and  matches.position = \"L\"",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code , players.birth_date from players  where  @.@ in max ( rankings.Ranking_Points )",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select players.first_name , players.country_code , players.birth_date from players  where  rankings.ranking_type = \"Points\"  group by players.player_id  order by sum ( rankings.Ranking_Points )  desc limit 1",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( players.* )  , players.Hand from players  group by players.Hand",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( players.* )  , players.Hand from players  group by players.Hand",
        "db_id": "wta_1"
    },
    {
        "NatSQL": "select count ( death.* )  from death  where  death.note = \"Captured\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select ship.Name , ship.Tonnage from ship  order by ship.Name desc",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select battle.name , battle.date , battle.Result from battle",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select max ( death.note )  , min ( death.note )  , death.id from death  group by death.id",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select avg ( death.Injured )  , death.Date from death  group by death.Date",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select death.Note , death.Injured , death.Killed from death  where  ship.Tonnage = \"t\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select battle.name , battle.Result from battle  where  battle.Bulgarian_Commander != \"Boril\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select  distinct battle.id , battle.name from battle  where  @.@ join death.*  and  ship.ship_type = \"Brig\"  except_  @.@ join death.*  and  ship.ship_type = \"Brig\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select battle.id , battle.name from battle  where  count ( death.* )  > 10  group by battle.id , battle.name",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select death.Ship_ID , ship.Name from death  group by death.Caused_By_Ship_ID  order by sum ( death.Injured )  desc limit 1",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select  distinct battle.name from battle  where  battle.bulgarian_commander between \"Kaloyan\" and battle.latin_commander",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select count (  distinct battle.Result )  from battle",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select count ( battle.* )  from battle  where  @.@ not in death.*  and  ship.tonnage = \"225\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select battle.name , battle.date from battle  where  @.@ join death.*  and  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select battle.Name , battle.Result , battle.Bulgarian_Commander from battle  where  battle.Name = \"English Channel\"  and  ship.Lost_in_Battle != \"Y\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select death.Note from death  where  death.Note like \"%East%\"",
        "db_id": "battle_death"
    },
    {
        "NatSQL": "select addresses.ADDRESS_ID , addresses.LINE_1 , addresses.LINE_2 from addresses  where  addresses.LINE_1 != \"\"  and  addresses.LINE_2 != \"\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select addresses.line_1 , addresses.line_2 from addresses",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count ( courses.* )  from courses",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count ( courses.* )  from courses",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select courses.Course_Description from courses  where  courses.Course_Name = \"math\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select courses.Course_Description from courses  where  courses.Course_Name = \"Mathematics\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select addresses.zip_postcode from addresses  where  addresses.city = \"Port Chelsea\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select addresses.zip_postcode from addresses  where  addresses.line_1 = \"Port Chelsea\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select department_name , department_id from departments  group by degree_programs.department_id  order by count ( degree_programs.* )  desc limit 1",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select department_name , department_id from degree_programs  group by department_id  order by count ( degree_programs.* )  desc limit 1",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count ( department_id )  from degree_programs  where  @.@ join degree_programs.*",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count (  distinct departments.DEPARTMENT_NAME )  from DEGREE_PROGRAMS",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count (  distinct degree_programs.DEGREE_SUMMARY_NAME )  from degree_programs",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count (  distinct degree_programs.DEGREE_SUMMARY_NAME )  from degree_programs",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count ( degree_programs.* )  from departments  where  departments.DEPARTMENT_NAME = \"Engineering\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select count ( department_degrees.* )  from department_degrees  where  department_name = \"Engineering\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select sections.SECTION_NAME , sections.SECTION_DESCRIPTION from sections",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select sections.SECTION_NAME , sections.SECTION_DESCRIPTION from sections",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select courses.course_name , courses.course_id from sections  where  count ( sections.* )  <= 2  group by sections.course_id , courses.course_name , courses.course_id",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select courses.course_name , courses.course_id from sections  where  count ( sections.* )  < 2  group by sections.course_id , courses.course_name , courses.course_id",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select sections.section_name from sections  order by sections.section_name desc",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select sections.SECTION_NAME from sections  order by sections.SECTION_NAME desc",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select semester_name , semester_id from student_enrolment  group by student_enrolment.semester_id  order by count ( student_enrolment.* )  desc limit 1",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select semester_name , semester_id from semesters  group by semester_id  order by count ( students.* )  desc limit 1",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select department_description from departments  where  @.@ join students.*  and  department_name like \"%Computer%\"",
        "db_id": "student_transcripts_tracking"
    },
    {
        "NatSQL": "select department_description from departments  where  @.@ join students.*  and  department_name like \"%computer%\"",
        "db_id": "student_transcripts_tracking"
    }
]