exec_score: 0
medium pred: SELECT AVG (age), MIN (age), MAX (age) FROM singer WHERE country = 'France'   AND is_male = 'Y'
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

exec_score: 0
medium pred: SELECT song_name,        song_release_year FROM singer WHERE age =     (SELECT MIN (age)      FROM singer)
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

exec_score: 0
medium pred: SELECT MAX (capacity), AVG (average) FROM stadium
medium gold: select max(capacity), average from stadium

exec_score: 0
medium pred: SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY concert.stadium_id ORDER BY AVG (concert.attendance) DESC LIMIT 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

exec_score: 0
medium pred: SELECT name,        capacity FROM stadium GROUP BY name ORDER BY AVG (average) DESC LIMIT 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

exec_score: 0
medium pred: SELECT stadium.name,        COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

exec_score: 0
extra pred: SELECT stadium.name,        stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE YEAR >= 2014 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT stadium.name,        stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY concert.stadium_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1

exec_score: 0
hard pred: SELECT name FROM stadium WHERE stadium_id NOT IN     (SELECT stadium_id      FROM concert      WHERE YEAR = 2014 )
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

exec_score: 0
medium pred: SELECT concert.concert_name,        concert.theme,        COUNT (_) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name,          concert.theme
medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id

exec_score: 0
medium pred: SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

exec_score: 0
medium pred: SELECT singer.name,        COUNT (*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

exec_score: 0
medium pred: SELECT singer.name,        singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.theme like '%Hey%'   AND singer.is_male = 'Y'
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

exec_score: 0
medium pred: SELECT singer.name,        singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.theme like '%Hey%'   AND concert.year >= 2010   AND concert.year <= 2014
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

exec_score: 0
hard pred: SELECT COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id ORDER BY capacity DESC LIMIT 1
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

exec_score: 0
hard pred: SELECT COUNT (*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id ORDER BY stadium.capacity DESC LIMIT 1
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

exec_score: 0
medium pred: SELECT weight FROM pets WHERE pet_age =     (SELECT MIN (pet_age)      FROM pets)
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

exec_score: 0
extra pred: SELECT major,        age FROM student EXCEPT SELECT student.major,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

exec_score: 0
extra pred: SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid EXCEPT SELECT student.fname,        student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.petid IN     (SELECT petid      FROM pets      WHERE pettype = 'cat' )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

exec_score: 0
extra pred: SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

exec_score: 0
medium pred: SELECT pettype,        weight FROM pets WHERE pet_age =     (SELECT MIN (pet_age)      FROM pets)
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

exec_score: 0
medium pred: SELECT DISTINCT student.fname,                 student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.sex = 'M'   OR student.sex = 'F'
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM COUNTRIES;

exec_score: 0
hard pred: SELECT model FROM cars_data ORDER BY horsepower ASC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

exec_score: 0
hard pred: SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY cars_data.horsepower ASC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

exec_score: 0
extra pred: SELECT model FROM cars_data WHERE weight <     (SELECT AVG (weight)      FROM cars_data)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

exec_score: 0
extra pred: SELECT model FROM cars_data WHERE weight <     (SELECT AVG (weight)      FROM cars_data)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

exec_score: 0
extra pred: SELECT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

exec_score: 0
extra pred: SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

exec_score: 0
extra pred: SELECT car_makers.maker,        cars_data.year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id ORDER BY cars_data.year ASC LIMIT 10
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

exec_score: 0
extra pred: SELECT car_makers.maker,        cars_data.year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id ORDER BY cars_data.year ASC LIMIT 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

exec_score: 0
hard pred: SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.year > 1980
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

exec_score: 0
hard pred: SELECT countries.countryname,        COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

exec_score: 0
extra pred: SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

exec_score: 0
extra pred: SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

exec_score: 0
medium pred: SELECT car_makers.fullname,        COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname
medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;

exec_score: 0
medium pred: SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'amc hornet sportabout'   AND car_names.make = 'honda'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

exec_score: 0
medium pred: cars_data
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

exec_score: 0
medium pred: SELECT COUNT (*) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France'   AND car_makers.maker = 'Toyota'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

exec_score: 0
hard pred: ###
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

exec_score: 0
hard pred: SELECT COUNT (*) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryname = 'United States'
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

exec_score: 0
medium pred: car_makers
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

exec_score: 0
medium pred: SELECT maker,        model FROM car_names
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

exec_score: 0
extra pred: SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT (*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

exec_score: 0
extra pred: SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT (*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

exec_score: 0
extra pred: SELECT MAX (cars_data.horsepower), car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY car_names.make HAVING COUNT (*) >= 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

exec_score: 0
extra pred: SELECT cars_data.horsepower,        car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY car_names.make ORDER BY SUM (cars_data.horsepower) DESC LIMIT 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

exec_score: 0
hard pred: SELECT model FROM cars_data ORDER BY mpg DESC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

exec_score: 0
hard pred: SELECT model FROM cars_data ORDER BY mpg DESC LIMIT 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;

exec_score: 0
medium pred: SELECT AVG (cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE model_list.model = 'volvo'   AND car_names.make = 'volvo'
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

exec_score: 0
medium pred: SELECT AVG (edispl) FROM cars_data WHERE cylinders = 8   AND YEAR > 2005
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

exec_score: 0
medium pred: SELECT MAX (accelerate) FROM cars_data GROUP BY cylinders
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

exec_score: 0
hard pred: SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id GROUP BY model_list.modelid ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

exec_score: 0
hard pred: SELECT model FROM model_list GROUP BY model ORDER BY COUNT (DISTINCT maker) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

exec_score: 0
medium pred: SELECT COUNT (*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.maker = 'American Motor Company'   AND model_list.model!= 'X5'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

exec_score: 0
extra pred: SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'General Motors' UNION SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

exec_score: 0
extra pred: SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'General Motors' INTERSECT   SELECT DISTINCT model_list.model   FROM model_list   JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

exec_score: 0
easy pred: SELECT DISTINCT YEAR FROM cars_data WHERE weight < 4000 INTERSECT   SELECT DISTINCT YEAR   FROM cars_data WHERE weight > 3000
easy gold: select distinct year from cars_data where weight between 3000 and 4000;

exec_score: 0
extra pred: SELECT cylinders FROM cars_data WHERE accelerate =     (SELECT MIN (accelerate)      FROM cars_data) ORDER BY accelerate ASC LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

exec_score: 0
extra pred: SELECT cylinders FROM cars_data WHERE accelerate = '30'   AND model = 'Volvo' ORDER BY cylinders ASC LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

exec_score: 0
hard pred: SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

exec_score: 0
hard pred: SELECT COUNT (*) FROM cars_data WHERE accelerate >     (SELECT MAX (accelerate)      FROM cars_data)
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

exec_score: 0
extra pred: SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

exec_score: 0
extra pred: SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cylinders = 4 GROUP BY car_names.model ORDER BY SUM (horsepower) DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

exec_score: 0
extra pred: SELECT car_makers.maker,        car_makers.fullname FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.horsepower >     (SELECT MIN (cars_data.horsepower)      FROM cars_data) EXCEPT SELECT car_makers.maker,        car_makers.fullname FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id GROUP BY car_makers.maker HAVING COUNT (*) > 3
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

exec_score: 0
extra pred: SELECT id,        make FROM cars_data WHERE horsepower <     (SELECT MIN (horsepower)      FROM cars_data)
extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;

exec_score: 0
medium pred: SELECT MAX (mpg) FROM cars_data WHERE cylinders = 8   AND YEAR < 1980
medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980

exec_score: 0
medium pred: SELECT MAX (mpg) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'F-150'   AND cars_data.cylinders = 8   OR cars_data.year < 1980
medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980

exec_score: 0
extra pred: SELECT model FROM model_list WHERE weight < 3500 EXCEPT SELECT model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.maker = 'Ford Motor Company'
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

exec_score: 0
extra pred: SELECT DISTINCT model FROM model_list WHERE weight < 3500 EXCEPT SELECT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Ford'   AND model_list.weight > 3500
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

exec_score: 0
hard pred: SELECT countryname FROM countries EXCEPT SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) = 1
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

exec_score: 0
hard pred: SELECT countryname FROM countries WHERE countryid NOT IN     (SELECT country      FROM car_makers)
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

exec_score: 0
extra pred: SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) >= 2 UNION SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) > 3
extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;

exec_score: 0
extra pred: SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) >= 2 UNION SELECT id,        maker FROM car_makers GROUP BY maker HAVING COUNT (*) > 3
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

exec_score: 0
extra pred: SELECT countries.countryid,        countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT (*) > 3 UNION SELECT countries.countryid,        countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.id = model_list.maker WHERE model_list.model = 'Fiat'   AND car_makers.maker = 'Ford'
extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM AIRPORTS

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM AIRPORTS

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM FLIGHTS

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM FLIGHTS

exec_score: 0
easy pred: SELECT airportname FROM airports WHERE airportname = 'AKO'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

exec_score: 0
easy pred: COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG'   AND flights.airline = 'American Airlines'
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

exec_score: 0
easy pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'APG'   AND airports.country = 'United States'
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

exec_score: 0
easy pred: COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Ato'   AND airports.country = 'Papua New Guinea'
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

exec_score: 0
easy pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.country = 'Australia'   AND airports.countryabbrev = 'AU'
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.flightno!= 'NA'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
hard pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley'
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

exec_score: 0
hard pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.city = 'Ashley'
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

exec_score: 0
medium pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.country = 'United States'   AND airports.city = 'Austin'   AND flights.airline = 'United Airlines'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

exec_score: 0
medium pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.country = 'United States'   AND airports.city = 'Austin'   AND flights.airline = 'United Airlines'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

exec_score: 0
medium pred: COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND flights.sourceairport = 'AHD'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

exec_score: 0
medium pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.country = 'United States'   AND flights.airline = 'United Airlines'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

exec_score: 0
hard pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.airline = 'United Airlines'
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

exec_score: 0
hard pred: SELECT COUNT (*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'United Airlines'   AND airports.city = 'Aberdeen'
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

exec_score: 0
extra pred: SELECT airports.city FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY flights.sourceairport ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.airportcode ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT airports.airportcode FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.airportcode ORDER BY COUNT (*) ASC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

exec_score: 0
extra pred: SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT (*) ASC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

exec_score: 0
extra pred: SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT airline FROM flights GROUP BY airline ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT airline,        country FROM flights GROUP BY airline ORDER BY COUNT (*) ASC LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

exec_score: 0
extra pred: SELECT airlines.abbreviation,        airports.country FROM airports JOIN flights ON airports.airportcode = flights.sourceairport JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline ORDER BY COUNT (*) ASC LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

exec_score: 0
medium pred: SELECT airline FROM flights WHERE sourceairport = 'AHD'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

exec_score: 0
medium pred: SELECT airline FROM flights WHERE sourceairport = 'ALA'   AND airline!= 'American Airlines Inc.'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

exec_score: 0
medium pred: SELECT airline FROM flights WHERE destairport = 'AHD'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

exec_score: 0
medium pred: SELECT airline FROM flights WHERE destairport = 'ALA'   OR destairport = 'AHD'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

exec_score: 0
extra pred: SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

exec_score: 0
extra pred: SELECT airline FROM flights WHERE sourceairport = 'APG' INTERSECT   SELECT airline   FROM flights WHERE sourceairport = 'CVO'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

exec_score: 0
extra pred: SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

exec_score: 0
extra pred: SELECT airline FROM flights WHERE sourceairport = 'CVO' EXCEPT SELECT airline FROM flights WHERE sourceairport = 'APG'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

exec_score: 0
medium pred: SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

exec_score: 0
medium pred: SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) >= 10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

exec_score: 0
medium pred: SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

exec_score: 0
medium pred: SELECT airline FROM flights GROUP BY airline HAVING COUNT (*) < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

exec_score: 0
medium pred: SELECT flightno FROM flights WHERE airline = 'United Airlines'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

exec_score: 0
medium pred: SELECT flightno FROM flights WHERE airline = 'United Airlines'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

exec_score: 0
easy pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = 'APG'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

exec_score: 0
easy pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Austin'   AND airports.country = 'United States'   AND flights.airline = 'American Airlines'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

exec_score: 0
easy pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Albuquerque'   AND airports.country = 'USA'   AND airports.airportname = 'Albuquerque Airport'   AND flights.airline = 'American Airlines'
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

exec_score: 0
medium pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND flights.airline = 'American Airlines'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: SELECT flightno FROM flights WHERE sourceairport = 'ABR'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE city = 'Aberdeen'   AND airports.country = 'United States'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
medium pred: SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   AND airports.country = 'United Kingdom'
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

exec_score: 0
hard pred: SELECT COUNT (*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'   OR airports.city = 'Abilene'
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

exec_score: 0
hard pred: 2410884905
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

exec_score: 0
hard pred: SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT sourceairport      FROM flights) UNION SELECT airportname FROM airports WHERE airportcode NOT IN     (SELECT destairport      FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

exec_score: 0
hard pred: SELECT airportcode FROM airports EXCEPT SELECT sourceairport FROM flights UNION SELECT destairport FROM flights
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM employee

exec_score: 0
hard pred: SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id GROUP BY evaluation.employee_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

exec_score: 0
hard pred: SELECT name FROM employee EXCEPT SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

exec_score: 0
extra pred: SELECT shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
easy pred: SELECT * FROM hiring JOIN employee ON hiring.employee_id = employee.employee_id
easy gold: SELECT * FROM hiring

exec_score: 0
easy pred: SELECT * FROM hiring JOIN employee ON hiring.employee_id = employee.employee_id
easy gold: SELECT * FROM hiring

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM Documents

exec_score: 0
medium pred: SELECT documents.document_name,        documents.template_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE paragraphs.paragraph_text like '%w%'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM Templates

exec_score: 0
easy pred: templates
easy gold: SELECT count(*) FROM Templates

exec_score: 0
easy pred: SELECT DISTINCT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
easy gold: SELECT DISTINCT template_type_code FROM Templates

exec_score: 0
easy pred: SELECT COUNT (*) FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'CV'
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

exec_score: 0
medium pred: SELECT templates.template_type_code,        COUNT (*) FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY templates.template_type_code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

exec_score: 0
hard pred: SELECT templates.template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

exec_score: 0
medium pred: SELECT MIN (templates.version_number), templates.template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY COUNT (*) ASC LIMIT 1
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

exec_score: 0
medium pred: SELECT MIN (templates.version_number), templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code GROUP BY templates.template_type_code ORDER BY MIN (templates.version_number) ASC LIMIT 1
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

exec_score: 0
medium pred: SELECT templates.template_type_code FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Data base'   AND templates.date_effective_to =     (SELECT MAX (date_effective_to)      FROM templates      WHERE date_effective_from <= '2014-06-01 15:29:38' )
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

exec_score: 0
medium pred: SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'   AND templates.date_effective_to >= '2016-01-01 00:00:00'   AND templates.date_effective_from <= '2017-01-01 00:00:00'
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

exec_score: 0
hard pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT template_type_code      FROM documents)
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

exec_score: 0
hard pred: SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN     (SELECT template_type_code      FROM documents)
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

exec_score: 0
medium pred: SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY ref_template_types.template_type_description HAVING COUNT (*) > 100
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

exec_score: 0
medium pred: SELECT DISTINCT documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.date_effective_to > '2018-04-15'   AND templates.date_effective_from < '2018-04-15'
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

exec_score: 0
medium pred: SELECT template_id FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_details = 'Presentation'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

exec_score: 0
easy pred: 1046538 ###
easy gold: SELECT count(*) FROM Paragraphs

exec_score: 0
easy pred: ###
easy gold: SELECT count(*) FROM Paragraphs

exec_score: 0
medium pred: SELECT paragraph_text FROM paragraphs WHERE paragraph_text like '% Korea %'
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

exec_score: 0
medium pred: SELECT document_id,        document_name,        COUNT (*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY documents.document_id,          documents.document_name
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

exec_score: 0
medium pred: SELECT document_id,        document_name,        COUNT (*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY document_id,          document_name
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

exec_score: 0
extra pred: SELECT document_id,        document_name FROM paragraphs GROUP BY document_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT document_id,        document_name FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id GROUP BY document_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
easy pred: SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT (*) >= 2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

exec_score: 0
hard pred: SELECT document_id FROM paragraphs WHERE paragraph_text like '%Brazil%'   OR paragraph_text like '%Ireland%'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

exec_score: 0
hard pred: SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = math' and course_arrange.grade!= 'C'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

exec_score: 0
hard pred: SELECT teacher.name FROM course_arrange JOIN course ON course_arrange.course_id = course.course_id JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course.course = math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

exec_score: 0
medium pred: SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY teacher.teacher_id HAVING COUNT (*) >= 2
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

exec_score: 0
medium pred: SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT (*) >= 2
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

exec_score: 0
medium pred: SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership ASC
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

exec_score: 0
medium pred: SELECT name,        level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age ASC
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

exec_score: 0
medium pred: SELECT museum_id,        name FROM museum GROUP BY museum_id ORDER BY COUNT (*) DESC LIMIT 1
medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1

exec_score: 0
extra pred: SELECT visitor.id,        visitor.name,        visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id ORDER BY visit.total_spent DESC LIMIT 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

exec_score: 0
extra pred: SELECT museum_id,        museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY visit.museum_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

exec_score: 0
hard pred: SELECT visitor.name,        visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

exec_score: 0
medium pred: SELECT SUM (visit.total_spent) FROM visit JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 'Member'   AND visitor.name!= 'Unknown'
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

exec_score: 0
easy pred: matches
easy gold: SELECT count(*) FROM matches

exec_score: 0
medium pred: SELECT AVG (loser_age) FROM matches UNION SELECT AVG (winner_age) FROM matches
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

exec_score: 0
medium pred: SELECT AVG (loser_age) FROM matches UNION SELECT AVG (winner_age) FROM matches
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

exec_score: 0
easy pred: SELECT AVG (winner_rank) FROM rankings JOIN matches ON rankings.tours = matches.tourney_id AND rankings.player_id = matches.winner_id WHERE matches.winner_rank < 50   OR matches.loser_rank < 50
easy gold: SELECT avg(winner_rank) FROM matches

exec_score: 0
easy pred: SELECT AVG (winner_rank) FROM rankings JOIN matches ON rankings.tours = matches.tourney_id AND rankings.player_id = matches.winner_id WHERE matches.winner_rank < 750   OR matches.loser_rank < 750
easy gold: SELECT avg(winner_rank) FROM matches

exec_score: 0
easy pred: SELECT MAX (loser_rank) FROM matches WHERE score < 75
easy gold: SELECT min(loser_rank) FROM matches

exec_score: 0
easy pred: SELECT winner_rank FROM matches GROUP BY winner_rank ORDER BY COUNT (*) DESC LIMIT 1
easy gold: SELECT min(loser_rank) FROM matches

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name FROM   (SELECT *    FROM matches    JOIN players ON matches.winner_id = players.player_id    WHERE YEAR = 2013 INTERSECT      SELECT *      FROM matches      JOIN players ON matches.winner_id = players.player_id WHERE YEAR = 2016 ) JOIN players ON matches.winner_id = players.player_id
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2013' INTERSECT   SELECT players.first_name,          players.last_name   FROM players   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = '2016'
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

exec_score: 0
extra pred: SELECT players.country_code,        players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON rankings.tours = matches.tourney_id WHERE rankings.ranking = '1' INTERSECT   SELECT players.country_code,          players.first_name   FROM players   JOIN rankings ON players.player_id = rankings.player_id   JOIN matches ON rankings.tours = matches.tourney_id WHERE rankings.ranking = '2'   AND matches.tourney_name = 'Australian Open'   OR matches.tourney_name = 'WTA Championship'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

exec_score: 0
extra pred: SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'WTA Championship' INTERSECT   SELECT players.first_name,          players.country_code   FROM players   JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'Australian Open'
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

exec_score: 0
hard pred: SELECT players.first_name,        players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.country_code FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name,        rankings.ranking_points FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name,        players.player_id,        rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.last_name FROM rankings JOIN players ON rankings.player_id = players.player_id WHERE rankings.tours = 'Australian Open' GROUP BY players.player_id ORDER BY COUNT (*) DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

exec_score: 0
medium pred: SELECT players.first_name,        players.last_name,        matches.minutes FROM players JOIN matches ON players.player_id = matches.winner_id OR players.player_id = matches.loser_id ORDER BY matches.minutes DESC LIMIT 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

exec_score: 0
medium pred: SELECT players.first_name,        players.last_name,        players.country_code,        matches.tourney_date,        matches.tourney_name,        matches.match_num,        matches.minutes,        matches.score,        matches.surface FROM matches JOIN players ON matches.winner_id = players.player_id OR matches.loser_id = players.player_id ORDER BY minutes DESC LIMIT 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

exec_score: 0
medium pred: SELECT players.first_name,        rankings.ranking_points FROM rankings JOIN players ON rankings.player_id = players.player_id
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

exec_score: 0
medium pred: SELECT ranking_date,        COUNT (*) FROM rankings GROUP BY ranking_date
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

exec_score: 0
medium pred: SELECT tourney_date,        COUNT (*) FROM rankings GROUP BY tourney_date ORDER BY COUNT (*) DESC LIMIT 10
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

exec_score: 0
medium pred: SELECT players.first_name,        rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON matches.winner_id = rankings.player_id ORDER BY players.birth_date ASC LIMIT 3,       rankings.ranking_points DESC LIMIT 3
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

exec_score: 0
medium pred: SELECT players.first_name,        players.last_name,        rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points ASC LIMIT 3
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

exec_score: 0
medium pred: SELECT COUNT (DISTINCT matches.winner_id) FROM matches JOIN rankings ON matches.tourney_id = rankings.tours WHERE rankings.ranking = 'W' INTERSECT   SELECT COUNT (DISTINCT matches.winner_id)   FROM matches   JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

exec_score: 0
medium pred: SELECT COUNT (*) FROM   (SELECT DISTINCT matches.winner_id    FROM matches    JOIN rankings ON matches.tourney_id = rankings.tours    WHERE rankings.ranking = 'W'      AND matches.tourney_level = 'A' ) WHERE players.hand = 'L'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

exec_score: 0
hard pred: SELECT players.first_name,        players.country_code,        players.birth_date FROM   (SELECT *,           rank() OVER (                        ORDER BY winner_rank_points) AS rank    FROM matches    JOIN players ON matches.winner_id = players.player_id    GROUP BY matches.winner_id) JOIN players ON rankings.player_id = players.player_id WHERE rankings.ranking = rank
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

exec_score: 0
hard pred: SELECT players.first_name,        players.country_code,        players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY SUM (rankings.ranking_points) DESC LIMIT 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

exec_score: 0
medium pred: SELECT winner_hand,        COUNT (*) FROM matches GROUP BY winner_hand
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

exec_score: 0
medium pred: SELECT winner_hand,        COUNT (*) FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY winner_hand
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

exec_score: 0
easy pred: SELECT COUNT (*) FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.disposition_of_ship = 'Captured'   AND battle.result = 'Success'
easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'

exec_score: 0
medium pred: SELECT name, date, RESULT FROM battle
medium gold: SELECT name ,  date FROM battle

exec_score: 0
medium pred: SELECT MAX (death.killed), MIN (death.killed), death.note FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY death.note
medium gold: SELECT max(killed) ,  min(killed) FROM death

exec_score: 0
medium pred: SELECT death.note,        death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

exec_score: 0
medium pred: SELECT DISTINCT battle.id,                 battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig'   AND battle.result = 'loss'
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

exec_score: 0
hard pred: SELECT id,        name FROM   (SELECT *,           COUNT (*)    FROM death    GROUP BY id    HAVING SUM (killed) > 10) WHERE _
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

exec_score: 0
extra pred: SELECT ship.id,        ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id ORDER BY SUM (death.injured) DESC LIMIT 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
medium pred: SELECT DISTINCT battle.name FROM battle JOIN battle ON battle.latin_commander = 'Baldwin I' AND battle.bulgarian_commander = 'Kaloyan'
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

exec_score: 0
extra pred: SELECT COUNT (*) FROM death WHERE ship_type = 'Frigate'   AND tonnage = 225 EXCEPT SELECT COUNT (*) FROM ship JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = 225   AND ship.ship_type = 'Frigate'
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

exec_score: 0
extra pred: SELECT battle.name,        battle.result,        battle.bulgarian_commander FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.location = 'English Channel'   AND ship.disposition_of_ship!= 'Ship Lost'
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

exec_score: 0
easy pred: SELECT zip_postcode FROM addresses WHERE line_1 = 'Port Chelsea'   AND city = 'London'   AND country = 'UK'
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

exec_score: 0
extra pred: SELECT departments.department_name,        degree_programs.degree_program_id FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id GROUP BY degree_programs.degree_program_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

exec_score: 0
extra pred: SELECT departments.department_name,        degree_programs.degree_program_id FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY degree_programs.degree_program_id ORDER BY COUNT (*) DESC LIMIT 1
extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1

exec_score: 0
easy pred: SELECT COUNT (*) FROM degrees JOIN degree_programs ON degrees.degree_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id WHERE degrees.degree_code!= 'Ph'   OR degrees.degree_code!= 'MA'   OR degrees.degree_code!= 'MS'   OR degrees.degree_code!= 'MEng'   OR degrees.degree_code!= 'MPh'   OR degrees.degree_code!= 'MTA'   OR degrees.degree_code!= 'MU'   OR degrees.degree_code!= 'PH'   OR degrees.degree_code!= 'Psy'   OR degrees.degree_code!= 'RE'   OR degrees.degree_code!= 'Vet'
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

exec_score: 0
easy pred: SELECT COUNT (DISTINCT department_id) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

exec_score: 0
medium pred: SELECT courses.course_name,        courses.course_id FROM courses JOIN sections ON courses.course_id = sections.course_id GROUP BY courses.course_id HAVING COUNT (*) < 2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

